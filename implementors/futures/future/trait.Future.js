(function() {var implementors = {};
implementors["futures"] = [];
implementors["lazy_queue"] = [{"text":"impl&lt;Item, P, I&gt; Future for QueueProcessor&lt;Item, P, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: FnMut(Item) -&gt; I,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: IntoFuture,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;Item, P, I&gt; Future for QueueProcessor&lt;Item, P, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: FnMut(Item) -&gt; I,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: IntoFuture,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;Item, P, I&gt; Future for QueueProcessor&lt;Item, P, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: FnMut(Item) -&gt; I,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: IntoFuture,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;Item, P, I&gt; Future for QueueProcessor&lt;Item, P, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: FnMut(Item) -&gt; I,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: IntoFuture,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["tokio_sync"] = [{"text":"impl&lt;T&gt; Future for Receiver&lt;T&gt;","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()