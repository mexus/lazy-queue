(function() {var implementors = {};
implementors["fnv"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"fnv/struct.FnvHasher.html\" title=\"struct fnv::FnvHasher\">FnvHasher</a>","synthetic":true,"types":["fnv::FnvHasher"]}];
implementors["futures"] = [{"text":"impl&lt;T&gt; Freeze for <a class=\"enum\" href=\"futures/enum.Async.html\" title=\"enum futures::Async\">Async</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::poll::Async"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"enum\" href=\"futures/enum.AsyncSink.html\" title=\"enum futures::AsyncSink\">AsyncSink</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::poll::AsyncSink"]},{"text":"impl&lt;T, E&gt; Freeze for <a class=\"struct\" href=\"futures/future/struct.Empty.html\" title=\"struct futures::future::Empty\">Empty</a>&lt;T, E&gt;","synthetic":true,"types":["futures::future::empty::Empty"]},{"text":"impl&lt;F, R&gt; Freeze for <a class=\"struct\" href=\"futures/future/struct.Lazy.html\" title=\"struct futures::future::Lazy\">Lazy</a>&lt;F, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as <a class=\"trait\" href=\"futures/future/trait.IntoFuture.html\" title=\"trait futures::future::IntoFuture\">IntoFuture</a>&gt;::<a class=\"type\" href=\"futures/future/trait.IntoFuture.html#associatedtype.Future\" title=\"type futures::future::IntoFuture::Future\">Future</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::future::lazy::Lazy"]},{"text":"impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"futures/future/struct.PollFn.html\" title=\"struct futures::future::PollFn\">PollFn</a>&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::future::poll_fn::PollFn"]},{"text":"impl&lt;T, E&gt; Freeze for <a class=\"struct\" href=\"futures/future/struct.FutureResult.html\" title=\"struct futures::future::FutureResult\">FutureResult</a>&lt;T, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::future::result_::FutureResult"]},{"text":"impl&lt;T, S&gt; Freeze for <a class=\"enum\" href=\"futures/future/enum.Loop.html\" title=\"enum futures::future::Loop\">Loop</a>&lt;T, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::future::loop_fn::Loop"]},{"text":"impl&lt;A, F&gt; Freeze for <a class=\"struct\" href=\"futures/future/struct.LoopFn.html\" title=\"struct futures::future::LoopFn\">LoopFn</a>&lt;A, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A as <a class=\"trait\" href=\"futures/future/trait.IntoFuture.html\" title=\"trait futures::future::IntoFuture\">IntoFuture</a>&gt;::<a class=\"type\" href=\"futures/future/trait.IntoFuture.html#associatedtype.Future\" title=\"type futures::future::IntoFuture::Future\">Future</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::future::loop_fn::LoopFn"]},{"text":"impl&lt;A, B, F&gt; Freeze for <a class=\"struct\" href=\"futures/future/struct.AndThen.html\" title=\"struct futures::future::AndThen\">AndThen</a>&lt;A, B, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as <a class=\"trait\" href=\"futures/future/trait.IntoFuture.html\" title=\"trait futures::future::IntoFuture\">IntoFuture</a>&gt;::<a class=\"type\" href=\"futures/future/trait.IntoFuture.html#associatedtype.Future\" title=\"type futures::future::IntoFuture::Future\">Future</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::future::and_then::AndThen"]},{"text":"impl&lt;A&gt; Freeze for <a class=\"struct\" href=\"futures/future/struct.Flatten.html\" title=\"struct futures::future::Flatten\">Flatten</a>&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;A as <a class=\"trait\" href=\"futures/future/trait.Future.html\" title=\"trait futures::future::Future\">Future</a>&gt;::<a class=\"type\" href=\"futures/future/trait.Future.html#associatedtype.Item\" title=\"type futures::future::Future::Item\">Item</a> as <a class=\"trait\" href=\"futures/future/trait.IntoFuture.html\" title=\"trait futures::future::IntoFuture\">IntoFuture</a>&gt;::<a class=\"type\" href=\"futures/future/trait.IntoFuture.html#associatedtype.Future\" title=\"type futures::future::IntoFuture::Future\">Future</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::future::flatten::Flatten"]},{"text":"impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"futures/future/struct.FlattenStream.html\" title=\"struct futures::future::FlattenStream\">FlattenStream</a>&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F as <a class=\"trait\" href=\"futures/future/trait.Future.html\" title=\"trait futures::future::Future\">Future</a>&gt;::<a class=\"type\" href=\"futures/future/trait.Future.html#associatedtype.Item\" title=\"type futures::future::Future::Item\">Item</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::future::flatten_stream::FlattenStream"]},{"text":"impl&lt;A&gt; Freeze for <a class=\"struct\" href=\"futures/future/struct.Fuse.html\" title=\"struct futures::future::Fuse\">Fuse</a>&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::future::fuse::Fuse"]},{"text":"impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"futures/future/struct.IntoStream.html\" title=\"struct futures::future::IntoStream\">IntoStream</a>&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::future::into_stream::IntoStream"]},{"text":"impl&lt;A, B&gt; Freeze for <a class=\"struct\" href=\"futures/future/struct.Join.html\" title=\"struct futures::future::Join\">Join</a>&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A as <a class=\"trait\" href=\"futures/future/trait.Future.html\" title=\"trait futures::future::Future\">Future</a>&gt;::<a class=\"type\" href=\"futures/future/trait.Future.html#associatedtype.Item\" title=\"type futures::future::Future::Item\">Item</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as <a class=\"trait\" href=\"futures/future/trait.Future.html\" title=\"trait futures::future::Future\">Future</a>&gt;::<a class=\"type\" href=\"futures/future/trait.Future.html#associatedtype.Item\" title=\"type futures::future::Future::Item\">Item</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::future::join::Join"]},{"text":"impl&lt;A, B, C&gt; Freeze for <a class=\"struct\" href=\"futures/future/struct.Join3.html\" title=\"struct futures::future::Join3\">Join3</a>&lt;A, B, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A as <a class=\"trait\" href=\"futures/future/trait.Future.html\" title=\"trait futures::future::Future\">Future</a>&gt;::<a class=\"type\" href=\"futures/future/trait.Future.html#associatedtype.Item\" title=\"type futures::future::Future::Item\">Item</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as <a class=\"trait\" href=\"futures/future/trait.Future.html\" title=\"trait futures::future::Future\">Future</a>&gt;::<a class=\"type\" href=\"futures/future/trait.Future.html#associatedtype.Item\" title=\"type futures::future::Future::Item\">Item</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;C as <a class=\"trait\" href=\"futures/future/trait.Future.html\" title=\"trait futures::future::Future\">Future</a>&gt;::<a class=\"type\" href=\"futures/future/trait.Future.html#associatedtype.Item\" title=\"type futures::future::Future::Item\">Item</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::future::join::Join3"]},{"text":"impl&lt;A, B, C, D&gt; Freeze for <a class=\"struct\" href=\"futures/future/struct.Join4.html\" title=\"struct futures::future::Join4\">Join4</a>&lt;A, B, C, D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A as <a class=\"trait\" href=\"futures/future/trait.Future.html\" title=\"trait futures::future::Future\">Future</a>&gt;::<a class=\"type\" href=\"futures/future/trait.Future.html#associatedtype.Item\" title=\"type futures::future::Future::Item\">Item</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as <a class=\"trait\" href=\"futures/future/trait.Future.html\" title=\"trait futures::future::Future\">Future</a>&gt;::<a class=\"type\" href=\"futures/future/trait.Future.html#associatedtype.Item\" title=\"type futures::future::Future::Item\">Item</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;C as <a class=\"trait\" href=\"futures/future/trait.Future.html\" title=\"trait futures::future::Future\">Future</a>&gt;::<a class=\"type\" href=\"futures/future/trait.Future.html#associatedtype.Item\" title=\"type futures::future::Future::Item\">Item</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;D as <a class=\"trait\" href=\"futures/future/trait.Future.html\" title=\"trait futures::future::Future\">Future</a>&gt;::<a class=\"type\" href=\"futures/future/trait.Future.html#associatedtype.Item\" title=\"type futures::future::Future::Item\">Item</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::future::join::Join4"]},{"text":"impl&lt;A, B, C, D, E&gt; Freeze for <a class=\"struct\" href=\"futures/future/struct.Join5.html\" title=\"struct futures::future::Join5\">Join5</a>&lt;A, B, C, D, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A as <a class=\"trait\" href=\"futures/future/trait.Future.html\" title=\"trait futures::future::Future\">Future</a>&gt;::<a class=\"type\" href=\"futures/future/trait.Future.html#associatedtype.Item\" title=\"type futures::future::Future::Item\">Item</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as <a class=\"trait\" href=\"futures/future/trait.Future.html\" title=\"trait futures::future::Future\">Future</a>&gt;::<a class=\"type\" href=\"futures/future/trait.Future.html#associatedtype.Item\" title=\"type futures::future::Future::Item\">Item</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;C as <a class=\"trait\" href=\"futures/future/trait.Future.html\" title=\"trait futures::future::Future\">Future</a>&gt;::<a class=\"type\" href=\"futures/future/trait.Future.html#associatedtype.Item\" title=\"type futures::future::Future::Item\">Item</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;D as <a class=\"trait\" href=\"futures/future/trait.Future.html\" title=\"trait futures::future::Future\">Future</a>&gt;::<a class=\"type\" href=\"futures/future/trait.Future.html#associatedtype.Item\" title=\"type futures::future::Future::Item\">Item</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;E as <a class=\"trait\" href=\"futures/future/trait.Future.html\" title=\"trait futures::future::Future\">Future</a>&gt;::<a class=\"type\" href=\"futures/future/trait.Future.html#associatedtype.Item\" title=\"type futures::future::Future::Item\">Item</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::future::join::Join5"]},{"text":"impl&lt;A, F&gt; Freeze for <a class=\"struct\" href=\"futures/future/struct.Map.html\" title=\"struct futures::future::Map\">Map</a>&lt;A, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::future::map::Map"]},{"text":"impl&lt;A, F&gt; Freeze for <a class=\"struct\" href=\"futures/future/struct.MapErr.html\" title=\"struct futures::future::MapErr\">MapErr</a>&lt;A, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::future::map_err::MapErr"]},{"text":"impl&lt;A, E&gt; Freeze for <a class=\"struct\" href=\"futures/future/struct.FromErr.html\" title=\"struct futures::future::FromErr\">FromErr</a>&lt;A, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::future::from_err::FromErr"]},{"text":"impl&lt;A, B, F&gt; Freeze for <a class=\"struct\" href=\"futures/future/struct.OrElse.html\" title=\"struct futures::future::OrElse\">OrElse</a>&lt;A, B, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as <a class=\"trait\" href=\"futures/future/trait.IntoFuture.html\" title=\"trait futures::future::IntoFuture\">IntoFuture</a>&gt;::<a class=\"type\" href=\"futures/future/trait.IntoFuture.html#associatedtype.Future\" title=\"type futures::future::IntoFuture::Future\">Future</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::future::or_else::OrElse"]},{"text":"impl&lt;A, B&gt; Freeze for <a class=\"struct\" href=\"futures/future/struct.Select.html\" title=\"struct futures::future::Select\">Select</a>&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::future::select::Select"]},{"text":"impl&lt;A, B&gt; Freeze for <a class=\"struct\" href=\"futures/future/struct.SelectNext.html\" title=\"struct futures::future::SelectNext\">SelectNext</a>&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::future::select::SelectNext"]},{"text":"impl&lt;A, B&gt; Freeze for <a class=\"struct\" href=\"futures/future/struct.Select2.html\" title=\"struct futures::future::Select2\">Select2</a>&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::future::select2::Select2"]},{"text":"impl&lt;A, B, F&gt; Freeze for <a class=\"struct\" href=\"futures/future/struct.Then.html\" title=\"struct futures::future::Then\">Then</a>&lt;A, B, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as <a class=\"trait\" href=\"futures/future/trait.IntoFuture.html\" title=\"trait futures::future::IntoFuture\">IntoFuture</a>&gt;::<a class=\"type\" href=\"futures/future/trait.IntoFuture.html#associatedtype.Future\" title=\"type futures::future::IntoFuture::Future\">Future</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::future::then::Then"]},{"text":"impl&lt;A, B&gt; Freeze for <a class=\"enum\" href=\"futures/future/enum.Either.html\" title=\"enum futures::future::Either\">Either</a>&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::future::either::Either"]},{"text":"impl&lt;A, F&gt; Freeze for <a class=\"struct\" href=\"futures/future/struct.Inspect.html\" title=\"struct futures::future::Inspect\">Inspect</a>&lt;A, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::future::inspect::Inspect"]},{"text":"impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"futures/future/struct.CatchUnwind.html\" title=\"struct futures::future::CatchUnwind\">CatchUnwind</a>&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::future::catch_unwind::CatchUnwind"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"futures/future/struct.JoinAll.html\" title=\"struct futures::future::JoinAll\">JoinAll</a>&lt;I&gt;","synthetic":true,"types":["futures::future::join_all::JoinAll"]},{"text":"impl&lt;A&gt; Freeze for <a class=\"struct\" href=\"futures/future/struct.SelectAll.html\" title=\"struct futures::future::SelectAll\">SelectAll</a>&lt;A&gt;","synthetic":true,"types":["futures::future::select_all::SelectAll"]},{"text":"impl&lt;A&gt; Freeze for <a class=\"struct\" href=\"futures/future/struct.SelectOk.html\" title=\"struct futures::future::SelectOk\">SelectOk</a>&lt;A&gt;","synthetic":true,"types":["futures::future::select_ok::SelectOk"]},{"text":"impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"futures/future/struct.Shared.html\" title=\"struct futures::future::Shared\">Shared</a>&lt;F&gt;","synthetic":true,"types":["futures::future::shared::Shared"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"futures/future/struct.SharedItem.html\" title=\"struct futures::future::SharedItem\">SharedItem</a>&lt;T&gt;","synthetic":true,"types":["futures::future::shared::SharedItem"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"futures/future/struct.SharedError.html\" title=\"struct futures::future::SharedError\">SharedError</a>&lt;E&gt;","synthetic":true,"types":["futures::future::shared::SharedError"]},{"text":"impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"futures/future/struct.ExecuteError.html\" title=\"struct futures::future::ExecuteError\">ExecuteError</a>&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::future::ExecuteError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"futures/future/enum.ExecuteErrorKind.html\" title=\"enum futures::future::ExecuteErrorKind\">ExecuteErrorKind</a>","synthetic":true,"types":["futures::future::ExecuteErrorKind"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"futures/stream/struct.Iter.html\" title=\"struct futures::stream::Iter\">Iter</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::stream::iter::Iter"]},{"text":"impl&lt;I, E&gt; Freeze for <a class=\"struct\" href=\"futures/stream/struct.IterOk.html\" title=\"struct futures::stream::IterOk\">IterOk</a>&lt;I, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::stream::iter_ok::IterOk"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"futures/stream/struct.IterResult.html\" title=\"struct futures::stream::IterResult\">IterResult</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::stream::iter_result::IterResult"]},{"text":"impl&lt;T, E&gt; Freeze for <a class=\"struct\" href=\"futures/stream/struct.Repeat.html\" title=\"struct futures::stream::Repeat\">Repeat</a>&lt;T, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::stream::repeat::Repeat"]},{"text":"impl&lt;S, F, U&gt; Freeze for <a class=\"struct\" href=\"futures/stream/struct.AndThen.html\" title=\"struct futures::stream::AndThen\">AndThen</a>&lt;S, F, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;U as <a class=\"trait\" href=\"futures/future/trait.IntoFuture.html\" title=\"trait futures::future::IntoFuture\">IntoFuture</a>&gt;::<a class=\"type\" href=\"futures/future/trait.IntoFuture.html#associatedtype.Future\" title=\"type futures::future::IntoFuture::Future\">Future</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::stream::and_then::AndThen"]},{"text":"impl&lt;S1, S2&gt; Freeze for <a class=\"struct\" href=\"futures/stream/struct.Chain.html\" title=\"struct futures::stream::Chain\">Chain</a>&lt;S1, S2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S1: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;S2: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::stream::chain::Chain"]},{"text":"impl&lt;S&gt; Freeze for <a class=\"struct\" href=\"futures/stream/struct.Concat2.html\" title=\"struct futures::stream::Concat2\">Concat2</a>&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S as <a class=\"trait\" href=\"futures/stream/trait.Stream.html\" title=\"trait futures::stream::Stream\">Stream</a>&gt;::<a class=\"type\" href=\"futures/stream/trait.Stream.html#associatedtype.Item\" title=\"type futures::stream::Stream::Item\">Item</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::stream::concat::Concat2"]},{"text":"impl&lt;S&gt; Freeze for <a class=\"struct\" href=\"futures/stream/struct.Concat.html\" title=\"struct futures::stream::Concat\">Concat</a>&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S as <a class=\"trait\" href=\"futures/stream/trait.Stream.html\" title=\"trait futures::stream::Stream\">Stream</a>&gt;::<a class=\"type\" href=\"futures/stream/trait.Stream.html#associatedtype.Item\" title=\"type futures::stream::Stream::Item\">Item</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::stream::concat::Concat"]},{"text":"impl&lt;T, E&gt; Freeze for <a class=\"struct\" href=\"futures/stream/struct.Empty.html\" title=\"struct futures::stream::Empty\">Empty</a>&lt;T, E&gt;","synthetic":true,"types":["futures::stream::empty::Empty"]},{"text":"impl&lt;S, F&gt; Freeze for <a class=\"struct\" href=\"futures/stream/struct.Filter.html\" title=\"struct futures::stream::Filter\">Filter</a>&lt;S, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::stream::filter::Filter"]},{"text":"impl&lt;S, F&gt; Freeze for <a class=\"struct\" href=\"futures/stream/struct.FilterMap.html\" title=\"struct futures::stream::FilterMap\">FilterMap</a>&lt;S, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::stream::filter_map::FilterMap"]},{"text":"impl&lt;S&gt; Freeze for <a class=\"struct\" href=\"futures/stream/struct.Flatten.html\" title=\"struct futures::stream::Flatten\">Flatten</a>&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S as <a class=\"trait\" href=\"futures/stream/trait.Stream.html\" title=\"trait futures::stream::Stream\">Stream</a>&gt;::<a class=\"type\" href=\"futures/stream/trait.Stream.html#associatedtype.Item\" title=\"type futures::stream::Stream::Item\">Item</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::stream::flatten::Flatten"]},{"text":"impl&lt;S, F, Fut, T&gt; Freeze for <a class=\"struct\" href=\"futures/stream/struct.Fold.html\" title=\"struct futures::stream::Fold\">Fold</a>&lt;S, F, Fut, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut as <a class=\"trait\" href=\"futures/future/trait.IntoFuture.html\" title=\"trait futures::future::IntoFuture\">IntoFuture</a>&gt;::<a class=\"type\" href=\"futures/future/trait.IntoFuture.html#associatedtype.Future\" title=\"type futures::future::IntoFuture::Future\">Future</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::stream::fold::Fold"]},{"text":"impl&lt;S, F, U&gt; Freeze for <a class=\"struct\" href=\"futures/stream/struct.ForEach.html\" title=\"struct futures::stream::ForEach\">ForEach</a>&lt;S, F, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;U as <a class=\"trait\" href=\"futures/future/trait.IntoFuture.html\" title=\"trait futures::future::IntoFuture\">IntoFuture</a>&gt;::<a class=\"type\" href=\"futures/future/trait.IntoFuture.html#associatedtype.Future\" title=\"type futures::future::IntoFuture::Future\">Future</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::stream::for_each::ForEach"]},{"text":"impl&lt;S, E&gt; Freeze for <a class=\"struct\" href=\"futures/stream/struct.FromErr.html\" title=\"struct futures::stream::FromErr\">FromErr</a>&lt;S, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::stream::from_err::FromErr"]},{"text":"impl&lt;S&gt; Freeze for <a class=\"struct\" href=\"futures/stream/struct.Fuse.html\" title=\"struct futures::stream::Fuse\">Fuse</a>&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::stream::fuse::Fuse"]},{"text":"impl&lt;S&gt; Freeze for <a class=\"struct\" href=\"futures/stream/struct.StreamFuture.html\" title=\"struct futures::stream::StreamFuture\">StreamFuture</a>&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::stream::future::StreamFuture"]},{"text":"impl&lt;S, F&gt; Freeze for <a class=\"struct\" href=\"futures/stream/struct.Inspect.html\" title=\"struct futures::stream::Inspect\">Inspect</a>&lt;S, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::stream::inspect::Inspect"]},{"text":"impl&lt;S, F&gt; Freeze for <a class=\"struct\" href=\"futures/stream/struct.InspectErr.html\" title=\"struct futures::stream::InspectErr\">InspectErr</a>&lt;S, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::stream::inspect_err::InspectErr"]},{"text":"impl&lt;S, F&gt; Freeze for <a class=\"struct\" href=\"futures/stream/struct.Map.html\" title=\"struct futures::stream::Map\">Map</a>&lt;S, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::stream::map::Map"]},{"text":"impl&lt;S, F&gt; Freeze for <a class=\"struct\" href=\"futures/stream/struct.MapErr.html\" title=\"struct futures::stream::MapErr\">MapErr</a>&lt;S, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::stream::map_err::MapErr"]},{"text":"impl&lt;S1, S2&gt; Freeze for <a class=\"struct\" href=\"futures/stream/struct.Merge.html\" title=\"struct futures::stream::Merge\">Merge</a>&lt;S1, S2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S1: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;S2: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S2 as <a class=\"trait\" href=\"futures/stream/trait.Stream.html\" title=\"trait futures::stream::Stream\">Stream</a>&gt;::<a class=\"type\" href=\"futures/stream/trait.Stream.html#associatedtype.Error\" title=\"type futures::stream::Stream::Error\">Error</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::stream::merge::Merge"]},{"text":"impl&lt;I1, I2&gt; Freeze for <a class=\"enum\" href=\"futures/stream/enum.MergedItem.html\" title=\"enum futures::stream::MergedItem\">MergedItem</a>&lt;I1, I2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I1: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;I2: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::stream::merge::MergedItem"]},{"text":"impl&lt;T, E&gt; Freeze for <a class=\"struct\" href=\"futures/stream/struct.Once.html\" title=\"struct futures::stream::Once\">Once</a>&lt;T, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::stream::once::Once"]},{"text":"impl&lt;S, F, U&gt; Freeze for <a class=\"struct\" href=\"futures/stream/struct.OrElse.html\" title=\"struct futures::stream::OrElse\">OrElse</a>&lt;S, F, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;U as <a class=\"trait\" href=\"futures/future/trait.IntoFuture.html\" title=\"trait futures::future::IntoFuture\">IntoFuture</a>&gt;::<a class=\"type\" href=\"futures/future/trait.IntoFuture.html#associatedtype.Future\" title=\"type futures::future::IntoFuture::Future\">Future</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::stream::or_else::OrElse"]},{"text":"impl&lt;S&gt; Freeze for <a class=\"struct\" href=\"futures/stream/struct.Peekable.html\" title=\"struct futures::stream::Peekable\">Peekable</a>&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S as <a class=\"trait\" href=\"futures/stream/trait.Stream.html\" title=\"trait futures::stream::Stream\">Stream</a>&gt;::<a class=\"type\" href=\"futures/stream/trait.Stream.html#associatedtype.Item\" title=\"type futures::stream::Stream::Item\">Item</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::stream::peek::Peekable"]},{"text":"impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"futures/stream/struct.PollFn.html\" title=\"struct futures::stream::PollFn\">PollFn</a>&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::stream::poll_fn::PollFn"]},{"text":"impl&lt;S1, S2&gt; Freeze for <a class=\"struct\" href=\"futures/stream/struct.Select.html\" title=\"struct futures::stream::Select\">Select</a>&lt;S1, S2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S1: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;S2: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::stream::select::Select"]},{"text":"impl&lt;S&gt; Freeze for <a class=\"struct\" href=\"futures/stream/struct.Skip.html\" title=\"struct futures::stream::Skip\">Skip</a>&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::stream::skip::Skip"]},{"text":"impl&lt;S, P, R&gt; Freeze for <a class=\"struct\" href=\"futures/stream/struct.SkipWhile.html\" title=\"struct futures::stream::SkipWhile\">SkipWhile</a>&lt;S, P, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as <a class=\"trait\" href=\"futures/future/trait.IntoFuture.html\" title=\"trait futures::future::IntoFuture\">IntoFuture</a>&gt;::<a class=\"type\" href=\"futures/future/trait.IntoFuture.html#associatedtype.Future\" title=\"type futures::future::IntoFuture::Future\">Future</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S as <a class=\"trait\" href=\"futures/stream/trait.Stream.html\" title=\"trait futures::stream::Stream\">Stream</a>&gt;::<a class=\"type\" href=\"futures/stream/trait.Stream.html#associatedtype.Item\" title=\"type futures::stream::Stream::Item\">Item</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::stream::skip_while::SkipWhile"]},{"text":"impl&lt;S&gt; Freeze for <a class=\"struct\" href=\"futures/stream/struct.Take.html\" title=\"struct futures::stream::Take\">Take</a>&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::stream::take::Take"]},{"text":"impl&lt;S, P, R&gt; Freeze for <a class=\"struct\" href=\"futures/stream/struct.TakeWhile.html\" title=\"struct futures::stream::TakeWhile\">TakeWhile</a>&lt;S, P, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as <a class=\"trait\" href=\"futures/future/trait.IntoFuture.html\" title=\"trait futures::future::IntoFuture\">IntoFuture</a>&gt;::<a class=\"type\" href=\"futures/future/trait.IntoFuture.html#associatedtype.Future\" title=\"type futures::future::IntoFuture::Future\">Future</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S as <a class=\"trait\" href=\"futures/stream/trait.Stream.html\" title=\"trait futures::stream::Stream\">Stream</a>&gt;::<a class=\"type\" href=\"futures/stream/trait.Stream.html#associatedtype.Item\" title=\"type futures::stream::Stream::Item\">Item</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::stream::take_while::TakeWhile"]},{"text":"impl&lt;S, F, U&gt; Freeze for <a class=\"struct\" href=\"futures/stream/struct.Then.html\" title=\"struct futures::stream::Then\">Then</a>&lt;S, F, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;U as <a class=\"trait\" href=\"futures/future/trait.IntoFuture.html\" title=\"trait futures::future::IntoFuture\">IntoFuture</a>&gt;::<a class=\"type\" href=\"futures/future/trait.IntoFuture.html#associatedtype.Future\" title=\"type futures::future::IntoFuture::Future\">Future</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::stream::then::Then"]},{"text":"impl&lt;T, F, Fut&gt; Freeze for <a class=\"struct\" href=\"futures/stream/struct.Unfold.html\" title=\"struct futures::stream::Unfold\">Unfold</a>&lt;T, F, Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut as <a class=\"trait\" href=\"futures/future/trait.IntoFuture.html\" title=\"trait futures::future::IntoFuture\">IntoFuture</a>&gt;::<a class=\"type\" href=\"futures/future/trait.IntoFuture.html#associatedtype.Future\" title=\"type futures::future::IntoFuture::Future\">Future</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::stream::unfold::Unfold"]},{"text":"impl&lt;S1, S2&gt; Freeze for <a class=\"struct\" href=\"futures/stream/struct.Zip.html\" title=\"struct futures::stream::Zip\">Zip</a>&lt;S1, S2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S1: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;S2: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S1 as <a class=\"trait\" href=\"futures/stream/trait.Stream.html\" title=\"trait futures::stream::Stream\">Stream</a>&gt;::<a class=\"type\" href=\"futures/stream/trait.Stream.html#associatedtype.Item\" title=\"type futures::stream::Stream::Item\">Item</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S2 as <a class=\"trait\" href=\"futures/stream/trait.Stream.html\" title=\"trait futures::stream::Stream\">Stream</a>&gt;::<a class=\"type\" href=\"futures/stream/trait.Stream.html#associatedtype.Item\" title=\"type futures::stream::Stream::Item\">Item</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::stream::zip::Zip"]},{"text":"impl&lt;T, U&gt; Freeze for <a class=\"struct\" href=\"futures/stream/struct.Forward.html\" title=\"struct futures::stream::Forward\">Forward</a>&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as <a class=\"trait\" href=\"futures/stream/trait.Stream.html\" title=\"trait futures::stream::Stream\">Stream</a>&gt;::<a class=\"type\" href=\"futures/stream/trait.Stream.html#associatedtype.Item\" title=\"type futures::stream::Stream::Item\">Item</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::stream::forward::Forward"]},{"text":"impl&lt;S&gt; Freeze for <a class=\"struct\" href=\"futures/stream/struct.Buffered.html\" title=\"struct futures::stream::Buffered\">Buffered</a>&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::stream::buffered::Buffered"]},{"text":"impl&lt;S&gt; Freeze for <a class=\"struct\" href=\"futures/stream/struct.BufferUnordered.html\" title=\"struct futures::stream::BufferUnordered\">BufferUnordered</a>&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::stream::buffer_unordered::BufferUnordered"]},{"text":"impl&lt;S&gt; Freeze for <a class=\"struct\" href=\"futures/stream/struct.CatchUnwind.html\" title=\"struct futures::stream::CatchUnwind\">CatchUnwind</a>&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::stream::catch_unwind::CatchUnwind"]},{"text":"impl&lt;S&gt; Freeze for <a class=\"struct\" href=\"futures/stream/struct.Chunks.html\" title=\"struct futures::stream::Chunks\">Chunks</a>&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S as <a class=\"trait\" href=\"futures/stream/trait.Stream.html\" title=\"trait futures::stream::Stream\">Stream</a>&gt;::<a class=\"type\" href=\"futures/stream/trait.Stream.html#associatedtype.Error\" title=\"type futures::stream::Stream::Error\">Error</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::stream::chunks::Chunks"]},{"text":"impl&lt;S&gt; Freeze for <a class=\"struct\" href=\"futures/stream/struct.Collect.html\" title=\"struct futures::stream::Collect\">Collect</a>&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::stream::collect::Collect"]},{"text":"impl&lt;S&gt; !Freeze for <a class=\"struct\" href=\"futures/stream/struct.Wait.html\" title=\"struct futures::stream::Wait\">Wait</a>&lt;S&gt;","synthetic":true,"types":["futures::stream::wait::Wait"]},{"text":"impl&lt;S&gt; Freeze for <a class=\"struct\" href=\"futures/stream/struct.SplitStream.html\" title=\"struct futures::stream::SplitStream\">SplitStream</a>&lt;S&gt;","synthetic":true,"types":["futures::stream::split::SplitStream"]},{"text":"impl&lt;S&gt; Freeze for <a class=\"struct\" href=\"futures/stream/struct.SplitSink.html\" title=\"struct futures::stream::SplitSink\">SplitSink</a>&lt;S&gt;","synthetic":true,"types":["futures::stream::split::SplitSink"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"futures/stream/struct.ReuniteError.html\" title=\"struct futures::stream::ReuniteError\">ReuniteError</a>&lt;T&gt;","synthetic":true,"types":["futures::stream::split::ReuniteError"]},{"text":"impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"futures/stream/futures_unordered/struct.FuturesUnordered.html\" title=\"struct futures::stream::futures_unordered::FuturesUnordered\">FuturesUnordered</a>&lt;F&gt;","synthetic":true,"types":["futures::stream::futures_unordered::FuturesUnordered"]},{"text":"impl&lt;'a, F&gt; Freeze for <a class=\"struct\" href=\"futures/stream/futures_unordered/struct.IterMut.html\" title=\"struct futures::stream::futures_unordered::IterMut\">IterMut</a>&lt;'a, F&gt;","synthetic":true,"types":["futures::stream::futures_unordered::IterMut"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"futures/stream/struct.FuturesOrdered.html\" title=\"struct futures::stream::FuturesOrdered\">FuturesOrdered</a>&lt;T&gt;","synthetic":true,"types":["futures::stream::futures_ordered::FuturesOrdered"]},{"text":"impl&lt;S, U, F, Fut&gt; Freeze for <a class=\"struct\" href=\"futures/sink/struct.With.html\" title=\"struct futures::sink::With\">With</a>&lt;S, U, F, Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut as <a class=\"trait\" href=\"futures/future/trait.IntoFuture.html\" title=\"trait futures::future::IntoFuture\">IntoFuture</a>&gt;::<a class=\"type\" href=\"futures/future/trait.IntoFuture.html#associatedtype.Future\" title=\"type futures::future::IntoFuture::Future\">Future</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S as <a class=\"trait\" href=\"futures/sink/trait.Sink.html\" title=\"trait futures::sink::Sink\">Sink</a>&gt;::<a class=\"type\" href=\"futures/sink/trait.Sink.html#associatedtype.SinkItem\" title=\"type futures::sink::Sink::SinkItem\">SinkItem</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::sink::with::With"]},{"text":"impl&lt;S, U, F, St&gt; Freeze for <a class=\"struct\" href=\"futures/sink/struct.WithFlatMap.html\" title=\"struct futures::sink::WithFlatMap\">WithFlatMap</a>&lt;S, U, F, St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S as <a class=\"trait\" href=\"futures/sink/trait.Sink.html\" title=\"trait futures::sink::Sink\">Sink</a>&gt;::<a class=\"type\" href=\"futures/sink/trait.Sink.html#associatedtype.SinkItem\" title=\"type futures::sink::Sink::SinkItem\">SinkItem</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::sink::with_flat_map::WithFlatMap"]},{"text":"impl&lt;S&gt; Freeze for <a class=\"struct\" href=\"futures/sink/struct.Flush.html\" title=\"struct futures::sink::Flush\">Flush</a>&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::sink::flush::Flush"]},{"text":"impl&lt;S, E&gt; Freeze for <a class=\"struct\" href=\"futures/sink/struct.SinkFromErr.html\" title=\"struct futures::sink::SinkFromErr\">SinkFromErr</a>&lt;S, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::sink::from_err::SinkFromErr"]},{"text":"impl&lt;S&gt; Freeze for <a class=\"struct\" href=\"futures/sink/struct.Send.html\" title=\"struct futures::sink::Send\">Send</a>&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S as <a class=\"trait\" href=\"futures/sink/trait.Sink.html\" title=\"trait futures::sink::Sink\">Sink</a>&gt;::<a class=\"type\" href=\"futures/sink/trait.Sink.html#associatedtype.SinkItem\" title=\"type futures::sink::Sink::SinkItem\">SinkItem</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::sink::send::Send"]},{"text":"impl&lt;T, U&gt; Freeze for <a class=\"struct\" href=\"futures/sink/struct.SendAll.html\" title=\"struct futures::sink::SendAll\">SendAll</a>&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;U as <a class=\"trait\" href=\"futures/stream/trait.Stream.html\" title=\"trait futures::stream::Stream\">Stream</a>&gt;::<a class=\"type\" href=\"futures/stream/trait.Stream.html#associatedtype.Item\" title=\"type futures::stream::Stream::Item\">Item</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::sink::send_all::SendAll"]},{"text":"impl&lt;S, F&gt; Freeze for <a class=\"struct\" href=\"futures/sink/struct.SinkMapErr.html\" title=\"struct futures::sink::SinkMapErr\">SinkMapErr</a>&lt;S, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::sink::map_err::SinkMapErr"]},{"text":"impl&lt;A, B&gt; Freeze for <a class=\"struct\" href=\"futures/sink/struct.Fanout.html\" title=\"struct futures::sink::Fanout\">Fanout</a>&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A as <a class=\"trait\" href=\"futures/sink/trait.Sink.html\" title=\"trait futures::sink::Sink\">Sink</a>&gt;::<a class=\"type\" href=\"futures/sink/trait.Sink.html#associatedtype.SinkItem\" title=\"type futures::sink::Sink::SinkItem\">SinkItem</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as <a class=\"trait\" href=\"futures/sink/trait.Sink.html\" title=\"trait futures::sink::Sink\">Sink</a>&gt;::<a class=\"type\" href=\"futures/sink/trait.Sink.html#associatedtype.SinkItem\" title=\"type futures::sink::Sink::SinkItem\">SinkItem</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::sink::fanout::Fanout"]},{"text":"impl&lt;S&gt; Freeze for <a class=\"struct\" href=\"futures/sink/struct.Buffer.html\" title=\"struct futures::sink::Buffer\">Buffer</a>&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::sink::buffer::Buffer"]},{"text":"impl&lt;S&gt; !Freeze for <a class=\"struct\" href=\"futures/sink/struct.Wait.html\" title=\"struct futures::sink::Wait\">Wait</a>&lt;S&gt;","synthetic":true,"types":["futures::sink::wait::Wait"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"futures/task/struct.AtomicTask.html\" title=\"struct futures::task::AtomicTask\">AtomicTask</a>","synthetic":true,"types":["futures::task_impl::atomic_task::AtomicTask"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"futures/task/struct.LocalKey.html\" title=\"struct futures::task::LocalKey\">LocalKey</a>&lt;T&gt;","synthetic":true,"types":["futures::task_impl::std::data::LocalKey"]},{"text":"impl Freeze for <a class=\"struct\" href=\"futures/task/struct.UnparkEvent.html\" title=\"struct futures::task::UnparkEvent\">UnparkEvent</a>","synthetic":true,"types":["futures::task_impl::std::UnparkEvent"]},{"text":"impl Freeze for <a class=\"struct\" href=\"futures/task/struct.Task.html\" title=\"struct futures::task::Task\">Task</a>","synthetic":true,"types":["futures::task_impl::Task"]},{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"futures/executor/struct.Spawn.html\" title=\"struct futures::executor::Spawn\">Spawn</a>&lt;T&gt;","synthetic":true,"types":["futures::task_impl::Spawn"]},{"text":"impl Freeze for <a class=\"struct\" href=\"futures/executor/struct.NotifyHandle.html\" title=\"struct futures::executor::NotifyHandle\">NotifyHandle</a>","synthetic":true,"types":["futures::task_impl::NotifyHandle"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"futures/sync/oneshot/struct.Receiver.html\" title=\"struct futures::sync::oneshot::Receiver\">Receiver</a>&lt;T&gt;","synthetic":true,"types":["futures::sync::oneshot::Receiver"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"futures/sync/oneshot/struct.Sender.html\" title=\"struct futures::sync::oneshot::Sender\">Sender</a>&lt;T&gt;","synthetic":true,"types":["futures::sync::oneshot::Sender"]},{"text":"impl Freeze for <a class=\"struct\" href=\"futures/sync/oneshot/struct.Canceled.html\" title=\"struct futures::sync::oneshot::Canceled\">Canceled</a>","synthetic":true,"types":["futures::sync::oneshot::Canceled"]},{"text":"impl&lt;T, E&gt; Freeze for <a class=\"struct\" href=\"futures/sync/oneshot/struct.SpawnHandle.html\" title=\"struct futures::sync::oneshot::SpawnHandle\">SpawnHandle</a>&lt;T, E&gt;","synthetic":true,"types":["futures::sync::oneshot::SpawnHandle"]},{"text":"impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"futures/sync/oneshot/struct.Execute.html\" title=\"struct futures::sync::oneshot::Execute\">Execute</a>&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::sync::oneshot::Execute"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"futures/sync/mpsc/struct.Sender.html\" title=\"struct futures::sync::mpsc::Sender\">Sender</a>&lt;T&gt;","synthetic":true,"types":["futures::sync::mpsc::Sender"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"futures/sync/mpsc/struct.UnboundedSender.html\" title=\"struct futures::sync::mpsc::UnboundedSender\">UnboundedSender</a>&lt;T&gt;","synthetic":true,"types":["futures::sync::mpsc::UnboundedSender"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"futures/sync/mpsc/struct.Receiver.html\" title=\"struct futures::sync::mpsc::Receiver\">Receiver</a>&lt;T&gt;","synthetic":true,"types":["futures::sync::mpsc::Receiver"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"futures/sync/mpsc/struct.UnboundedReceiver.html\" title=\"struct futures::sync::mpsc::UnboundedReceiver\">UnboundedReceiver</a>&lt;T&gt;","synthetic":true,"types":["futures::sync::mpsc::UnboundedReceiver"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"futures/sync/mpsc/struct.SendError.html\" title=\"struct futures::sync::mpsc::SendError\">SendError</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::sync::mpsc::SendError"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"futures/sync/mpsc/struct.TrySendError.html\" title=\"struct futures::sync::mpsc::TrySendError\">TrySendError</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::sync::mpsc::TrySendError"]},{"text":"impl&lt;Item, Error&gt; Freeze for <a class=\"struct\" href=\"futures/sync/mpsc/struct.SpawnHandle.html\" title=\"struct futures::sync::mpsc::SpawnHandle\">SpawnHandle</a>&lt;Item, Error&gt;","synthetic":true,"types":["futures::sync::mpsc::SpawnHandle"]},{"text":"impl&lt;S&gt; Freeze for <a class=\"struct\" href=\"futures/sync/mpsc/struct.Execute.html\" title=\"struct futures::sync::mpsc::Execute\">Execute</a>&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S as <a class=\"trait\" href=\"futures/stream/trait.Stream.html\" title=\"trait futures::stream::Stream\">Stream</a>&gt;::<a class=\"type\" href=\"futures/stream/trait.Stream.html#associatedtype.Error\" title=\"type futures::stream::Stream::Error\">Error</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S as <a class=\"trait\" href=\"futures/stream/trait.Stream.html\" title=\"trait futures::stream::Stream\">Stream</a>&gt;::<a class=\"type\" href=\"futures/stream/trait.Stream.html#associatedtype.Item\" title=\"type futures::stream::Stream::Item\">Item</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::sync::mpsc::Execute"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"futures/sync/struct.BiLock.html\" title=\"struct futures::sync::BiLock\">BiLock</a>&lt;T&gt;","synthetic":true,"types":["futures::sync::bilock::BiLock"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"futures/sync/struct.BiLockGuard.html\" title=\"struct futures::sync::BiLockGuard\">BiLockGuard</a>&lt;'a, T&gt;","synthetic":true,"types":["futures::sync::bilock::BiLockGuard"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"futures/sync/struct.BiLockAcquire.html\" title=\"struct futures::sync::BiLockAcquire\">BiLockAcquire</a>&lt;T&gt;","synthetic":true,"types":["futures::sync::bilock::BiLockAcquire"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"futures/sync/struct.BiLockAcquired.html\" title=\"struct futures::sync::BiLockAcquired\">BiLockAcquired</a>&lt;T&gt;","synthetic":true,"types":["futures::sync::bilock::BiLockAcquired"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"futures/unsync/mpsc/struct.Sender.html\" title=\"struct futures::unsync::mpsc::Sender\">Sender</a>&lt;T&gt;","synthetic":true,"types":["futures::unsync::mpsc::Sender"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"futures/unsync/mpsc/struct.Receiver.html\" title=\"struct futures::unsync::mpsc::Receiver\">Receiver</a>&lt;T&gt;","synthetic":true,"types":["futures::unsync::mpsc::Receiver"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"futures/unsync/mpsc/struct.UnboundedSender.html\" title=\"struct futures::unsync::mpsc::UnboundedSender\">UnboundedSender</a>&lt;T&gt;","synthetic":true,"types":["futures::unsync::mpsc::UnboundedSender"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"futures/unsync/mpsc/struct.UnboundedReceiver.html\" title=\"struct futures::unsync::mpsc::UnboundedReceiver\">UnboundedReceiver</a>&lt;T&gt;","synthetic":true,"types":["futures::unsync::mpsc::UnboundedReceiver"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"futures/unsync/mpsc/struct.SendError.html\" title=\"struct futures::unsync::mpsc::SendError\">SendError</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::unsync::mpsc::SendError"]},{"text":"impl&lt;Item, Error&gt; Freeze for <a class=\"struct\" href=\"futures/unsync/mpsc/struct.SpawnHandle.html\" title=\"struct futures::unsync::mpsc::SpawnHandle\">SpawnHandle</a>&lt;Item, Error&gt;","synthetic":true,"types":["futures::unsync::mpsc::SpawnHandle"]},{"text":"impl&lt;S&gt; Freeze for <a class=\"struct\" href=\"futures/unsync/mpsc/struct.Execute.html\" title=\"struct futures::unsync::mpsc::Execute\">Execute</a>&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S as <a class=\"trait\" href=\"futures/stream/trait.Stream.html\" title=\"trait futures::stream::Stream\">Stream</a>&gt;::<a class=\"type\" href=\"futures/stream/trait.Stream.html#associatedtype.Error\" title=\"type futures::stream::Stream::Error\">Error</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S as <a class=\"trait\" href=\"futures/stream/trait.Stream.html\" title=\"trait futures::stream::Stream\">Stream</a>&gt;::<a class=\"type\" href=\"futures/stream/trait.Stream.html#associatedtype.Item\" title=\"type futures::stream::Stream::Item\">Item</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::unsync::mpsc::Execute"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"futures/unsync/oneshot/struct.Sender.html\" title=\"struct futures::unsync::oneshot::Sender\">Sender</a>&lt;T&gt;","synthetic":true,"types":["futures::unsync::oneshot::Sender"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"futures/unsync/oneshot/struct.Receiver.html\" title=\"struct futures::unsync::oneshot::Receiver\">Receiver</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::unsync::oneshot::Receiver"]},{"text":"impl&lt;T, E&gt; Freeze for <a class=\"struct\" href=\"futures/unsync/oneshot/struct.SpawnHandle.html\" title=\"struct futures::unsync::oneshot::SpawnHandle\">SpawnHandle</a>&lt;T, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::unsync::oneshot::SpawnHandle"]},{"text":"impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"futures/unsync/oneshot/struct.Execute.html\" title=\"struct futures::unsync::oneshot::Execute\">Execute</a>&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::unsync::oneshot::Execute"]}];
implementors["lazy_queue"] = [{"text":"impl&lt;Item&gt; Freeze for <a class=\"struct\" href=\"lazy_queue/sync/bounded/struct.LazyQueue.html\" title=\"struct lazy_queue::sync::bounded::LazyQueue\">LazyQueue</a>&lt;Item&gt;","synthetic":true,"types":["lazy_queue::sync::bounded::LazyQueue"]},{"text":"impl&lt;Item, P, I&gt; Freeze for <a class=\"struct\" href=\"lazy_queue/sync/bounded/struct.QueueProcessor.html\" title=\"struct lazy_queue::sync::bounded::QueueProcessor\">QueueProcessor</a>&lt;Item, P, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as <a class=\"trait\" href=\"futures/future/trait.IntoFuture.html\" title=\"trait futures::future::IntoFuture\">IntoFuture</a>&gt;::<a class=\"type\" href=\"futures/future/trait.IntoFuture.html#associatedtype.Future\" title=\"type futures::future::IntoFuture::Future\">Future</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["lazy_queue::sync::bounded::QueueProcessor"]},{"text":"impl&lt;Item&gt; Freeze for <a class=\"struct\" href=\"lazy_queue/sync/unbounded/struct.LazyQueue.html\" title=\"struct lazy_queue::sync::unbounded::LazyQueue\">LazyQueue</a>&lt;Item&gt;","synthetic":true,"types":["lazy_queue::sync::unbounded::LazyQueue"]},{"text":"impl&lt;Item, P, I&gt; Freeze for <a class=\"struct\" href=\"lazy_queue/sync/unbounded/struct.QueueProcessor.html\" title=\"struct lazy_queue::sync::unbounded::QueueProcessor\">QueueProcessor</a>&lt;Item, P, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as <a class=\"trait\" href=\"futures/future/trait.IntoFuture.html\" title=\"trait futures::future::IntoFuture\">IntoFuture</a>&gt;::<a class=\"type\" href=\"futures/future/trait.IntoFuture.html#associatedtype.Future\" title=\"type futures::future::IntoFuture::Future\">Future</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["lazy_queue::sync::unbounded::QueueProcessor"]},{"text":"impl&lt;Item&gt; Freeze for <a class=\"struct\" href=\"lazy_queue/unsync/bounded/struct.LazyQueue.html\" title=\"struct lazy_queue::unsync::bounded::LazyQueue\">LazyQueue</a>&lt;Item&gt;","synthetic":true,"types":["lazy_queue::unsync::bounded::LazyQueue"]},{"text":"impl&lt;Item, P, I&gt; Freeze for <a class=\"struct\" href=\"lazy_queue/unsync/bounded/struct.QueueProcessor.html\" title=\"struct lazy_queue::unsync::bounded::QueueProcessor\">QueueProcessor</a>&lt;Item, P, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as <a class=\"trait\" href=\"futures/future/trait.IntoFuture.html\" title=\"trait futures::future::IntoFuture\">IntoFuture</a>&gt;::<a class=\"type\" href=\"futures/future/trait.IntoFuture.html#associatedtype.Future\" title=\"type futures::future::IntoFuture::Future\">Future</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["lazy_queue::unsync::bounded::QueueProcessor"]},{"text":"impl&lt;Item&gt; Freeze for <a class=\"struct\" href=\"lazy_queue/unsync/unbounded/struct.LazyQueue.html\" title=\"struct lazy_queue::unsync::unbounded::LazyQueue\">LazyQueue</a>&lt;Item&gt;","synthetic":true,"types":["lazy_queue::unsync::unbounded::LazyQueue"]},{"text":"impl&lt;Item, P, I&gt; Freeze for <a class=\"struct\" href=\"lazy_queue/unsync/unbounded/struct.QueueProcessor.html\" title=\"struct lazy_queue::unsync::unbounded::QueueProcessor\">QueueProcessor</a>&lt;Item, P, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as <a class=\"trait\" href=\"futures/future/trait.IntoFuture.html\" title=\"trait futures::future::IntoFuture\">IntoFuture</a>&gt;::<a class=\"type\" href=\"futures/future/trait.IntoFuture.html#associatedtype.Future\" title=\"type futures::future::IntoFuture::Future\">Future</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["lazy_queue::unsync::unbounded::QueueProcessor"]},{"text":"impl&lt;R, E&gt; Freeze for <a class=\"enum\" href=\"lazy_queue/enum.ProcessingError.html\" title=\"enum lazy_queue::ProcessingError\">ProcessingError</a>&lt;R, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["lazy_queue::ProcessingError"]}];
implementors["tokio_sync"] = [{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"tokio_sync/lock/struct.Lock.html\" title=\"struct tokio_sync::lock::Lock\">Lock</a>&lt;T&gt;","synthetic":true,"types":["tokio_sync::lock::Lock"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"tokio_sync/lock/struct.LockGuard.html\" title=\"struct tokio_sync::lock::LockGuard\">LockGuard</a>&lt;T&gt;","synthetic":true,"types":["tokio_sync::lock::LockGuard"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"tokio_sync/mpsc/struct.Sender.html\" title=\"struct tokio_sync::mpsc::Sender\">Sender</a>&lt;T&gt;","synthetic":true,"types":["tokio_sync::mpsc::bounded::Sender"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"tokio_sync/mpsc/struct.Receiver.html\" title=\"struct tokio_sync::mpsc::Receiver\">Receiver</a>&lt;T&gt;","synthetic":true,"types":["tokio_sync::mpsc::bounded::Receiver"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio_sync/mpsc/error/struct.SendError.html\" title=\"struct tokio_sync::mpsc::error::SendError\">SendError</a>","synthetic":true,"types":["tokio_sync::mpsc::bounded::SendError"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"tokio_sync/mpsc/error/struct.TrySendError.html\" title=\"struct tokio_sync::mpsc::error::TrySendError\">TrySendError</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["tokio_sync::mpsc::bounded::TrySendError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio_sync/mpsc/error/struct.RecvError.html\" title=\"struct tokio_sync::mpsc::error::RecvError\">RecvError</a>","synthetic":true,"types":["tokio_sync::mpsc::bounded::RecvError"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"tokio_sync/mpsc/struct.UnboundedSender.html\" title=\"struct tokio_sync::mpsc::UnboundedSender\">UnboundedSender</a>&lt;T&gt;","synthetic":true,"types":["tokio_sync::mpsc::unbounded::UnboundedSender"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"tokio_sync/mpsc/struct.UnboundedReceiver.html\" title=\"struct tokio_sync::mpsc::UnboundedReceiver\">UnboundedReceiver</a>&lt;T&gt;","synthetic":true,"types":["tokio_sync::mpsc::unbounded::UnboundedReceiver"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio_sync/mpsc/error/struct.UnboundedSendError.html\" title=\"struct tokio_sync::mpsc::error::UnboundedSendError\">UnboundedSendError</a>","synthetic":true,"types":["tokio_sync::mpsc::unbounded::UnboundedSendError"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"tokio_sync/mpsc/error/struct.UnboundedTrySendError.html\" title=\"struct tokio_sync::mpsc::error::UnboundedTrySendError\">UnboundedTrySendError</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["tokio_sync::mpsc::unbounded::UnboundedTrySendError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio_sync/mpsc/error/struct.UnboundedRecvError.html\" title=\"struct tokio_sync::mpsc::error::UnboundedRecvError\">UnboundedRecvError</a>","synthetic":true,"types":["tokio_sync::mpsc::unbounded::UnboundedRecvError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio_sync/oneshot/error/struct.RecvError.html\" title=\"struct tokio_sync::oneshot::error::RecvError\">RecvError</a>","synthetic":true,"types":["tokio_sync::oneshot::error::RecvError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio_sync/oneshot/error/struct.TryRecvError.html\" title=\"struct tokio_sync::oneshot::error::TryRecvError\">TryRecvError</a>","synthetic":true,"types":["tokio_sync::oneshot::error::TryRecvError"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"tokio_sync/oneshot/struct.Sender.html\" title=\"struct tokio_sync::oneshot::Sender\">Sender</a>&lt;T&gt;","synthetic":true,"types":["tokio_sync::oneshot::Sender"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"tokio_sync/oneshot/struct.Receiver.html\" title=\"struct tokio_sync::oneshot::Receiver\">Receiver</a>&lt;T&gt;","synthetic":true,"types":["tokio_sync::oneshot::Receiver"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"tokio_sync/semaphore/struct.Semaphore.html\" title=\"struct tokio_sync::semaphore::Semaphore\">Semaphore</a>","synthetic":true,"types":["tokio_sync::semaphore::Semaphore"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio_sync/semaphore/struct.Permit.html\" title=\"struct tokio_sync::semaphore::Permit\">Permit</a>","synthetic":true,"types":["tokio_sync::semaphore::Permit"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio_sync/semaphore/struct.AcquireError.html\" title=\"struct tokio_sync::semaphore::AcquireError\">AcquireError</a>","synthetic":true,"types":["tokio_sync::semaphore::AcquireError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio_sync/semaphore/struct.TryAcquireError.html\" title=\"struct tokio_sync::semaphore::TryAcquireError\">TryAcquireError</a>","synthetic":true,"types":["tokio_sync::semaphore::TryAcquireError"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"tokio_sync/task/struct.AtomicTask.html\" title=\"struct tokio_sync::task::AtomicTask\">AtomicTask</a>","synthetic":true,"types":["tokio_sync::task::atomic_task::AtomicTask"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio_sync/watch/error/struct.RecvError.html\" title=\"struct tokio_sync::watch::error::RecvError\">RecvError</a>","synthetic":true,"types":["tokio_sync::watch::error::RecvError"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"tokio_sync/watch/error/struct.SendError.html\" title=\"struct tokio_sync::watch::error::SendError\">SendError</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["tokio_sync::watch::error::SendError"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"tokio_sync/watch/struct.Receiver.html\" title=\"struct tokio_sync::watch::Receiver\">Receiver</a>&lt;T&gt;","synthetic":true,"types":["tokio_sync::watch::Receiver"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"tokio_sync/watch/struct.Sender.html\" title=\"struct tokio_sync::watch::Sender\">Sender</a>&lt;T&gt;","synthetic":true,"types":["tokio_sync::watch::Sender"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"tokio_sync/watch/struct.Ref.html\" title=\"struct tokio_sync::watch::Ref\">Ref</a>&lt;'a, T&gt;","synthetic":true,"types":["tokio_sync::watch::Ref"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()