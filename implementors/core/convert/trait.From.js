(function() {var implementors = {};
implementors["futures"] = [{"text":"impl&lt;T&gt; From&lt;T&gt; for Async&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T, E&gt; From&lt;Result&lt;T, E&gt;&gt; for FutureResult&lt;T, E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; From&lt;Arc&lt;T&gt;&gt; for NotifyHandle <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Notify + 'static,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Notify&gt; From&lt;&amp;'static T&gt; for NotifyHandle","synthetic":false,"types":[]}];
implementors["tokio_sync"] = [{"text":"impl&lt;T&gt; From&lt;T&gt; for Lock&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; From&lt;(T, TrySendError)&gt; for TrySendError&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; From&lt;(T, TrySendError)&gt; for UnboundedTrySendError&lt;T&gt;","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()