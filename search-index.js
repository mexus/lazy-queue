var N = null;var searchIndex = {};
searchIndex["fnv"]={"doc":"An implementation of the [Fowler–Noll–Vo hash…","items":[[3,"FnvHasher","fnv","An implementation of the Fowler–Noll–Vo hash function.",N,N],[6,"FnvBuildHasher","","A builder for default FNV hashers.",N,N],[6,"FnvHashMap","","A `HashMap` using a default FNV hasher.",N,N],[6,"FnvHashSet","","A `HashSet` using a default FNV hasher.",N,N],[11,"with_key","","Create an FNV hasher starting with a state corresponding…",0,[[["u64"]],["fnvhasher"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"default","","",0,[[],["fnvhasher"]]],[11,"finish","","",0,[[["self"]],["u64"]]],[11,"write","","",0,N]],"paths":[[3,"FnvHasher"]]};
searchIndex["futures"]={"doc":"Zero-cost Futures in Rust","items":[[4,"Async","futures","Return type of future, indicating whether a value is ready…",N,N],[13,"Ready","","Represents that a value is immediately ready.",0,N],[13,"NotReady","","Represents that a value is not ready yet, but may be so…",0,N],[4,"AsyncSink","","The result of an asynchronous attempt to send a value to a…",N,N],[13,"Ready","","The `start_send` attempt succeeded, so the sending process…",1,N],[13,"NotReady","","The `start_send` attempt failed due to the sink being…",1,N],[11,"map","","Change the success value of this `Async` with the closure…",0,[[["self"],["f"]],["async"]]],[11,"is_ready","","Returns whether this is `Async::Ready`",0,[[["self"]],["bool"]]],[11,"is_not_ready","","Returns whether this is `Async::NotReady`",0,[[["self"]],["bool"]]],[11,"map","","Change the NotReady value of this `AsyncSink` with the…",1,[[["self"],["f"]],["asyncsink"]]],[11,"is_ready","","Returns whether this is `AsyncSink::Ready`",1,[[["self"]],["bool"]]],[11,"is_not_ready","","Returns whether this is `AsyncSink::NotReady`",1,[[["self"]],["bool"]]],[0,"future","","Futures",N,N],[3,"Empty","futures::future","A future which is never resolved.",N,N],[3,"Lazy","","A future which defers creation of the actual future until…",N,N],[3,"PollFn","","A future which adapts a function returning `Poll`.",N,N],[3,"FutureResult","","A future representing a value that is immediately ready.",N,N],[3,"LoopFn","","A future implementing a tail-recursive loop.",N,N],[3,"AndThen","","Future for the `and_then` combinator, chaining a…",N,N],[3,"Flatten","","Future for the `flatten` combinator, flattening a…",N,N],[3,"FlattenStream","","Future for the `flatten_stream` combinator, flattening a…",N,N],[3,"Fuse","","A future which \"fuses\" a future once it's been resolved.",N,N],[3,"IntoStream","","Future that forwards one element from the underlying…",N,N],[3,"Join","","Future for the `join` combinator, waiting for two futures…",N,N],[3,"Join3","","Future for the `join3` combinator, waiting for three…",N,N],[3,"Join4","","Future for the `join4` combinator, waiting for four…",N,N],[3,"Join5","","Future for the `join5` combinator, waiting for five…",N,N],[3,"Map","","Future for the `map` combinator, changing the type of a…",N,N],[3,"MapErr","","Future for the `map_err` combinator, changing the error…",N,N],[3,"FromErr","","Future for the `from_err` combinator, changing the error…",N,N],[3,"OrElse","","Future for the `or_else` combinator, chaining a…",N,N],[3,"Select","","Future for the `select` combinator, waiting for one of two…",N,N],[3,"SelectNext","","Future yielded as the second result in a `Select` future.",N,N],[3,"Select2","","Future for the `select2` combinator, waiting for one of…",N,N],[3,"Then","","Future for the `then` combinator, chaining computations on…",N,N],[3,"Inspect","","Do something with the item of a future, passing it on.",N,N],[3,"CatchUnwind","","Future for the `catch_unwind` combinator.",N,N],[3,"JoinAll","","A future which takes a list of futures and resolves with a…",N,N],[3,"SelectAll","","Future for the `select_all` combinator, waiting for one of…",N,N],[3,"SelectOk","","Future for the `select_ok` combinator, waiting for one of…",N,N],[3,"Shared","","A future that is cloneable and can be polled in multiple…",N,N],[3,"SharedItem","","A wrapped item of the original future that is cloneable…",N,N],[3,"SharedError","","A wrapped error of the original future that is cloneable…",N,N],[3,"ExecuteError","","Errors returned from the `Spawn::spawn` function.",N,N],[4,"Loop","","The status of a `loop_fn` loop.",N,N],[13,"Break","","Indicates that the loop has completed with output `T`.",2,N],[13,"Continue","","Indicates that the loop function should be called again…",2,N],[4,"Either","","Combines two different futures yielding the same item and…",N,N],[13,"A","","First branch of the type",3,N],[13,"B","","Second branch of the type",3,N],[4,"ExecuteErrorKind","","Kinds of errors that can be returned from the…",N,N],[13,"Shutdown","","This executor has shut down and will no longer accept new…",4,N],[13,"NoCapacity","","This executor has no more capacity to run more futures.…",4,N],[5,"empty","","Creates a future which never resolves, representing a…",N,[[],["empty"]]],[5,"lazy","","Creates a new future which will eventually be the same as…",N,[[["f"]],["lazy"]]],[5,"poll_fn","","Creates a new future wrapping around a function returning…",N,[[["f"]],["pollfn"]]],[5,"result","","Creates a new \"leaf future\" which will resolve with the…",N,[[["result"]],["futureresult"]]],[5,"ok","","Creates a \"leaf future\" from an immediate value of a…",N,[[["t"]],["futureresult"]]],[5,"err","","Creates a \"leaf future\" from an immediate value of a…",N,[[["e"]],["futureresult"]]],[5,"loop_fn","","Creates a new future implementing a tail-recursive loop.",N,[[["s"],["f"]],["loopfn"]]],[5,"join_all","","Creates a future which represents a collection of the…",N,[[["i"]],["joinall"]]],[5,"select_all","","Creates a new future which will select over a list of…",N,[[["i"]],["selectall"]]],[5,"select_ok","","Creates a new future which will select the first…",N,[[["i"]],["selectok"]]],[11,"is_done","","Returns whether the underlying future has finished or not.",5,[[["self"]],["bool"]]],[11,"split","","Splits out the homogeneous type from an either of tuples.",3,N],[11,"peek","","If any clone of this `Shared` has completed execution,…",6,[[["self"]],["option",["result"]]]],[8,"Future","","Trait for types which are a placeholder of a value that…",N,N],[16,"Item","","The type of value that this future will resolved with if…",7,N],[16,"Error","","The type of error that this future will resolve with if it…",7,N],[10,"poll","","Query this future to see if its value has become…",7,[[["self"]],["poll"]]],[11,"wait","","Block the current thread until this future is resolved.",7,[[["self"]],["result"]]],[11,"map","","Map this future's result to a different type, returning a…",7,[[["self"],["f"]],["map"]]],[11,"map_err","","Map this future's error to a different error, returning a…",7,[[["self"],["f"]],["maperr"]]],[11,"from_err","","Map this future's error to any error implementing `From`…",7,[[["self"]],["fromerr"]]],[11,"then","","Chain on a computation for when a future finished, passing…",7,[[["self"],["f"]],["then"]]],[11,"and_then","","Execute another future after this one has resolved…",7,[[["self"],["f"]],["andthen"]]],[11,"or_else","","Execute another future if this one resolves with an error.",7,[[["self"],["f"]],["orelse"]]],[11,"select","","Waits for either one of two futures to complete.",7,[[["self"],["b"]],["select"]]],[11,"select2","","Waits for either one of two differently-typed futures to…",7,[[["self"],["b"]],["select2"]]],[11,"join","","Joins the result of two futures, waiting for them both to…",7,[[["self"],["b"]],["join"]]],[11,"join3","","Same as `join`, but with more futures.",7,[[["self"],["b"],["c"]],["join3"]]],[11,"join4","","Same as `join`, but with more futures.",7,[[["self"],["b"],["c"],["d"]],["join4"]]],[11,"join5","","Same as `join`, but with more futures.",7,[[["self"],["b"],["c"],["d"],["e"]],["join5"]]],[11,"into_stream","","Convert this future into a single element stream.",7,[[["self"]],["intostream"]]],[11,"flatten","","Flatten the execution of this future when the successful…",7,[[["self"]],["flatten"]]],[11,"flatten_stream","","Flatten the execution of this future when the successful…",7,[[["self"]],["flattenstream"]]],[11,"fuse","","Fuse a future such that `poll` will never again be called…",7,[[["self"]],["fuse"]]],[11,"inspect","","Do something with the item of a future, passing it on.",7,[[["self"],["f"]],["inspect"]]],[11,"catch_unwind","","Catches unwinding panics while polling the future.",7,[[["self"]],["catchunwind"]]],[11,"shared","","Create a cloneable handle to this future where all handles…",7,[[["self"]],["shared"]]],[8,"IntoFuture","","Class of types which can be converted into a future.",N,N],[16,"Future","","The future that this type can be converted into.",8,N],[16,"Item","","The item that the future may resolve with.",8,N],[16,"Error","","The error that the future may resolve with.",8,N],[10,"into_future","","Consumes this object and produces a future.",8,N],[8,"FutureFrom","","Asynchronous conversion from a type `T`.",N,N],[16,"Future","","The future for the conversion.",9,N],[16,"Error","","Possible errors during conversion.",9,N],[10,"future_from","","Consume the given value, beginning the conversion.",9,N],[8,"Executor","","A trait for types which can spawn fresh futures.",N,N],[10,"execute","","Spawns a future to run on this `Executor`, typically in…",10,[[["self"],["f"]],["result",["executeerror"]]]],[11,"new","","Create a new `ExecuteError`",11,[[["executeerrorkind"],["f"]],["executeerror"]]],[11,"kind","","Returns the associated reason for the error",11,[[["self"]],["executeerrorkind"]]],[11,"into_future","","Consumes self and returns the original future that was…",11,[[["self"]],["f"]]],[0,"stream","futures","Asynchronous streams",N,N],[3,"Iter","futures::stream","A stream which is just a shim over an underlying instance…",N,N],[3,"IterStream","","A stream which is just a shim over an underlying instance…",N,N],[3,"IterOk","","A stream which is just a shim over an underlying instance…",N,N],[3,"IterResult","","A stream which is just a shim over an underlying instance…",N,N],[3,"Repeat","","Stream that produces the same element repeatedly.",N,N],[3,"AndThen","","A stream combinator which chains a computation onto values…",N,N],[3,"Chain","","An adapter for chaining the output of two streams.",N,N],[3,"Concat","","A stream combinator to concatenate the results of a stream…",N,N],[3,"Concat2","","A stream combinator to concatenate the results of a stream…",N,N],[3,"Empty","","A stream which contains no elements.",N,N],[3,"Filter","","A stream combinator used to filter the results of a stream…",N,N],[3,"FilterMap","","A combinator used to filter the results of a stream and…",N,N],[3,"Flatten","","A combinator used to flatten a stream-of-streams into one…",N,N],[3,"Fold","","A future used to collect all the results of a stream into…",N,N],[3,"ForEach","","A stream combinator which executes a unit closure over…",N,N],[3,"FromErr","","A stream combinator to change the error type of a stream.",N,N],[3,"Fuse","","A stream which \"fuse\"s a stream once it's terminated.",N,N],[3,"StreamFuture","","A combinator used to temporarily convert a stream into a…",N,N],[3,"Inspect","","Do something with the items of a stream, passing it on.",N,N],[3,"InspectErr","","Do something with the error of a stream, passing it on.",N,N],[3,"Map","","A stream combinator which will change the type of a stream…",N,N],[3,"MapErr","","A stream combinator which will change the error type of a…",N,N],[3,"Merge","","An adapter for merging the output of two streams.",N,N],[3,"Once","","A stream which emits single element and then EOF.",N,N],[3,"OrElse","","A stream combinator which chains a computation onto errors…",N,N],[3,"Peekable","","A `Stream` that implements a `peek` method.",N,N],[3,"PollFn","","A stream which adapts a function returning `Poll`.",N,N],[3,"Select","","An adapter for merging the output of two streams.",N,N],[3,"Skip","","A stream combinator which skips a number of elements…",N,N],[3,"SkipWhile","","A stream combinator which skips elements of a stream while…",N,N],[3,"Take","","A stream combinator which returns a maximum number of…",N,N],[3,"TakeWhile","","A stream combinator which takes elements from a stream…",N,N],[3,"Then","","A stream combinator which chains a computation onto each…",N,N],[3,"Unfold","","A stream which creates futures, polls them and return…",N,N],[3,"Zip","","An adapter for merging the output of two streams.",N,N],[3,"Forward","","Future for the `Stream::forward` combinator, which sends a…",N,N],[3,"Buffered","","An adaptor for a stream of futures to execute the futures…",N,N],[3,"BufferUnordered","","An adaptor for a stream of futures to execute the futures…",N,N],[3,"CatchUnwind","","Stream for the `catch_unwind` combinator.",N,N],[3,"Chunks","","An adaptor that chunks up elements in a vector.",N,N],[3,"Collect","","A future which collects all of the values of a stream into…",N,N],[3,"Wait","","A stream combinator which converts an asynchronous stream…",N,N],[3,"SplitStream","","A `Stream` part of the split pair",N,N],[3,"SplitSink","","A `Sink` part of the split pair",N,N],[3,"ReuniteError","","Error indicating a `SplitSink<S>` and `SplitStream<S>`…",N,N],[12,"0","","",12,N],[12,"1","","",12,N],[3,"FuturesOrdered","","An unbounded queue of futures.",N,N],[4,"MergedItem","","An item returned from a merge stream, which represents an…",N,N],[13,"First","","An item from the first stream",13,N],[13,"Second","","An item from the second stream",13,N],[13,"Both","","Items from both streams",13,N],[5,"iter","","Converts an `Iterator` over `Result`s into a `Stream`…",N,[[["j"]],["iter"]]],[5,"iter_ok","","Converts an `Iterator` into a `Stream` which is always…",N,[[["i"]],["iterok"]]],[5,"iter_result","","Converts an `Iterator` over `Result`s into a `Stream`…",N,[[["j"]],["iterresult"]]],[5,"repeat","","Create a stream which produces the same item repeatedly.",N,[[["t"]],["repeat"]]],[5,"empty","","Creates a stream which contains no elements.",N,[[],["empty"]]],[5,"once","","Creates a stream of single element",N,[[["result"]],["once"]]],[5,"poll_fn","","Creates a new stream wrapping around a function returning…",N,[[["f"]],["pollfn"]]],[5,"unfold","","Creates a `Stream` from a seed and a closure returning a…",N,[[["t"],["f"]],["unfold"]]],[5,"futures_ordered","","Converts a list of futures into a `Stream` of results from…",N,[[["i"]],["futuresordered"]]],[5,"futures_unordered","","Converts a list of futures into a `Stream` of results from…",N,[[["i"]],["futuresunordered"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",14,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",14,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",14,[[["self"]],["s"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",15,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",15,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",15,[[["self"]],["s"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",16,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",16,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",16,[[["self"]],["s"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",17,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",17,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",17,[[["self"]],["s"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",18,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",18,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",18,[[["self"]],["s"]]],[11,"is_done","","Returns whether the underlying stream has finished or not.",19,[[["self"]],["bool"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",19,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",19,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",19,[[["self"]],["s"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",20,[[["self"]],["option"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",20,[[["self"]],["option"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",20,[[["self"]],["option"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",21,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",21,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",21,[[["self"]],["s"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",22,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",22,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",22,[[["self"]],["s"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",23,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",23,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",23,[[["self"]],["s"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",24,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",24,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",24,[[["self"]],["s"]]],[11,"peek","","Peek retrieves a reference to the next item in the stream.",25,[[["self"]],["poll",["option"]]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",26,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",26,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",26,[[["self"]],["s"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",27,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",27,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",27,[[["self"]],["s"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",28,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",28,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",28,[[["self"]],["s"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",29,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",29,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",29,[[["self"]],["s"]]],[11,"sink_ref","","Get a shared reference to the inner sink. If this…",30,[[["self"]],["option"]]],[11,"sink_mut","","Get a mutable reference to the inner sink. If this…",30,[[["self"]],["option"]]],[11,"stream_ref","","Get a shared reference to the inner stream. If this…",30,[[["self"]],["option"]]],[11,"stream_mut","","Get a mutable reference to the inner stream. If this…",30,[[["self"]],["option"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",31,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",31,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",31,[[["self"]],["s"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",32,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",32,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",32,[[["self"]],["s"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",33,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",33,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",33,[[["self"]],["s"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",34,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",34,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",34,[[["self"]],["s"]]],[11,"reunite","","Attempts to put the two \"halves\" of a split `Stream +…",35,[[["self"],["splitsink"]],["result",["reuniteerror"]]]],[11,"reunite","","Attempts to put the two \"halves\" of a split `Stream +…",36,[[["self"],["splitstream"]],["result",["reuniteerror"]]]],[0,"futures_unordered","","An unbounded set of futures.",N,N],[3,"FuturesUnordered","futures::stream::futures_unordered","An unbounded set of futures.",N,N],[3,"IterMut","","Mutable iterator over all futures in the unordered set.",N,N],[11,"new","","Constructs a new, empty `FuturesUnordered`",37,[[],["futuresunordered"]]],[11,"len","","Returns the number of futures contained in the set.",37,[[["self"]],["usize"]]],[11,"is_empty","","Returns `true` if the set contains no futures",37,[[["self"]],["bool"]]],[11,"push","","Push a future into the set.",37,[[["self"],["t"]]]],[11,"iter_mut","","Returns an iterator that allows modifying each future in…",37,[[["self"]],["itermut"]]],[11,"new","futures::stream","Constructs a new, empty `FuturesOrdered`",38,[[],["futuresordered"]]],[11,"len","","Returns the number of futures contained in the queue.",38,[[["self"]],["usize"]]],[11,"is_empty","","Returns `true` if the queue contains no futures",38,[[["self"]],["bool"]]],[11,"push","","Push a future into the queue.",38,[[["self"],["t"]]]],[8,"Stream","","A stream of values, not all of which may have been…",N,N],[16,"Item","","The type of item this stream will yield on success.",39,N],[16,"Error","","The type of error this stream may generate.",39,N],[10,"poll","","Attempt to pull out the next value of this stream,…",39,[[["self"]],["poll",["option"]]]],[11,"wait","","Creates an iterator which blocks the current thread until…",39,[[["self"]],["wait"]]],[11,"into_future","","Converts this stream into a `Future`.",39,[[["self"]],["streamfuture"]]],[11,"map","","Converts a stream of type `T` to a stream of type `U`.",39,[[["self"],["f"]],["map"]]],[11,"map_err","","Converts a stream of error type `T` to a stream of error…",39,[[["self"],["f"]],["maperr"]]],[11,"filter","","Filters the values produced by this stream according to…",39,[[["self"],["f"]],["filter"]]],[11,"filter_map","","Filters the values produced by this stream while…",39,[[["self"],["f"]],["filtermap"]]],[11,"then","","Chain on a computation for when a value is ready, passing…",39,[[["self"],["f"]],["then"]]],[11,"and_then","","Chain on a computation for when a value is ready, passing…",39,[[["self"],["f"]],["andthen"]]],[11,"or_else","","Chain on a computation for when an error happens, passing…",39,[[["self"],["f"]],["orelse"]]],[11,"collect","","Collect all of the values of this stream into a vector,…",39,[[["self"]],["collect"]]],[11,"concat2","","Concatenate all results of a stream into a single…",39,[[["self"]],["concat2"]]],[11,"concat","","Concatenate all results of a stream into a single…",39,[[["self"]],["concat"]]],[11,"fold","","Execute an accumulating computation over a stream,…",39,[[["self"],["t"],["f"]],["fold"]]],[11,"flatten","","Flattens a stream of streams into just one continuous…",39,[[["self"]],["flatten"]]],[11,"skip_while","","Skip elements on this stream while the predicate provided…",39,[[["self"],["p"]],["skipwhile"]]],[11,"take_while","","Take elements from this stream while the predicate…",39,[[["self"],["p"]],["takewhile"]]],[11,"for_each","","Runs this stream to completion, executing the provided…",39,[[["self"],["f"]],["foreach"]]],[11,"from_err","","Map this stream's error to any error implementing `From`…",39,[[["self"]],["fromerr"]]],[11,"take","","Creates a new stream of at most `amt` items of the…",39,[[["self"],["u64"]],["take"]]],[11,"skip","","Creates a new stream which skips `amt` items of the…",39,[[["self"],["u64"]],["skip"]]],[11,"fuse","","Fuse a stream such that `poll` will never again be called…",39,[[["self"]],["fuse"]]],[11,"by_ref","","Borrows a stream, rather than consuming it.",39,[[["self"]],["self"]]],[11,"catch_unwind","","Catches unwinding panics while polling the stream.",39,[[["self"]],["catchunwind"]]],[11,"buffered","","An adaptor for creating a buffered list of pending futures.",39,[[["self"],["usize"]],["buffered"]]],[11,"buffer_unordered","","An adaptor for creating a buffered list of pending futures…",39,[[["self"],["usize"]],["bufferunordered"]]],[11,"merge","","An adapter for merging the output of two streams.",39,[[["self"],["s"]],["merge"]]],[11,"zip","","An adapter for zipping two streams together.",39,[[["self"],["s"]],["zip"]]],[11,"chain","","Adapter for chaining two stream.",39,[[["self"],["s"]],["chain"]]],[11,"peekable","","Creates a new stream which exposes a `peek` method.",39,[[["self"]],["peekable"]]],[11,"chunks","","An adaptor for chunking up items of the stream inside a…",39,[[["self"],["usize"]],["chunks"]]],[11,"select","","Creates a stream that selects the next element from either…",39,[[["self"],["s"]],["select"]]],[11,"forward","","A future that completes after the given stream has been…",39,[[["self"],["s"]],["forward"]]],[11,"split","","Splits this `Stream + Sink` object into separate `Stream`…",39,N],[11,"inspect","","Do something with each item of this stream, afterwards…",39,[[["self"],["f"]],["inspect"]]],[11,"inspect_err","","Do something with the error of this stream, afterwards…",39,[[["self"],["f"]],["inspecterr"]]],[0,"sink","futures","Asynchronous sinks",N,N],[3,"Buffer","futures::sink","Sink for the `Sink::buffer` combinator, which buffers up…",N,N],[3,"Wait","","A sink combinator which converts an asynchronous sink to a…",N,N],[3,"With","","Sink for the `Sink::with` combinator, chaining a…",N,N],[3,"WithFlatMap","","Sink for the `Sink::with_flat_map` combinator, chaining a…",N,N],[3,"Flush","","Future for the `Sink::flush` combinator, which polls the…",N,N],[3,"Send","","Future for the `Sink::send` combinator, which sends a…",N,N],[3,"SendAll","","Future for the `Sink::send_all` combinator, which sends a…",N,N],[3,"SinkMapErr","","Sink for the `Sink::sink_map_err` combinator.",N,N],[3,"SinkFromErr","","A sink combinator to change the error type of a sink.",N,N],[3,"Fanout","","Sink that clones incoming items and forwards them to two…",N,N],[11,"get_ref","","Get a shared reference to the inner sink.",40,[[["self"]],["s"]]],[11,"get_mut","","Get a mutable reference to the inner sink.",40,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink.",40,[[["self"]],["s"]]],[11,"get_ref","","Get a shared reference to the inner sink.",41,[[["self"]],["s"]]],[11,"get_mut","","Get a mutable reference to the inner sink.",41,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink.",41,[[["self"]],["s"]]],[11,"get_ref","","Get a shared reference to the inner sink.",42,[[["self"]],["s"]]],[11,"get_mut","","Get a mutable reference to the inner sink.",42,[[["self"]],["s"]]],[11,"into_inner","","Consume the `Flush` and return the inner sink.",42,[[["self"]],["s"]]],[11,"get_ref","","Get a shared reference to the inner sink.",43,[[["self"]],["s"]]],[11,"get_mut","","Get a mutable reference to the inner sink.",43,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink.",43,[[["self"]],["s"]]],[11,"get_ref","","Get a shared reference to the inner sink.",44,[[["self"]],["s"]]],[11,"get_mut","","Get a mutable reference to the inner sink.",44,[[["self"]],["s"]]],[11,"get_ref","","Get a shared reference to the inner sink.",45,[[["self"]],["s"]]],[11,"get_mut","","Get a mutable reference to the inner sink.",45,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink.",45,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying sinks.",46,N],[11,"get_ref","","Get a shared reference to the inner sink.",47,[[["self"]],["s"]]],[11,"get_mut","","Get a mutable reference to the inner sink.",47,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink.",47,[[["self"]],["s"]]],[11,"send","","Sends a value to this sink, blocking the current thread…",48,N],[11,"flush","","Flushes any buffered data in this sink, blocking the…",48,[[["self"]],["result"]]],[11,"close","","Close this sink, blocking the current thread until it's…",48,[[["self"]],["result"]]],[6,"BoxSink","","A type alias for `Box<Sink + Send>`",N,N],[8,"Sink","","A `Sink` is a value into which other values can be sent,…",N,N],[16,"SinkItem","","The type of value that the sink accepts.",49,N],[16,"SinkError","","The type of value produced by the sink when an error occurs.",49,N],[10,"start_send","","Begin the process of sending a value to the sink.",49,N],[10,"poll_complete","","Flush all output from this sink, if necessary.",49,[[["self"]],["poll"]]],[11,"close","","A method to indicate that no more values will ever be…",49,[[["self"]],["poll"]]],[11,"wait","","Creates a new object which will produce a synchronous sink.",49,[[["self"]],["wait"]]],[11,"with","","Composes a function in front of the sink.",49,[[["self"],["f"]],["with"]]],[11,"with_flat_map","","Composes a function in front of the sink.",49,[[["self"],["f"]],["withflatmap"]]],[11,"sink_map_err","","Transforms the error returned by the sink.",49,[[["self"],["f"]],["sinkmaperr"]]],[11,"sink_from_err","","Map this sink's error to any error implementing `From` for…",49,[[["self"]],["sinkfromerr"]]],[11,"buffer","","Adds a fixed-size buffer to the current sink.",49,[[["self"],["usize"]],["buffer"]]],[11,"fanout","","Fanout items to multiple sinks.",49,[[["self"],["s"]],["fanout"]]],[11,"flush","","A future that completes when the sink has finished…",49,[[["self"]],["flush"]]],[11,"send","","A future that completes after the given item has been…",49,N],[11,"send_all","","A future that completes after the given stream has been…",49,[[["self"],["s"]],["sendall"]]],[0,"task","futures","Tasks used to drive a future computation",N,N],[3,"Task","futures::task","A handle to a \"task\", which represents a single…",N,N],[3,"AtomicTask","","A synchronization primitive for task notification.",N,N],[3,"LocalKey","","A key for task-local data stored in a future's task.",N,N],[3,"UnparkEvent","","A set insertion to trigger upon `unpark`.",N,N],[5,"current","","Returns a handle to the current task to call `notify` at a…",N,[[],["task"]]],[5,"init","","Initialize the `futures` task system.",N,N],[5,"with_unpark_event","","For the duration of the given callback, add an \"unpark…",N,[[["unparkevent"],["f"]],["r"]]],[8,"EventSet","","A concurrent set which allows for the insertion of `usize`…",N,N],[10,"insert","","Insert the given ID into the set",50,[[["self"],["usize"]]]],[0,"executor","futures","Executors",N,N],[3,"Spawn","futures::executor","Representation of a spawned future/stream.",N,N],[3,"NotifyHandle","","A `NotifyHandle` is the core value through which…",N,N],[5,"spawn","","Spawns a future or stream, returning it and the new task…",N,[[["t"]],["spawn"]]],[5,"with_notify","","Sets the `NotifyHandle` of the current task for the…",N,[[["t"],["usize"],["f"]],["r"]]],[8,"Notify","","A trait which represents a sink of notifications that a…",N,N],[10,"notify","","Indicates that an associated future and/or task are ready…",51,[[["self"],["usize"]]]],[11,"clone_id","","This function is called whenever a new copy of `id` is…",51,[[["self"],["usize"]],["usize"]]],[11,"drop_id","","All instances of `Task` store an `id` that they're going…",51,[[["self"],["usize"]]]],[8,"UnsafeNotify","","An unsafe trait for implementing custom forms of memory…",N,N],[10,"clone_raw","","Creates a new `NotifyHandle` from this instance of…",52,[[["self"]],["notifyhandle"]]],[10,"drop_raw","","Drops this instance of `UnsafeNotify`, deallocating…",52,[[["self"]]]],[0,"sync","futures","Future-aware synchronization",N,N],[3,"BiLock","futures::sync","A type of futures-powered synchronization primitive which…",N,N],[3,"BiLockGuard","","Returned RAII guard from the `poll_lock` method.",N,N],[3,"BiLockAcquire","","Future returned by `BiLock::lock` which will resolve when…",N,N],[3,"BiLockAcquired","","Resolved value of the `BiLockAcquire<T>` future.",N,N],[0,"oneshot","","A one-shot, futures-aware channel",N,N],[3,"Receiver","futures::sync::oneshot","A future representing the completion of a computation…",N,N],[3,"Sender","","Represents the completion half of a oneshot through which…",N,N],[3,"Canceled","","Error returned from a `Receiver<T>` whenever the…",N,N],[3,"SpawnHandle","","Handle returned from the `spawn` function.",N,N],[3,"Execute","","Type of future which `Execute` instances below must be…",N,N],[5,"channel","","Creates a new futures-aware, one-shot channel.",N,N],[5,"spawn","","Spawns a `future` onto the instance of `Executor`…",N,[[["f"],["e"]],["spawnhandle"]]],[5,"spawn_fn","","Spawns a function `f` onto the `Spawn` instance provided…",N,[[["f"],["e"]],["spawnhandle"]]],[11,"send","","Completes this oneshot with a successful result.",53,[[["self"],["t"]],["result"]]],[11,"poll_cancel","","Polls this `Sender` half to detect whether the `Receiver`…",53,[[["self"]],["poll"]]],[11,"is_canceled","","Tests to see whether this `Sender`'s corresponding…",53,[[["self"]],["bool"]]],[11,"close","","Gracefully close this receiver, preventing sending any…",54,[[["self"]]]],[11,"try_recv","","Attempts to receive a message outside of the context of a…",54,[[["self"]],["result",["option","canceled"]]]],[11,"forget","","Drop this future without canceling the underlying future.",55,[[["self"]]]],[0,"mpsc","futures::sync","A multi-producer, single-consumer, futures-aware, FIFO…",N,N],[3,"Sender","futures::sync::mpsc","The transmission end of a channel which is used to send…",N,N],[3,"UnboundedSender","","The transmission end of a channel which is used to send…",N,N],[3,"Receiver","","The receiving end of a channel which implements the…",N,N],[3,"UnboundedReceiver","","The receiving end of a channel which implements the…",N,N],[3,"SendError","","Error type for sending, used when the receiving end of a…",N,N],[3,"TrySendError","","Error type returned from `try_send`",N,N],[3,"SpawnHandle","","Handle returned from the `spawn` function.",N,N],[3,"Execute","","Type of future which `Executor` instances must be able to…",N,N],[5,"channel","","Creates an in-memory channel implementation of the…",N,N],[5,"unbounded","","Creates an in-memory channel implementation of the…",N,N],[5,"spawn","","Spawns a `stream` onto the instance of `Executor`…",N,[[["s"],["e"],["usize"]],["spawnhandle"]]],[5,"spawn_unbounded","","Spawns a `stream` onto the instance of `Executor`…",N,[[["s"],["e"]],["spawnhandle"]]],[11,"into_inner","","Returns the message that was attempted to be sent but…",56,[[["self"]],["t"]]],[11,"is_full","","Returns true if this error is a result of the channel…",57,[[["self"]],["bool"]]],[11,"is_disconnected","","Returns true if this error is a result of the receiver…",57,[[["self"]],["bool"]]],[11,"into_inner","","Returns the message that was attempted to be sent but…",57,[[["self"]],["t"]]],[11,"try_send","","Attempts to send a message on this `Sender<T>` without…",58,[[["self"],["t"]],["result",["trysenderror"]]]],[11,"poll_ready","","Polls the channel to determine if there is guaranteed to…",58,[[["self"]],["poll",["senderror"]]]],[11,"is_closed","","Returns whether this channel is closed without needing a…",58,[[["self"]],["bool"]]],[11,"is_closed","","Returns whether this channel is closed without needing a…",59,[[["self"]],["bool"]]],[11,"unbounded_send","","Sends the provided message along this channel.",59,[[["self"],["t"]],["result",["senderror"]]]],[11,"close","","Closes the receiving half",60,[[["self"]]]],[11,"close","","Closes the receiving half",61,[[["self"]]]],[11,"new","futures::sync","Creates a new `BiLock` protecting the provided data.",62,N],[11,"poll_lock","","Attempt to acquire this lock, returning `NotReady` if it…",62,[[["self"]],["async",["bilockguard"]]]],[11,"lock","","Perform a \"blocking lock\" of this lock, consuming this…",62,[[["self"]],["bilockacquire"]]],[11,"reunite","","Attempts to put the two \"halves\" of a `BiLock<T>` back…",62,[[["self"],["self"]],["result",["reuniteerror"]]]],[11,"unlock","","Recovers the original `BiLock<T>`, unlocking this lock.",63,[[["self"]],["bilock"]]],[0,"unsync","futures","Future-aware single-threaded synchronization",N,N],[0,"mpsc","futures::unsync","A multi-producer, single-consumer, futures-aware, FIFO…",N,N],[3,"Sender","futures::unsync::mpsc","The transmission end of a channel.",N,N],[3,"Receiver","","The receiving end of a channel which implements the…",N,N],[3,"UnboundedSender","","The transmission end of an unbounded channel.",N,N],[3,"UnboundedReceiver","","The receiving end of an unbounded channel.",N,N],[3,"SendError","","Error type for sending, used when the receiving end of a…",N,N],[3,"SpawnHandle","","Handle returned from the `spawn` function.",N,N],[3,"Execute","","Type of future which `Executor` instances must be able to…",N,N],[5,"channel","","Creates a bounded in-memory channel with buffered storage.",N,N],[5,"unbounded","","Creates an unbounded in-memory channel with buffered…",N,N],[5,"spawn","","Spawns a `stream` onto the instance of `Executor`…",N,[[["s"],["e"],["usize"]],["spawnhandle"]]],[5,"spawn_unbounded","","Spawns a `stream` onto the instance of `Executor`…",N,[[["s"],["e"]],["spawnhandle"]]],[11,"close","","Closes the receiving half",64,[[["self"]]]],[11,"unbounded_send","","Sends the provided message along this channel.",65,[[["self"],["t"]],["result",["senderror"]]]],[11,"close","","Closes the receiving half",66,[[["self"]]]],[11,"into_inner","","Returns the message that was attempted to be sent but…",67,[[["self"]],["t"]]],[0,"oneshot","futures::unsync","A one-shot, futures-aware channel",N,N],[3,"Sender","futures::unsync::oneshot","Represents the completion half of a oneshot through which…",N,N],[3,"Receiver","","A future representing the completion of a computation…",N,N],[3,"SpawnHandle","","Handle returned from the `spawn` function.",N,N],[3,"Execute","","Type of future which `Spawn` instances below must be able…",N,N],[5,"channel","","Creates a new futures-aware, one-shot channel.",N,N],[5,"spawn","","Spawns a `future` onto the instance of `Executor`…",N,[[["f"],["e"]],["spawnhandle"]]],[5,"spawn_fn","","Spawns a function `f` onto the `Spawn` instance provided…",N,[[["f"],["e"]],["spawnhandle"]]],[11,"send","","Completes this oneshot with a successful result.",68,[[["self"],["t"]],["result"]]],[11,"poll_cancel","","Polls this `Sender` half to detect whether the `Receiver`…",68,[[["self"]],["poll"]]],[11,"is_canceled","","Tests to see whether this `Sender`'s corresponding…",68,[[["self"]],["bool"]]],[11,"close","","Gracefully close this receiver, preventing sending any…",69,[[["self"]]]],[11,"forget","","Drop this future without canceling the underlying future.",70,[[["self"]]]],[0,"prelude","futures","A \"prelude\" for crates using the `futures` crate.",N,N],[6,"Poll","","Return type of the `Future::poll` method, indicates…",N,N],[6,"StartSend","","Return type of the `Sink::start_send` method, indicating…",N,N],[14,"try_ready","","A macro for extracting the successful type of a `Poll<T,…",N,N],[14,"task_local","","A macro to create a `static` of type `LocalKey`",N,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"into_future","futures::future","",71,[[["self"]],["f"]]],[11,"try_from","","",71,[[["u"]],["result"]]],[11,"from","","",71,[[["t"]],["t"]]],[11,"try_into","","",71,[[["self"]],["result"]]],[11,"into","","",71,[[["self"]],["u"]]],[11,"borrow","","",71,[[["self"]],["t"]]],[11,"borrow_mut","","",71,[[["self"]],["t"]]],[11,"get_type_id","","",71,[[["self"]],["typeid"]]],[11,"into_future","","",72,[[["self"]],["f"]]],[11,"try_from","","",72,[[["u"]],["result"]]],[11,"from","","",72,[[["t"]],["t"]]],[11,"try_into","","",72,[[["self"]],["result"]]],[11,"into","","",72,[[["self"]],["u"]]],[11,"borrow","","",72,[[["self"]],["t"]]],[11,"borrow_mut","","",72,[[["self"]],["t"]]],[11,"get_type_id","","",72,[[["self"]],["typeid"]]],[11,"into_future","","",73,[[["self"]],["f"]]],[11,"try_from","","",73,[[["u"]],["result"]]],[11,"from","","",73,[[["t"]],["t"]]],[11,"try_into","","",73,[[["self"]],["result"]]],[11,"into","","",73,[[["self"]],["u"]]],[11,"borrow","","",73,[[["self"]],["t"]]],[11,"borrow_mut","","",73,[[["self"]],["t"]]],[11,"get_type_id","","",73,[[["self"]],["typeid"]]],[11,"into_future","","",74,[[["self"]],["f"]]],[11,"try_from","","",74,[[["u"]],["result"]]],[11,"from","","",74,[[["t"]],["t"]]],[11,"try_into","","",74,[[["self"]],["result"]]],[11,"into","","",74,[[["self"]],["u"]]],[11,"borrow","","",74,[[["self"]],["t"]]],[11,"borrow_mut","","",74,[[["self"]],["t"]]],[11,"get_type_id","","",74,[[["self"]],["typeid"]]],[11,"to_owned","","",74,[[["self"]],["t"]]],[11,"clone_into","","",74,N],[11,"into_future","","",75,[[["self"]],["f"]]],[11,"try_from","","",75,[[["u"]],["result"]]],[11,"from","","",75,[[["t"]],["t"]]],[11,"try_into","","",75,[[["self"]],["result"]]],[11,"into","","",75,[[["self"]],["u"]]],[11,"borrow","","",75,[[["self"]],["t"]]],[11,"borrow_mut","","",75,[[["self"]],["t"]]],[11,"get_type_id","","",75,[[["self"]],["typeid"]]],[11,"into_future","","",76,[[["self"]],["f"]]],[11,"try_from","","",76,[[["u"]],["result"]]],[11,"from","","",76,[[["t"]],["t"]]],[11,"try_into","","",76,[[["self"]],["result"]]],[11,"into","","",76,[[["self"]],["u"]]],[11,"borrow","","",76,[[["self"]],["t"]]],[11,"borrow_mut","","",76,[[["self"]],["t"]]],[11,"get_type_id","","",76,[[["self"]],["typeid"]]],[11,"into_future","","",77,[[["self"]],["f"]]],[11,"try_from","","",77,[[["u"]],["result"]]],[11,"from","","",77,[[["t"]],["t"]]],[11,"try_into","","",77,[[["self"]],["result"]]],[11,"into","","",77,[[["self"]],["u"]]],[11,"borrow","","",77,[[["self"]],["t"]]],[11,"borrow_mut","","",77,[[["self"]],["t"]]],[11,"get_type_id","","",77,[[["self"]],["typeid"]]],[11,"try_from","","",78,[[["u"]],["result"]]],[11,"from","","",78,[[["t"]],["t"]]],[11,"try_into","","",78,[[["self"]],["result"]]],[11,"into","","",78,[[["self"]],["u"]]],[11,"borrow","","",78,[[["self"]],["t"]]],[11,"borrow_mut","","",78,[[["self"]],["t"]]],[11,"get_type_id","","",78,[[["self"]],["typeid"]]],[11,"into_future","","",5,[[["self"]],["f"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"try_from","","",79,[[["u"]],["result"]]],[11,"from","","",79,[[["t"]],["t"]]],[11,"try_into","","",79,[[["self"]],["result"]]],[11,"into","","",79,[[["self"]],["u"]]],[11,"borrow","","",79,[[["self"]],["t"]]],[11,"borrow_mut","","",79,[[["self"]],["t"]]],[11,"get_type_id","","",79,[[["self"]],["typeid"]]],[11,"into_future","","",80,[[["self"]],["f"]]],[11,"try_from","","",80,[[["u"]],["result"]]],[11,"from","","",80,[[["t"]],["t"]]],[11,"try_into","","",80,[[["self"]],["result"]]],[11,"into","","",80,[[["self"]],["u"]]],[11,"borrow","","",80,[[["self"]],["t"]]],[11,"borrow_mut","","",80,[[["self"]],["t"]]],[11,"get_type_id","","",80,[[["self"]],["typeid"]]],[11,"into_future","","",81,[[["self"]],["f"]]],[11,"try_from","","",81,[[["u"]],["result"]]],[11,"from","","",81,[[["t"]],["t"]]],[11,"try_into","","",81,[[["self"]],["result"]]],[11,"into","","",81,[[["self"]],["u"]]],[11,"borrow","","",81,[[["self"]],["t"]]],[11,"borrow_mut","","",81,[[["self"]],["t"]]],[11,"get_type_id","","",81,[[["self"]],["typeid"]]],[11,"into_future","","",82,[[["self"]],["f"]]],[11,"try_from","","",82,[[["u"]],["result"]]],[11,"from","","",82,[[["t"]],["t"]]],[11,"try_into","","",82,[[["self"]],["result"]]],[11,"into","","",82,[[["self"]],["u"]]],[11,"borrow","","",82,[[["self"]],["t"]]],[11,"borrow_mut","","",82,[[["self"]],["t"]]],[11,"get_type_id","","",82,[[["self"]],["typeid"]]],[11,"into_future","","",83,[[["self"]],["f"]]],[11,"try_from","","",83,[[["u"]],["result"]]],[11,"from","","",83,[[["t"]],["t"]]],[11,"try_into","","",83,[[["self"]],["result"]]],[11,"into","","",83,[[["self"]],["u"]]],[11,"borrow","","",83,[[["self"]],["t"]]],[11,"borrow_mut","","",83,[[["self"]],["t"]]],[11,"get_type_id","","",83,[[["self"]],["typeid"]]],[11,"into_future","","",84,[[["self"]],["f"]]],[11,"try_from","","",84,[[["u"]],["result"]]],[11,"from","","",84,[[["t"]],["t"]]],[11,"try_into","","",84,[[["self"]],["result"]]],[11,"into","","",84,[[["self"]],["u"]]],[11,"borrow","","",84,[[["self"]],["t"]]],[11,"borrow_mut","","",84,[[["self"]],["t"]]],[11,"get_type_id","","",84,[[["self"]],["typeid"]]],[11,"into_future","","",85,[[["self"]],["f"]]],[11,"try_from","","",85,[[["u"]],["result"]]],[11,"from","","",85,[[["t"]],["t"]]],[11,"try_into","","",85,[[["self"]],["result"]]],[11,"into","","",85,[[["self"]],["u"]]],[11,"borrow","","",85,[[["self"]],["t"]]],[11,"borrow_mut","","",85,[[["self"]],["t"]]],[11,"get_type_id","","",85,[[["self"]],["typeid"]]],[11,"into_future","","",86,[[["self"]],["f"]]],[11,"try_from","","",86,[[["u"]],["result"]]],[11,"from","","",86,[[["t"]],["t"]]],[11,"try_into","","",86,[[["self"]],["result"]]],[11,"into","","",86,[[["self"]],["u"]]],[11,"borrow","","",86,[[["self"]],["t"]]],[11,"borrow_mut","","",86,[[["self"]],["t"]]],[11,"get_type_id","","",86,[[["self"]],["typeid"]]],[11,"into_future","","",87,[[["self"]],["f"]]],[11,"try_from","","",87,[[["u"]],["result"]]],[11,"from","","",87,[[["t"]],["t"]]],[11,"try_into","","",87,[[["self"]],["result"]]],[11,"into","","",87,[[["self"]],["u"]]],[11,"borrow","","",87,[[["self"]],["t"]]],[11,"borrow_mut","","",87,[[["self"]],["t"]]],[11,"get_type_id","","",87,[[["self"]],["typeid"]]],[11,"into_future","","",88,[[["self"]],["f"]]],[11,"try_from","","",88,[[["u"]],["result"]]],[11,"from","","",88,[[["t"]],["t"]]],[11,"try_into","","",88,[[["self"]],["result"]]],[11,"into","","",88,[[["self"]],["u"]]],[11,"borrow","","",88,[[["self"]],["t"]]],[11,"borrow_mut","","",88,[[["self"]],["t"]]],[11,"get_type_id","","",88,[[["self"]],["typeid"]]],[11,"into_future","","",89,[[["self"]],["f"]]],[11,"try_from","","",89,[[["u"]],["result"]]],[11,"from","","",89,[[["t"]],["t"]]],[11,"try_into","","",89,[[["self"]],["result"]]],[11,"into","","",89,[[["self"]],["u"]]],[11,"borrow","","",89,[[["self"]],["t"]]],[11,"borrow_mut","","",89,[[["self"]],["t"]]],[11,"get_type_id","","",89,[[["self"]],["typeid"]]],[11,"into_future","","",90,[[["self"]],["f"]]],[11,"try_from","","",90,[[["u"]],["result"]]],[11,"from","","",90,[[["t"]],["t"]]],[11,"try_into","","",90,[[["self"]],["result"]]],[11,"into","","",90,[[["self"]],["u"]]],[11,"borrow","","",90,[[["self"]],["t"]]],[11,"borrow_mut","","",90,[[["self"]],["t"]]],[11,"get_type_id","","",90,[[["self"]],["typeid"]]],[11,"into_future","","",91,[[["self"]],["f"]]],[11,"try_from","","",91,[[["u"]],["result"]]],[11,"from","","",91,[[["t"]],["t"]]],[11,"try_into","","",91,[[["self"]],["result"]]],[11,"into","","",91,[[["self"]],["u"]]],[11,"borrow","","",91,[[["self"]],["t"]]],[11,"borrow_mut","","",91,[[["self"]],["t"]]],[11,"get_type_id","","",91,[[["self"]],["typeid"]]],[11,"into_future","","",92,[[["self"]],["f"]]],[11,"try_from","","",92,[[["u"]],["result"]]],[11,"from","","",92,[[["t"]],["t"]]],[11,"try_into","","",92,[[["self"]],["result"]]],[11,"into","","",92,[[["self"]],["u"]]],[11,"borrow","","",92,[[["self"]],["t"]]],[11,"borrow_mut","","",92,[[["self"]],["t"]]],[11,"get_type_id","","",92,[[["self"]],["typeid"]]],[11,"into_future","","",93,[[["self"]],["f"]]],[11,"try_from","","",93,[[["u"]],["result"]]],[11,"from","","",93,[[["t"]],["t"]]],[11,"try_into","","",93,[[["self"]],["result"]]],[11,"into","","",93,[[["self"]],["u"]]],[11,"borrow","","",93,[[["self"]],["t"]]],[11,"borrow_mut","","",93,[[["self"]],["t"]]],[11,"get_type_id","","",93,[[["self"]],["typeid"]]],[11,"into_future","","",94,[[["self"]],["f"]]],[11,"try_from","","",94,[[["u"]],["result"]]],[11,"from","","",94,[[["t"]],["t"]]],[11,"try_into","","",94,[[["self"]],["result"]]],[11,"into","","",94,[[["self"]],["u"]]],[11,"borrow","","",94,[[["self"]],["t"]]],[11,"borrow_mut","","",94,[[["self"]],["t"]]],[11,"get_type_id","","",94,[[["self"]],["typeid"]]],[11,"into_future","","",95,[[["self"]],["f"]]],[11,"try_from","","",95,[[["u"]],["result"]]],[11,"from","","",95,[[["t"]],["t"]]],[11,"try_into","","",95,[[["self"]],["result"]]],[11,"into","","",95,[[["self"]],["u"]]],[11,"borrow","","",95,[[["self"]],["t"]]],[11,"borrow_mut","","",95,[[["self"]],["t"]]],[11,"get_type_id","","",95,[[["self"]],["typeid"]]],[11,"into_future","","",96,[[["self"]],["f"]]],[11,"try_from","","",96,[[["u"]],["result"]]],[11,"from","","",96,[[["t"]],["t"]]],[11,"try_into","","",96,[[["self"]],["result"]]],[11,"into","","",96,[[["self"]],["u"]]],[11,"borrow","","",96,[[["self"]],["t"]]],[11,"borrow_mut","","",96,[[["self"]],["t"]]],[11,"get_type_id","","",96,[[["self"]],["typeid"]]],[11,"into_future","","",6,[[["self"]],["f"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"try_from","","",97,[[["u"]],["result"]]],[11,"from","","",97,[[["t"]],["t"]]],[11,"try_into","","",97,[[["self"]],["result"]]],[11,"into","","",97,[[["self"]],["u"]]],[11,"borrow","","",97,[[["self"]],["t"]]],[11,"borrow_mut","","",97,[[["self"]],["t"]]],[11,"get_type_id","","",97,[[["self"]],["typeid"]]],[11,"to_owned","","",97,[[["self"]],["t"]]],[11,"clone_into","","",97,N],[11,"try_from","","",98,[[["u"]],["result"]]],[11,"from","","",98,[[["t"]],["t"]]],[11,"try_into","","",98,[[["self"]],["result"]]],[11,"into","","",98,[[["self"]],["u"]]],[11,"borrow","","",98,[[["self"]],["t"]]],[11,"borrow_mut","","",98,[[["self"]],["t"]]],[11,"get_type_id","","",98,[[["self"]],["typeid"]]],[11,"to_string","","",98,[[["self"]],["string"]]],[11,"to_owned","","",98,[[["self"]],["t"]]],[11,"clone_into","","",98,N],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"into_future","","",3,[[["self"]],["f"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"try_from","futures::stream","",99,[[["u"]],["result"]]],[11,"from","","",99,[[["t"]],["t"]]],[11,"try_into","","",99,[[["self"]],["result"]]],[11,"into","","",99,[[["self"]],["u"]]],[11,"borrow","","",99,[[["self"]],["t"]]],[11,"borrow_mut","","",99,[[["self"]],["t"]]],[11,"get_type_id","","",99,[[["self"]],["typeid"]]],[11,"try_from","","",100,[[["u"]],["result"]]],[11,"from","","",100,[[["t"]],["t"]]],[11,"try_into","","",100,[[["self"]],["result"]]],[11,"into","","",100,[[["self"]],["u"]]],[11,"borrow","","",100,[[["self"]],["t"]]],[11,"borrow_mut","","",100,[[["self"]],["t"]]],[11,"get_type_id","","",100,[[["self"]],["typeid"]]],[11,"try_from","","",101,[[["u"]],["result"]]],[11,"from","","",101,[[["t"]],["t"]]],[11,"try_into","","",101,[[["self"]],["result"]]],[11,"into","","",101,[[["self"]],["u"]]],[11,"borrow","","",101,[[["self"]],["t"]]],[11,"borrow_mut","","",101,[[["self"]],["t"]]],[11,"get_type_id","","",101,[[["self"]],["typeid"]]],[11,"try_from","","",102,[[["u"]],["result"]]],[11,"from","","",102,[[["t"]],["t"]]],[11,"try_into","","",102,[[["self"]],["result"]]],[11,"into","","",102,[[["self"]],["u"]]],[11,"borrow","","",102,[[["self"]],["t"]]],[11,"borrow_mut","","",102,[[["self"]],["t"]]],[11,"get_type_id","","",102,[[["self"]],["typeid"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"try_from","","",103,[[["u"]],["result"]]],[11,"from","","",103,[[["t"]],["t"]]],[11,"try_into","","",103,[[["self"]],["result"]]],[11,"into","","",103,[[["self"]],["u"]]],[11,"borrow","","",103,[[["self"]],["t"]]],[11,"borrow_mut","","",103,[[["self"]],["t"]]],[11,"get_type_id","","",103,[[["self"]],["typeid"]]],[11,"into_future","","",104,[[["self"]],["f"]]],[11,"try_from","","",104,[[["u"]],["result"]]],[11,"from","","",104,[[["t"]],["t"]]],[11,"try_into","","",104,[[["self"]],["result"]]],[11,"into","","",104,[[["self"]],["u"]]],[11,"borrow","","",104,[[["self"]],["t"]]],[11,"borrow_mut","","",104,[[["self"]],["t"]]],[11,"get_type_id","","",104,[[["self"]],["typeid"]]],[11,"into_future","","",105,[[["self"]],["f"]]],[11,"try_from","","",105,[[["u"]],["result"]]],[11,"from","","",105,[[["t"]],["t"]]],[11,"try_into","","",105,[[["self"]],["result"]]],[11,"into","","",105,[[["self"]],["u"]]],[11,"borrow","","",105,[[["self"]],["t"]]],[11,"borrow_mut","","",105,[[["self"]],["t"]]],[11,"get_type_id","","",105,[[["self"]],["typeid"]]],[11,"try_from","","",106,[[["u"]],["result"]]],[11,"from","","",106,[[["t"]],["t"]]],[11,"try_into","","",106,[[["self"]],["result"]]],[11,"into","","",106,[[["self"]],["u"]]],[11,"borrow","","",106,[[["self"]],["t"]]],[11,"borrow_mut","","",106,[[["self"]],["t"]]],[11,"get_type_id","","",106,[[["self"]],["typeid"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"into_future","","",107,[[["self"]],["f"]]],[11,"try_from","","",107,[[["u"]],["result"]]],[11,"from","","",107,[[["t"]],["t"]]],[11,"try_into","","",107,[[["self"]],["result"]]],[11,"into","","",107,[[["self"]],["u"]]],[11,"borrow","","",107,[[["self"]],["t"]]],[11,"borrow_mut","","",107,[[["self"]],["t"]]],[11,"get_type_id","","",107,[[["self"]],["typeid"]]],[11,"into_future","","",108,[[["self"]],["f"]]],[11,"try_from","","",108,[[["u"]],["result"]]],[11,"from","","",108,[[["t"]],["t"]]],[11,"try_into","","",108,[[["self"]],["result"]]],[11,"into","","",108,[[["self"]],["u"]]],[11,"borrow","","",108,[[["self"]],["t"]]],[11,"borrow_mut","","",108,[[["self"]],["t"]]],[11,"get_type_id","","",108,[[["self"]],["typeid"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"into","","",19,[[["self"]],["u"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"into_future","","",20,[[["self"]],["f"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"try_into","","",20,[[["self"]],["result"]]],[11,"into","","",20,[[["self"]],["u"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"try_into","","",21,[[["self"]],["result"]]],[11,"into","","",21,[[["self"]],["u"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"try_into","","",22,[[["self"]],["result"]]],[11,"into","","",22,[[["self"]],["u"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"get_type_id","","",22,[[["self"]],["typeid"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"try_into","","",23,[[["self"]],["result"]]],[11,"into","","",23,[[["self"]],["u"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"get_type_id","","",23,[[["self"]],["typeid"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"try_into","","",24,[[["self"]],["result"]]],[11,"into","","",24,[[["self"]],["u"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"get_type_id","","",24,[[["self"]],["typeid"]]],[11,"try_from","","",109,[[["u"]],["result"]]],[11,"from","","",109,[[["t"]],["t"]]],[11,"try_into","","",109,[[["self"]],["result"]]],[11,"into","","",109,[[["self"]],["u"]]],[11,"borrow","","",109,[[["self"]],["t"]]],[11,"borrow_mut","","",109,[[["self"]],["t"]]],[11,"get_type_id","","",109,[[["self"]],["typeid"]]],[11,"try_from","","",110,[[["u"]],["result"]]],[11,"from","","",110,[[["t"]],["t"]]],[11,"try_into","","",110,[[["self"]],["result"]]],[11,"into","","",110,[[["self"]],["u"]]],[11,"borrow","","",110,[[["self"]],["t"]]],[11,"borrow_mut","","",110,[[["self"]],["t"]]],[11,"get_type_id","","",110,[[["self"]],["typeid"]]],[11,"try_from","","",111,[[["u"]],["result"]]],[11,"from","","",111,[[["t"]],["t"]]],[11,"try_into","","",111,[[["self"]],["result"]]],[11,"into","","",111,[[["self"]],["u"]]],[11,"borrow","","",111,[[["self"]],["t"]]],[11,"borrow_mut","","",111,[[["self"]],["t"]]],[11,"get_type_id","","",111,[[["self"]],["typeid"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"try_into","","",25,[[["self"]],["result"]]],[11,"into","","",25,[[["self"]],["u"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"get_type_id","","",25,[[["self"]],["typeid"]]],[11,"try_from","","",112,[[["u"]],["result"]]],[11,"from","","",112,[[["t"]],["t"]]],[11,"try_into","","",112,[[["self"]],["result"]]],[11,"into","","",112,[[["self"]],["u"]]],[11,"borrow","","",112,[[["self"]],["t"]]],[11,"borrow_mut","","",112,[[["self"]],["t"]]],[11,"get_type_id","","",112,[[["self"]],["typeid"]]],[11,"try_from","","",113,[[["u"]],["result"]]],[11,"from","","",113,[[["t"]],["t"]]],[11,"try_into","","",113,[[["self"]],["result"]]],[11,"into","","",113,[[["self"]],["u"]]],[11,"borrow","","",113,[[["self"]],["t"]]],[11,"borrow_mut","","",113,[[["self"]],["t"]]],[11,"get_type_id","","",113,[[["self"]],["typeid"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"try_into","","",26,[[["self"]],["result"]]],[11,"into","","",26,[[["self"]],["u"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"get_type_id","","",26,[[["self"]],["typeid"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"try_into","","",27,[[["self"]],["result"]]],[11,"into","","",27,[[["self"]],["u"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"get_type_id","","",27,[[["self"]],["typeid"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"try_into","","",28,[[["self"]],["result"]]],[11,"into","","",28,[[["self"]],["u"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"get_type_id","","",28,[[["self"]],["typeid"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"try_into","","",29,[[["self"]],["result"]]],[11,"into","","",29,[[["self"]],["u"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"get_type_id","","",29,[[["self"]],["typeid"]]],[11,"try_from","","",114,[[["u"]],["result"]]],[11,"from","","",114,[[["t"]],["t"]]],[11,"try_into","","",114,[[["self"]],["result"]]],[11,"into","","",114,[[["self"]],["u"]]],[11,"borrow","","",114,[[["self"]],["t"]]],[11,"borrow_mut","","",114,[[["self"]],["t"]]],[11,"get_type_id","","",114,[[["self"]],["typeid"]]],[11,"try_from","","",115,[[["u"]],["result"]]],[11,"from","","",115,[[["t"]],["t"]]],[11,"try_into","","",115,[[["self"]],["result"]]],[11,"into","","",115,[[["self"]],["u"]]],[11,"borrow","","",115,[[["self"]],["t"]]],[11,"borrow_mut","","",115,[[["self"]],["t"]]],[11,"get_type_id","","",115,[[["self"]],["typeid"]]],[11,"try_from","","",116,[[["u"]],["result"]]],[11,"from","","",116,[[["t"]],["t"]]],[11,"try_into","","",116,[[["self"]],["result"]]],[11,"into","","",116,[[["self"]],["u"]]],[11,"borrow","","",116,[[["self"]],["t"]]],[11,"borrow_mut","","",116,[[["self"]],["t"]]],[11,"get_type_id","","",116,[[["self"]],["typeid"]]],[11,"into_future","","",30,[[["self"]],["f"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"try_into","","",30,[[["self"]],["result"]]],[11,"into","","",30,[[["self"]],["u"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"get_type_id","","",30,[[["self"]],["typeid"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"try_into","","",31,[[["self"]],["result"]]],[11,"into","","",31,[[["self"]],["u"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"get_type_id","","",31,[[["self"]],["typeid"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"try_into","","",32,[[["self"]],["result"]]],[11,"into","","",32,[[["self"]],["u"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"get_type_id","","",32,[[["self"]],["typeid"]]],[11,"try_from","","",117,[[["u"]],["result"]]],[11,"from","","",117,[[["t"]],["t"]]],[11,"try_into","","",117,[[["self"]],["result"]]],[11,"into","","",117,[[["self"]],["u"]]],[11,"borrow","","",117,[[["self"]],["t"]]],[11,"borrow_mut","","",117,[[["self"]],["t"]]],[11,"get_type_id","","",117,[[["self"]],["typeid"]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"try_into","","",33,[[["self"]],["result"]]],[11,"into","","",33,[[["self"]],["u"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"get_type_id","","",33,[[["self"]],["typeid"]]],[11,"into_future","","",118,[[["self"]],["f"]]],[11,"try_from","","",118,[[["u"]],["result"]]],[11,"from","","",118,[[["t"]],["t"]]],[11,"try_into","","",118,[[["self"]],["result"]]],[11,"into","","",118,[[["self"]],["u"]]],[11,"borrow","","",118,[[["self"]],["t"]]],[11,"borrow_mut","","",118,[[["self"]],["t"]]],[11,"get_type_id","","",118,[[["self"]],["typeid"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into_iter","","",34,[[["self"]],["i"]]],[11,"try_into","","",34,[[["self"]],["result"]]],[11,"into","","",34,[[["self"]],["u"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"get_type_id","","",34,[[["self"]],["typeid"]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"try_into","","",35,[[["self"]],["result"]]],[11,"into","","",35,[[["self"]],["u"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"get_type_id","","",35,[[["self"]],["typeid"]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"try_into","","",36,[[["self"]],["result"]]],[11,"into","","",36,[[["self"]],["u"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"get_type_id","","",36,[[["self"]],["typeid"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"to_string","","",12,[[["self"]],["string"]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"try_into","","",38,[[["self"]],["result"]]],[11,"into","","",38,[[["self"]],["u"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"get_type_id","","",38,[[["self"]],["typeid"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"try_from","futures::stream::futures_unordered","",37,[[["u"]],["result"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"try_into","","",37,[[["self"]],["result"]]],[11,"into","","",37,[[["self"]],["u"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"get_type_id","","",37,[[["self"]],["typeid"]]],[11,"try_from","","",119,[[["u"]],["result"]]],[11,"from","","",119,[[["t"]],["t"]]],[11,"into_iter","","",119,[[["self"]],["i"]]],[11,"try_into","","",119,[[["self"]],["result"]]],[11,"into","","",119,[[["self"]],["u"]]],[11,"borrow","","",119,[[["self"]],["t"]]],[11,"borrow_mut","","",119,[[["self"]],["t"]]],[11,"get_type_id","","",119,[[["self"]],["typeid"]]],[11,"try_from","futures::sink","",47,[[["u"]],["result"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"try_into","","",47,[[["self"]],["result"]]],[11,"into","","",47,[[["self"]],["u"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"get_type_id","","",47,[[["self"]],["typeid"]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"try_into","","",48,[[["self"]],["result"]]],[11,"into","","",48,[[["self"]],["u"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"get_type_id","","",48,[[["self"]],["typeid"]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"try_into","","",40,[[["self"]],["result"]]],[11,"into","","",40,[[["self"]],["u"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"get_type_id","","",40,[[["self"]],["typeid"]]],[11,"to_owned","","",40,[[["self"]],["t"]]],[11,"clone_into","","",40,N],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"try_into","","",41,[[["self"]],["result"]]],[11,"into","","",41,[[["self"]],["u"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"get_type_id","","",41,[[["self"]],["typeid"]]],[11,"into_future","","",42,[[["self"]],["f"]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"try_into","","",42,[[["self"]],["result"]]],[11,"into","","",42,[[["self"]],["u"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"get_type_id","","",42,[[["self"]],["typeid"]]],[11,"into_future","","",44,[[["self"]],["f"]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"try_into","","",44,[[["self"]],["result"]]],[11,"into","","",44,[[["self"]],["u"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"get_type_id","","",44,[[["self"]],["typeid"]]],[11,"into_future","","",120,[[["self"]],["f"]]],[11,"try_from","","",120,[[["u"]],["result"]]],[11,"from","","",120,[[["t"]],["t"]]],[11,"try_into","","",120,[[["self"]],["result"]]],[11,"into","","",120,[[["self"]],["u"]]],[11,"borrow","","",120,[[["self"]],["t"]]],[11,"borrow_mut","","",120,[[["self"]],["t"]]],[11,"get_type_id","","",120,[[["self"]],["typeid"]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"try_into","","",45,[[["self"]],["result"]]],[11,"into","","",45,[[["self"]],["u"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"get_type_id","","",45,[[["self"]],["typeid"]]],[11,"to_owned","","",45,[[["self"]],["t"]]],[11,"clone_into","","",45,N],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"try_into","","",43,[[["self"]],["result"]]],[11,"into","","",43,[[["self"]],["u"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"get_type_id","","",43,[[["self"]],["typeid"]]],[11,"to_owned","","",43,[[["self"]],["t"]]],[11,"clone_into","","",43,N],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"try_into","","",46,[[["self"]],["result"]]],[11,"into","","",46,[[["self"]],["u"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"get_type_id","","",46,[[["self"]],["typeid"]]],[11,"try_from","futures::task","",121,[[["u"]],["result"]]],[11,"from","","",121,[[["t"]],["t"]]],[11,"try_into","","",121,[[["self"]],["result"]]],[11,"into","","",121,[[["self"]],["u"]]],[11,"borrow","","",121,[[["self"]],["t"]]],[11,"borrow_mut","","",121,[[["self"]],["t"]]],[11,"get_type_id","","",121,[[["self"]],["typeid"]]],[11,"to_owned","","",121,[[["self"]],["t"]]],[11,"clone_into","","",121,N],[11,"try_from","futures::executor","",122,[[["u"]],["result"]]],[11,"from","","",122,[[["t"]],["t"]]],[11,"try_into","","",122,[[["self"]],["result"]]],[11,"into","","",122,[[["self"]],["u"]]],[11,"borrow","","",122,[[["self"]],["t"]]],[11,"borrow_mut","","",122,[[["self"]],["t"]]],[11,"get_type_id","","",122,[[["self"]],["typeid"]]],[11,"try_from","","",123,[[["u"]],["result"]]],[11,"from","","",123,[[["t"]],["t"]]],[11,"try_into","","",123,[[["self"]],["result"]]],[11,"into","","",123,[[["self"]],["u"]]],[11,"borrow","","",123,[[["self"]],["t"]]],[11,"borrow_mut","","",123,[[["self"]],["t"]]],[11,"get_type_id","","",123,[[["self"]],["typeid"]]],[11,"to_owned","","",123,[[["self"]],["t"]]],[11,"clone_into","","",123,N],[11,"try_from","futures::task","",124,[[["u"]],["result"]]],[11,"from","","",124,[[["t"]],["t"]]],[11,"try_into","","",124,[[["self"]],["result"]]],[11,"into","","",124,[[["self"]],["u"]]],[11,"borrow","","",124,[[["self"]],["t"]]],[11,"borrow_mut","","",124,[[["self"]],["t"]]],[11,"get_type_id","","",124,[[["self"]],["typeid"]]],[11,"try_from","","",125,[[["u"]],["result"]]],[11,"from","","",125,[[["t"]],["t"]]],[11,"try_into","","",125,[[["self"]],["result"]]],[11,"into","","",125,[[["self"]],["u"]]],[11,"borrow","","",125,[[["self"]],["t"]]],[11,"borrow_mut","","",125,[[["self"]],["t"]]],[11,"get_type_id","","",125,[[["self"]],["typeid"]]],[11,"to_owned","","",125,[[["self"]],["t"]]],[11,"clone_into","","",125,N],[11,"try_from","","",126,[[["u"]],["result"]]],[11,"from","","",126,[[["t"]],["t"]]],[11,"try_into","","",126,[[["self"]],["result"]]],[11,"into","","",126,[[["self"]],["u"]]],[11,"borrow","","",126,[[["self"]],["t"]]],[11,"borrow_mut","","",126,[[["self"]],["t"]]],[11,"get_type_id","","",126,[[["self"]],["typeid"]]],[11,"try_from","futures::sync","",62,[[["u"]],["result"]]],[11,"from","","",62,[[["t"]],["t"]]],[11,"try_into","","",62,[[["self"]],["result"]]],[11,"into","","",62,[[["self"]],["u"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"get_type_id","","",62,[[["self"]],["typeid"]]],[11,"try_from","","",127,[[["u"]],["result"]]],[11,"from","","",127,[[["t"]],["t"]]],[11,"try_into","","",127,[[["self"]],["result"]]],[11,"into","","",127,[[["self"]],["u"]]],[11,"borrow","","",127,[[["self"]],["t"]]],[11,"borrow_mut","","",127,[[["self"]],["t"]]],[11,"get_type_id","","",127,[[["self"]],["typeid"]]],[11,"into_future","","",128,[[["self"]],["f"]]],[11,"try_from","","",128,[[["u"]],["result"]]],[11,"from","","",128,[[["t"]],["t"]]],[11,"try_into","","",128,[[["self"]],["result"]]],[11,"into","","",128,[[["self"]],["u"]]],[11,"borrow","","",128,[[["self"]],["t"]]],[11,"borrow_mut","","",128,[[["self"]],["t"]]],[11,"get_type_id","","",128,[[["self"]],["typeid"]]],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"from","","",63,[[["t"]],["t"]]],[11,"try_into","","",63,[[["self"]],["result"]]],[11,"into","","",63,[[["self"]],["u"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"get_type_id","","",63,[[["self"]],["typeid"]]],[11,"into_future","futures::sync::oneshot","",54,[[["self"]],["f"]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"from","","",54,[[["t"]],["t"]]],[11,"try_into","","",54,[[["self"]],["result"]]],[11,"into","","",54,[[["self"]],["u"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"get_type_id","","",54,[[["self"]],["typeid"]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"from","","",53,[[["t"]],["t"]]],[11,"try_into","","",53,[[["self"]],["result"]]],[11,"into","","",53,[[["self"]],["u"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"get_type_id","","",53,[[["self"]],["typeid"]]],[11,"try_from","","",129,[[["u"]],["result"]]],[11,"from","","",129,[[["t"]],["t"]]],[11,"try_into","","",129,[[["self"]],["result"]]],[11,"into","","",129,[[["self"]],["u"]]],[11,"borrow","","",129,[[["self"]],["t"]]],[11,"borrow_mut","","",129,[[["self"]],["t"]]],[11,"get_type_id","","",129,[[["self"]],["typeid"]]],[11,"to_string","","",129,[[["self"]],["string"]]],[11,"to_owned","","",129,[[["self"]],["t"]]],[11,"clone_into","","",129,N],[11,"into_future","","",55,[[["self"]],["f"]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"from","","",55,[[["t"]],["t"]]],[11,"try_into","","",55,[[["self"]],["result"]]],[11,"into","","",55,[[["self"]],["u"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"get_type_id","","",55,[[["self"]],["typeid"]]],[11,"into_future","","",130,[[["self"]],["f"]]],[11,"try_from","","",130,[[["u"]],["result"]]],[11,"from","","",130,[[["t"]],["t"]]],[11,"try_into","","",130,[[["self"]],["result"]]],[11,"into","","",130,[[["self"]],["u"]]],[11,"borrow","","",130,[[["self"]],["t"]]],[11,"borrow_mut","","",130,[[["self"]],["t"]]],[11,"get_type_id","","",130,[[["self"]],["typeid"]]],[11,"try_from","futures::sync::mpsc","",58,[[["u"]],["result"]]],[11,"from","","",58,[[["t"]],["t"]]],[11,"try_into","","",58,[[["self"]],["result"]]],[11,"into","","",58,[[["self"]],["u"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"get_type_id","","",58,[[["self"]],["typeid"]]],[11,"to_owned","","",58,[[["self"]],["t"]]],[11,"clone_into","","",58,N],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"from","","",59,[[["t"]],["t"]]],[11,"try_into","","",59,[[["self"]],["result"]]],[11,"into","","",59,[[["self"]],["u"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"get_type_id","","",59,[[["self"]],["typeid"]]],[11,"to_owned","","",59,[[["self"]],["t"]]],[11,"clone_into","","",59,N],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"from","","",60,[[["t"]],["t"]]],[11,"try_into","","",60,[[["self"]],["result"]]],[11,"into","","",60,[[["self"]],["u"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"get_type_id","","",60,[[["self"]],["typeid"]]],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"from","","",61,[[["t"]],["t"]]],[11,"try_into","","",61,[[["self"]],["result"]]],[11,"into","","",61,[[["self"]],["u"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"get_type_id","","",61,[[["self"]],["typeid"]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"from","","",56,[[["t"]],["t"]]],[11,"try_into","","",56,[[["self"]],["result"]]],[11,"into","","",56,[[["self"]],["u"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"get_type_id","","",56,[[["self"]],["typeid"]]],[11,"to_string","","",56,[[["self"]],["string"]]],[11,"to_owned","","",56,[[["self"]],["t"]]],[11,"clone_into","","",56,N],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"from","","",57,[[["t"]],["t"]]],[11,"try_into","","",57,[[["self"]],["result"]]],[11,"into","","",57,[[["self"]],["u"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"get_type_id","","",57,[[["self"]],["typeid"]]],[11,"to_string","","",57,[[["self"]],["string"]]],[11,"to_owned","","",57,[[["self"]],["t"]]],[11,"clone_into","","",57,N],[11,"try_from","","",131,[[["u"]],["result"]]],[11,"from","","",131,[[["t"]],["t"]]],[11,"try_into","","",131,[[["self"]],["result"]]],[11,"into","","",131,[[["self"]],["u"]]],[11,"borrow","","",131,[[["self"]],["t"]]],[11,"borrow_mut","","",131,[[["self"]],["t"]]],[11,"get_type_id","","",131,[[["self"]],["typeid"]]],[11,"into_future","","",132,[[["self"]],["f"]]],[11,"try_from","","",132,[[["u"]],["result"]]],[11,"from","","",132,[[["t"]],["t"]]],[11,"try_into","","",132,[[["self"]],["result"]]],[11,"into","","",132,[[["self"]],["u"]]],[11,"borrow","","",132,[[["self"]],["t"]]],[11,"borrow_mut","","",132,[[["self"]],["t"]]],[11,"get_type_id","","",132,[[["self"]],["typeid"]]],[11,"try_from","futures::unsync::mpsc","",133,[[["u"]],["result"]]],[11,"from","","",133,[[["t"]],["t"]]],[11,"try_into","","",133,[[["self"]],["result"]]],[11,"into","","",133,[[["self"]],["u"]]],[11,"borrow","","",133,[[["self"]],["t"]]],[11,"borrow_mut","","",133,[[["self"]],["t"]]],[11,"get_type_id","","",133,[[["self"]],["typeid"]]],[11,"to_owned","","",133,[[["self"]],["t"]]],[11,"clone_into","","",133,N],[11,"try_from","","",64,[[["u"]],["result"]]],[11,"from","","",64,[[["t"]],["t"]]],[11,"try_into","","",64,[[["self"]],["result"]]],[11,"into","","",64,[[["self"]],["u"]]],[11,"borrow","","",64,[[["self"]],["t"]]],[11,"borrow_mut","","",64,[[["self"]],["t"]]],[11,"get_type_id","","",64,[[["self"]],["typeid"]]],[11,"try_from","","",65,[[["u"]],["result"]]],[11,"from","","",65,[[["t"]],["t"]]],[11,"try_into","","",65,[[["self"]],["result"]]],[11,"into","","",65,[[["self"]],["u"]]],[11,"borrow","","",65,[[["self"]],["t"]]],[11,"borrow_mut","","",65,[[["self"]],["t"]]],[11,"get_type_id","","",65,[[["self"]],["typeid"]]],[11,"to_owned","","",65,[[["self"]],["t"]]],[11,"clone_into","","",65,N],[11,"try_from","","",66,[[["u"]],["result"]]],[11,"from","","",66,[[["t"]],["t"]]],[11,"try_into","","",66,[[["self"]],["result"]]],[11,"into","","",66,[[["self"]],["u"]]],[11,"borrow","","",66,[[["self"]],["t"]]],[11,"borrow_mut","","",66,[[["self"]],["t"]]],[11,"get_type_id","","",66,[[["self"]],["typeid"]]],[11,"try_from","","",67,[[["u"]],["result"]]],[11,"from","","",67,[[["t"]],["t"]]],[11,"try_into","","",67,[[["self"]],["result"]]],[11,"into","","",67,[[["self"]],["u"]]],[11,"borrow","","",67,[[["self"]],["t"]]],[11,"borrow_mut","","",67,[[["self"]],["t"]]],[11,"get_type_id","","",67,[[["self"]],["typeid"]]],[11,"to_string","","",67,[[["self"]],["string"]]],[11,"try_from","","",134,[[["u"]],["result"]]],[11,"from","","",134,[[["t"]],["t"]]],[11,"try_into","","",134,[[["self"]],["result"]]],[11,"into","","",134,[[["self"]],["u"]]],[11,"borrow","","",134,[[["self"]],["t"]]],[11,"borrow_mut","","",134,[[["self"]],["t"]]],[11,"get_type_id","","",134,[[["self"]],["typeid"]]],[11,"into_future","","",135,[[["self"]],["f"]]],[11,"try_from","","",135,[[["u"]],["result"]]],[11,"from","","",135,[[["t"]],["t"]]],[11,"try_into","","",135,[[["self"]],["result"]]],[11,"into","","",135,[[["self"]],["u"]]],[11,"borrow","","",135,[[["self"]],["t"]]],[11,"borrow_mut","","",135,[[["self"]],["t"]]],[11,"get_type_id","","",135,[[["self"]],["typeid"]]],[11,"try_from","futures::unsync::oneshot","",68,[[["u"]],["result"]]],[11,"from","","",68,[[["t"]],["t"]]],[11,"try_into","","",68,[[["self"]],["result"]]],[11,"into","","",68,[[["self"]],["u"]]],[11,"borrow","","",68,[[["self"]],["t"]]],[11,"borrow_mut","","",68,[[["self"]],["t"]]],[11,"get_type_id","","",68,[[["self"]],["typeid"]]],[11,"into_future","","",69,[[["self"]],["f"]]],[11,"try_from","","",69,[[["u"]],["result"]]],[11,"from","","",69,[[["t"]],["t"]]],[11,"try_into","","",69,[[["self"]],["result"]]],[11,"into","","",69,[[["self"]],["u"]]],[11,"borrow","","",69,[[["self"]],["t"]]],[11,"borrow_mut","","",69,[[["self"]],["t"]]],[11,"get_type_id","","",69,[[["self"]],["typeid"]]],[11,"into_future","","",70,[[["self"]],["f"]]],[11,"try_from","","",70,[[["u"]],["result"]]],[11,"from","","",70,[[["t"]],["t"]]],[11,"try_into","","",70,[[["self"]],["result"]]],[11,"into","","",70,[[["self"]],["u"]]],[11,"borrow","","",70,[[["self"]],["t"]]],[11,"borrow_mut","","",70,[[["self"]],["t"]]],[11,"get_type_id","","",70,[[["self"]],["typeid"]]],[11,"into_future","","",136,[[["self"]],["f"]]],[11,"try_from","","",136,[[["u"]],["result"]]],[11,"from","","",136,[[["t"]],["t"]]],[11,"try_into","","",136,[[["self"]],["result"]]],[11,"into","","",136,[[["self"]],["u"]]],[11,"borrow","","",136,[[["self"]],["t"]]],[11,"borrow_mut","","",136,[[["self"]],["t"]]],[11,"get_type_id","","",136,[[["self"]],["typeid"]]],[11,"poll","futures::future","",71,[[["self"]],["poll"]]],[11,"poll","","",72,[[["self"]],["poll"]]],[11,"poll","","",73,[[["self"]],["poll"]]],[11,"poll","","",74,[[["self"]],["poll"]]],[11,"poll","","",75,[[["self"]],["poll"]]],[11,"poll","","",76,[[["self"]],["poll"]]],[11,"poll","","",77,[[["self"]],["poll"]]],[11,"poll","","",5,[[["self"]],["poll"]]],[11,"poll","","",80,[[["self"]],["poll"]]],[11,"poll","","",81,[[["self"]],["poll"]]],[11,"poll","","",82,[[["self"]],["poll"]]],[11,"poll","","",83,[[["self"]],["poll"]]],[11,"poll","","",84,[[["self"]],["poll"]]],[11,"poll","","",85,[[["self"]],["poll"]]],[11,"poll","","",86,[[["self"]],["poll"]]],[11,"poll","","",87,[[["self"]],["poll"]]],[11,"poll","","",88,[[["self"]],["poll"]]],[11,"poll","","",89,[[["self"]],["poll"]]],[11,"poll","","",90,[[["self"]],["poll"]]],[11,"poll","","",91,[[["self"]],["poll"]]],[11,"poll","","",3,[[["self"]],["poll"]]],[11,"poll","","",92,[[["self"]],["poll"]]],[11,"poll","","",93,[[["self"]],["poll"]]],[11,"poll","","",94,[[["self"]],["poll"]]],[11,"poll","","",95,[[["self"]],["poll"]]],[11,"poll","","",96,[[["self"]],["poll"]]],[11,"poll","","",6,[[["self"]],["poll"]]],[11,"poll","futures::stream","",105,[[["self"]],["poll"]]],[11,"poll","","",104,[[["self"]],["poll"]]],[11,"poll","","",107,[[["self"]],["poll"]]],[11,"poll","","",108,[[["self"]],["poll"]]],[11,"poll","","",20,[[["self"]],["poll"]]],[11,"poll","","",30,[[["self"]],["poll"]]],[11,"poll","","",118,[[["self"]],["poll",["vec"]]]],[11,"poll","futures::sink","",42,[[["self"]],["poll"]]],[11,"poll","","",44,[[["self"]],["poll"]]],[11,"poll","","",120,[[["self"]],["poll"]]],[11,"poll","futures::sync::oneshot","",54,[[["self"]],["poll",["canceled"]]]],[11,"poll","","",55,[[["self"]],["poll"]]],[11,"poll","","",130,[[["self"]],["poll"]]],[11,"poll","futures::sync::mpsc","",132,[[["self"]],["poll"]]],[11,"poll","futures::sync","",128,[[["self"]],["poll",["bilockacquired"]]]],[11,"poll","futures::unsync::mpsc","",135,[[["self"]],["poll"]]],[11,"poll","futures::unsync::oneshot","",69,[[["self"]],["poll"]]],[11,"poll","","",70,[[["self"]],["poll"]]],[11,"poll","","",136,[[["self"]],["poll"]]],[11,"poll","futures::future","",78,[[["self"]],["poll",["option"]]]],[11,"poll","","",79,[[["self"]],["poll",["option"]]]],[11,"poll","futures::stream","",99,[[["self"]],["poll",["option"]]]],[11,"poll","","",100,[[["self"]],["poll",["option"]]]],[11,"poll","","",101,[[["self"]],["poll",["option"]]]],[11,"poll","","",102,[[["self"]],["poll",["option"]]]],[11,"poll","","",14,[[["self"]],["poll",["option"]]]],[11,"poll","","",103,[[["self"]],["poll",["option"]]]],[11,"poll","","",106,[[["self"]],["poll",["option"]]]],[11,"poll","","",15,[[["self"]],["poll",["option"]]]],[11,"poll","","",16,[[["self"]],["poll",["option"]]]],[11,"poll","","",17,[[["self"]],["poll",["option"]]]],[11,"poll","","",18,[[["self"]],["poll",["option"]]]],[11,"poll","","",19,[[["self"]],["poll",["option"]]]],[11,"poll","","",21,[[["self"]],["poll",["option"]]]],[11,"poll","","",22,[[["self"]],["poll",["option"]]]],[11,"poll","","",23,[[["self"]],["poll",["option"]]]],[11,"poll","","",24,[[["self"]],["poll",["option"]]]],[11,"poll","","",109,[[["self"]],["poll",["option"]]]],[11,"poll","","",110,[[["self"]],["poll",["option"]]]],[11,"poll","","",111,[[["self"]],["poll",["option"]]]],[11,"poll","","",25,[[["self"]],["poll",["option"]]]],[11,"poll","","",112,[[["self"]],["poll",["option"]]]],[11,"poll","","",113,[[["self"]],["poll",["option"]]]],[11,"poll","","",26,[[["self"]],["poll",["option"]]]],[11,"poll","","",27,[[["self"]],["poll",["option"]]]],[11,"poll","","",28,[[["self"]],["poll",["option"]]]],[11,"poll","","",29,[[["self"]],["poll",["option"]]]],[11,"poll","","",114,[[["self"]],["poll",["option"]]]],[11,"poll","","",115,[[["self"]],["poll",["option"]]]],[11,"poll","","",116,[[["self"]],["poll",["option"]]]],[11,"poll","","",31,[[["self"]],["poll",["option"]]]],[11,"poll","","",32,[[["self"]],["poll",["option"]]]],[11,"poll","","",117,[[["self"]],["poll",["option"]]]],[11,"poll","","",33,[[["self"]],["poll",["option"]]]],[11,"poll","","",35,[[["self"]],["poll",["option"]]]],[11,"poll","futures::stream::futures_unordered","",37,[[["self"]],["poll",["option"]]]],[11,"poll","futures::stream","",38,[[["self"]],["poll",["option"]]]],[11,"poll","futures::sink","",40,[[["self"]],["poll",["option"]]]],[11,"poll","","",41,[[["self"]],["poll",["option"]]]],[11,"poll","","",43,[[["self"]],["poll",["option"]]]],[11,"poll","","",45,[[["self"]],["poll",["option"]]]],[11,"poll","","",47,[[["self"]],["poll",["option"]]]],[11,"poll","futures::sync::mpsc","",60,[[["self"]],["poll",["option"]]]],[11,"poll","","",61,[[["self"]],["poll",["option"]]]],[11,"poll","","",131,[[["self"]],["poll",["option"]]]],[11,"poll","futures::unsync::mpsc","",64,[[["self"]],["poll",["option"]]]],[11,"poll","","",66,[[["self"]],["poll",["option"]]]],[11,"poll","","",134,[[["self"]],["poll",["option"]]]],[11,"start_send","futures::stream","",14,N],[11,"poll_complete","","",14,[[["self"]],["poll"]]],[11,"close","","",14,[[["self"]],["poll"]]],[11,"start_send","","",15,N],[11,"poll_complete","","",15,[[["self"]],["poll"]]],[11,"close","","",15,[[["self"]],["poll"]]],[11,"start_send","","",16,N],[11,"poll_complete","","",16,[[["self"]],["poll"]]],[11,"close","","",16,[[["self"]],["poll"]]],[11,"start_send","","",17,N],[11,"poll_complete","","",17,[[["self"]],["poll"]]],[11,"close","","",17,[[["self"]],["poll"]]],[11,"start_send","","",18,N],[11,"poll_complete","","",18,[[["self"]],["poll"]]],[11,"close","","",18,[[["self"]],["poll"]]],[11,"start_send","","",19,N],[11,"poll_complete","","",19,[[["self"]],["poll"]]],[11,"close","","",19,[[["self"]],["poll"]]],[11,"start_send","","",21,N],[11,"poll_complete","","",21,[[["self"]],["poll"]]],[11,"close","","",21,[[["self"]],["poll"]]],[11,"start_send","","",22,N],[11,"poll_complete","","",22,[[["self"]],["poll"]]],[11,"close","","",22,[[["self"]],["poll"]]],[11,"start_send","","",23,N],[11,"poll_complete","","",23,[[["self"]],["poll"]]],[11,"close","","",23,[[["self"]],["poll"]]],[11,"start_send","","",24,N],[11,"poll_complete","","",24,[[["self"]],["poll"]]],[11,"close","","",24,[[["self"]],["poll"]]],[11,"start_send","","",111,N],[11,"poll_complete","","",111,[[["self"]],["poll"]]],[11,"close","","",111,[[["self"]],["poll"]]],[11,"start_send","","",25,N],[11,"poll_complete","","",25,[[["self"]],["poll"]]],[11,"close","","",25,[[["self"]],["poll"]]],[11,"start_send","","",26,N],[11,"poll_complete","","",26,[[["self"]],["poll"]]],[11,"close","","",26,[[["self"]],["poll"]]],[11,"start_send","","",27,N],[11,"poll_complete","","",27,[[["self"]],["poll"]]],[11,"close","","",27,[[["self"]],["poll"]]],[11,"start_send","","",28,N],[11,"poll_complete","","",28,[[["self"]],["poll"]]],[11,"close","","",28,[[["self"]],["poll"]]],[11,"start_send","","",29,N],[11,"poll_complete","","",29,[[["self"]],["poll"]]],[11,"close","","",29,[[["self"]],["poll"]]],[11,"start_send","","",114,N],[11,"poll_complete","","",114,[[["self"]],["poll"]]],[11,"close","","",114,[[["self"]],["poll"]]],[11,"start_send","","",31,N],[11,"poll_complete","","",31,[[["self"]],["poll"]]],[11,"close","","",31,[[["self"]],["poll"]]],[11,"start_send","","",32,N],[11,"poll_complete","","",32,[[["self"]],["poll"]]],[11,"close","","",32,[[["self"]],["poll"]]],[11,"start_send","","",33,N],[11,"poll_complete","","",33,[[["self"]],["poll"]]],[11,"close","","",33,[[["self"]],["poll"]]],[11,"start_send","","",36,N],[11,"poll_complete","","",36,[[["self"]],["poll"]]],[11,"close","","",36,[[["self"]],["poll"]]],[11,"start_send","futures::sink","",40,N],[11,"poll_complete","","",40,[[["self"]],["poll"]]],[11,"close","","",40,[[["self"]],["poll"]]],[11,"start_send","","",41,N],[11,"poll_complete","","",41,[[["self"]],["poll"]]],[11,"close","","",41,[[["self"]],["poll"]]],[11,"start_send","","",43,N],[11,"poll_complete","","",43,[[["self"]],["poll"]]],[11,"close","","",43,[[["self"]],["poll"]]],[11,"start_send","","",45,N],[11,"poll_complete","","",45,[[["self"]],["poll"]]],[11,"close","","",45,[[["self"]],["poll"]]],[11,"start_send","","",46,N],[11,"poll_complete","","",46,[[["self"]],["poll"]]],[11,"close","","",46,[[["self"]],["poll"]]],[11,"start_send","","",47,N],[11,"poll_complete","","",47,[[["self"]],["poll"]]],[11,"close","","",47,[[["self"]],["poll"]]],[11,"start_send","futures::sync::mpsc","",58,[[["self"],["t"]],["startsend",["senderror"]]]],[11,"poll_complete","","",58,[[["self"]],["poll",["senderror"]]]],[11,"close","","",58,[[["self"]],["poll",["senderror"]]]],[11,"start_send","","",59,[[["self"],["t"]],["startsend",["senderror"]]]],[11,"poll_complete","","",59,[[["self"]],["poll",["senderror"]]]],[11,"close","","",59,[[["self"]],["poll",["senderror"]]]],[11,"start_send","futures::unsync::mpsc","",133,[[["self"],["t"]],["startsend",["senderror"]]]],[11,"poll_complete","","",133,[[["self"]],["poll",["senderror"]]]],[11,"close","","",133,[[["self"]],["poll",["senderror"]]]],[11,"start_send","","",65,[[["self"],["t"]],["startsend",["senderror"]]]],[11,"poll_complete","","",65,[[["self"]],["poll",["senderror"]]]],[11,"close","","",65,[[["self"]],["poll",["senderror"]]]],[11,"fmt","futures::future","",98,[[["self"],["formatter"]],["result"]]],[11,"fmt","futures::stream","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","futures::sync::oneshot","",129,[[["self"],["formatter"]],["result"]]],[11,"fmt","futures::sync::mpsc","",56,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",57,[[["self"],["formatter"]],["result"]]],[11,"fmt","futures::unsync::mpsc","",67,[[["self"],["formatter"]],["result"]]],[11,"fmt","futures","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","futures::future","",71,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",72,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",73,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",74,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",75,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",76,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",77,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",78,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",79,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",80,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",81,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",82,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",83,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",84,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",85,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",86,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",87,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",88,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",89,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",90,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",91,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",92,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",93,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",94,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",95,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",96,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",97,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",98,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","futures::stream","",99,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",100,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",101,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",102,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",14,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",103,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",105,[[["self"],["formatter"]],["fmtresult"]]],[11,"fmt","","",104,[[["self"],["formatter"]],["fmtresult"]]],[11,"fmt","","",106,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",15,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",16,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",17,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",107,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",108,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",18,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",19,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",20,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",21,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",22,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",23,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",24,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",109,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",110,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",111,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",25,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",112,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",113,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",26,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",27,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",28,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",29,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",114,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",115,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",116,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",30,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",31,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",32,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",117,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",33,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",118,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",34,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",35,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",36,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","futures::stream::futures_unordered","",37,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",119,[[["self"],["formatter"]],["result"]]],[11,"fmt","futures::stream","",38,[[["self"],["formatter"]],["result"]]],[11,"fmt","futures::sink","",40,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",41,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",42,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",43,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",44,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",120,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",45,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",46,[[["self"],["formatter"]],["fmtresult"]]],[11,"fmt","","",47,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",48,[[["self"],["formatter"]],["result"]]],[11,"fmt","futures::task","",124,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",126,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",125,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",121,[[["self"],["formatter"]],["result"]]],[11,"fmt","futures::executor","",122,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",123,[[["self"],["formatter"]],["result"]]],[11,"fmt","futures::sync::oneshot","",54,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",53,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",129,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",55,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",130,[[["self"],["formatter"]],["result"]]],[11,"fmt","futures::sync::mpsc","",58,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",59,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",60,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",61,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",56,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",57,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",131,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",132,[[["self"],["formatter"]],["result"]]],[11,"fmt","futures::sync","",62,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",127,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",128,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",63,[[["self"],["formatter"]],["result"]]],[11,"fmt","futures::unsync::mpsc","",133,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",64,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",65,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",66,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",67,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",134,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",135,[[["self"],["formatter"]],["result"]]],[11,"fmt","futures::unsync::oneshot","",68,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",69,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",70,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",136,[[["self"],["formatter"]],["result"]]],[11,"eq","futures","",0,[[["self"],["async"]],["bool"]]],[11,"ne","","",0,[[["self"],["async"]],["bool"]]],[11,"eq","","",1,[[["self"],["asyncsink"]],["bool"]]],[11,"ne","","",1,[[["self"],["asyncsink"]],["bool"]]],[11,"eq","futures::future","",4,[[["self"],["executeerrorkind"]],["bool"]]],[11,"eq","futures::sync::oneshot","",129,[[["self"],["canceled"]],["bool"]]],[11,"eq","futures::sync::mpsc","",56,[[["self"],["senderror"]],["bool"]]],[11,"ne","","",56,[[["self"],["senderror"]],["bool"]]],[11,"eq","","",57,[[["self"],["trysenderror"]],["bool"]]],[11,"ne","","",57,[[["self"],["trysenderror"]],["bool"]]],[11,"from","futures","",0,[[["t"]],["async"]]],[11,"from","futures::future","",74,[[["result"]],["self"]]],[11,"from","futures::executor","",123,[[["arc"]],["notifyhandle"]]],[11,"from","","",123,[[["t"]],["notifyhandle"]]],[11,"deref","futures::future","",97,[[["self"]],["t"]]],[11,"deref","","",98,[[["self"]],["e"]]],[11,"deref","futures::sync","",127,[[["self"]],["t"]]],[11,"deref","","",63,[[["self"]],["t"]]],[11,"deref_mut","","",127,[[["self"]],["t"]]],[11,"deref_mut","","",63,[[["self"]],["t"]]],[11,"drop","futures::future","",6,[[["self"]]]],[11,"drop","futures::stream::futures_unordered","",37,[[["self"]]]],[11,"drop","futures::executor","",123,[[["self"]]]],[11,"drop","futures::sync::oneshot","",53,[[["self"]]]],[11,"drop","","",54,[[["self"]]]],[11,"drop","","",55,[[["self"]]]],[11,"drop","","",130,[[["self"]]]],[11,"drop","futures::sync::mpsc","",58,[[["self"]]]],[11,"drop","","",60,[[["self"]]]],[11,"drop","futures::sync","",127,[[["self"]]]],[11,"drop","","",63,[[["self"]]]],[11,"drop","futures::unsync::mpsc","",133,[[["self"]]]],[11,"drop","","",64,[[["self"]]]],[11,"drop","futures::unsync::oneshot","",68,[[["self"]]]],[11,"drop","","",69,[[["self"]]]],[11,"next","futures::stream","",34,[[["self"]],["option"]]],[11,"next","futures::stream::futures_unordered","",119,[[["self"]],["option"]]],[11,"size_hint","","",119,N],[11,"from_iter","","",37,[[["t"]],["self"]]],[11,"from_iter","futures::stream","",38,[[["t"]],["self"]]],[11,"clone","futures","",0,[[["self"]],["async"]]],[11,"clone","","",1,[[["self"]],["asyncsink"]]],[11,"clone","futures::future","",74,[[["self"]],["futureresult"]]],[11,"clone","","",6,[[["self"]],["self"]]],[11,"clone","","",97,[[["self"]],["shareditem"]]],[11,"clone","","",98,[[["self"]],["sharederror"]]],[11,"clone","","",4,[[["self"]],["executeerrorkind"]]],[11,"clone","futures::sink","",40,[[["self"]],["with"]]],[11,"clone","","",43,[[["self"]],["sinkfromerr"]]],[11,"clone","","",45,[[["self"]],["sinkmaperr"]]],[11,"clone","futures::task","",125,[[["self"]],["unparkevent"]]],[11,"clone","","",121,[[["self"]],["task"]]],[11,"clone","futures::executor","",123,[[["self"]],["self"]]],[11,"clone","futures::sync::oneshot","",129,[[["self"]],["canceled"]]],[11,"clone","futures::sync::mpsc","",56,[[["self"]],["senderror"]]],[11,"clone","","",57,[[["self"]],["trysenderror"]]],[11,"clone","","",59,[[["self"]],["unboundedsender"]]],[11,"clone","","",58,[[["self"]],["sender"]]],[11,"clone","futures::unsync::mpsc","",133,[[["self"]],["self"]]],[11,"clone","","",65,[[["self"]],["self"]]],[11,"default","futures::task","",124,[[],["self"]]],[11,"description","futures::future","",98,[[["self"]],["str"]]],[11,"cause","","",98,[[["self"]],["option",["error"]]]],[11,"description","futures::stream","",12,[[["self"]],["str"]]],[11,"description","futures::sync::oneshot","",129,[[["self"]],["str"]]],[11,"description","futures::sync::mpsc","",56,[[["self"]],["str"]]],[11,"description","","",57,[[["self"]],["str"]]],[11,"description","futures::unsync::mpsc","",67,[[["self"]],["str"]]],[11,"new","futures::task","Create an `AtomicTask` initialized with the given `Task`",124,[[],["atomictask"]]],[11,"register","","Registers the current task to be notified on calls to…",124,[[["self"]]]],[11,"register_task","","Registers the provided task to be notified on calls to…",124,[[["self"],["task"]]]],[11,"notify","","Notifies the task that last called `register`.",124,[[["self"]]]],[11,"with","","Access this task-local key, running the provided closure…",126,[[["self"],["f"]],["r"]]],[11,"wait_future","futures::executor","Waits for the internal future to complete, blocking this…",122,[[["self"]],["result"]]],[11,"wait_stream","","Like `wait_future`, except only waits for the next element…",122,[[["self"]],["option",["result"]]]],[11,"wait_send","","Blocks the current thread until it's able to send `value`…",122,N],[11,"wait_flush","","Blocks the current thread until it's able to flush this…",122,[[["self"]],["result"]]],[11,"wait_close","","Blocks the current thread until it's able to close this…",122,[[["self"]],["result"]]],[11,"new","futures::task","Construct an unpark event that will insert `id` into `set`…",125,[[["arc",["eventset"]],["usize"]],["unparkevent"]]],[11,"clone_id","futures::executor","This function is called whenever a new copy of `id` is…",51,[[["self"],["usize"]],["usize"]]],[11,"drop_id","","All instances of `Task` store an `id` that they're going…",51,[[["self"],["usize"]]]],[11,"notify","futures::task","Indicate that the task should attempt to poll its future…",121,[[["self"]]]],[11,"is_current","","Returns `true` when called from within the context of the…",121,[[["self"]],["bool"]]],[11,"will_notify_current","","This function is intended as a performance optimization…",121,[[["self"]],["bool"]]],[11,"get_ref","futures::executor","Get a shared reference to the object the Spawn is wrapping.",122,[[["self"]],["t"]]],[11,"get_mut","","Get a mutable reference to the object the Spawn is wrapping.",122,[[["self"]],["t"]]],[11,"into_inner","","Consume the Spawn, returning its inner object",122,[[["self"]],["t"]]],[11,"poll_fn_notify","","Calls the provided closure, scheduling notifications to be…",122,[[["self"],["n"],["usize"],["f"]],["r"]]],[11,"poll_future_notify","","Polls the internal future, scheduling notifications to be…",122,[[["self"],["n"],["usize"]],["poll"]]],[11,"poll_stream_notify","","Like `poll_future_notify`, except polls the underlying…",122,[[["self"],["n"],["usize"]],["poll",["option"]]]],[11,"start_send_notify","","Invokes the underlying `start_send` method with this task…",122,N],[11,"poll_flush_notify","","Invokes the underlying `poll_complete` method with this…",122,[[["self"],["n"],["usize"]],["poll"]]],[11,"close_notify","","Invokes the underlying `close` method with this task in…",122,[[["self"],["n"],["usize"]],["poll"]]],[11,"new","","Constructs a new `NotifyHandle` directly.",123,N],[11,"notify","","Invokes the underlying instance of `Notify` with the…",123,[[["self"],["usize"]]]]],"paths":[[4,"Async"],[4,"AsyncSink"],[4,"Loop"],[4,"Either"],[4,"ExecuteErrorKind"],[3,"Fuse"],[3,"Shared"],[8,"Future"],[8,"IntoFuture"],[8,"FutureFrom"],[8,"Executor"],[3,"ExecuteError"],[3,"ReuniteError"],[4,"MergedItem"],[3,"AndThen"],[3,"Filter"],[3,"FilterMap"],[3,"Flatten"],[3,"FromErr"],[3,"Fuse"],[3,"StreamFuture"],[3,"Inspect"],[3,"InspectErr"],[3,"Map"],[3,"MapErr"],[3,"Peekable"],[3,"Skip"],[3,"SkipWhile"],[3,"Take"],[3,"TakeWhile"],[3,"Forward"],[3,"Buffered"],[3,"BufferUnordered"],[3,"Chunks"],[3,"Wait"],[3,"SplitStream"],[3,"SplitSink"],[3,"FuturesUnordered"],[3,"FuturesOrdered"],[8,"Stream"],[3,"With"],[3,"WithFlatMap"],[3,"Flush"],[3,"SinkFromErr"],[3,"Send"],[3,"SinkMapErr"],[3,"Fanout"],[3,"Buffer"],[3,"Wait"],[8,"Sink"],[8,"EventSet"],[8,"Notify"],[8,"UnsafeNotify"],[3,"Sender"],[3,"Receiver"],[3,"SpawnHandle"],[3,"SendError"],[3,"TrySendError"],[3,"Sender"],[3,"UnboundedSender"],[3,"Receiver"],[3,"UnboundedReceiver"],[3,"BiLock"],[3,"BiLockAcquired"],[3,"Receiver"],[3,"UnboundedSender"],[3,"UnboundedReceiver"],[3,"SendError"],[3,"Sender"],[3,"Receiver"],[3,"SpawnHandle"],[3,"Empty"],[3,"Lazy"],[3,"PollFn"],[3,"FutureResult"],[3,"LoopFn"],[3,"AndThen"],[3,"Flatten"],[3,"FlattenStream"],[3,"IntoStream"],[3,"Join"],[3,"Join3"],[3,"Join4"],[3,"Join5"],[3,"Map"],[3,"MapErr"],[3,"FromErr"],[3,"OrElse"],[3,"Select"],[3,"SelectNext"],[3,"Select2"],[3,"Then"],[3,"Inspect"],[3,"CatchUnwind"],[3,"JoinAll"],[3,"SelectAll"],[3,"SelectOk"],[3,"SharedItem"],[3,"SharedError"],[3,"Iter"],[3,"IterOk"],[3,"IterResult"],[3,"Repeat"],[3,"Chain"],[3,"Concat"],[3,"Concat2"],[3,"Empty"],[3,"Fold"],[3,"ForEach"],[3,"Merge"],[3,"Once"],[3,"OrElse"],[3,"PollFn"],[3,"Select"],[3,"Then"],[3,"Unfold"],[3,"Zip"],[3,"CatchUnwind"],[3,"Collect"],[3,"IterMut"],[3,"SendAll"],[3,"Task"],[3,"Spawn"],[3,"NotifyHandle"],[3,"AtomicTask"],[3,"UnparkEvent"],[3,"LocalKey"],[3,"BiLockGuard"],[3,"BiLockAcquire"],[3,"Canceled"],[3,"Execute"],[3,"SpawnHandle"],[3,"Execute"],[3,"Sender"],[3,"SpawnHandle"],[3,"Execute"],[3,"Execute"]]};
searchIndex["lazy_queue"]={"doc":"travis crates.io docs.rs","items":[[4,"ProcessingError","lazy_queue","An error that might happen during processing of a queue.",N,N],[13,"ReceiverError","","Channel has closed.",0,N],[13,"FutureError","","Error returned by a processor.",0,N],[0,"sync","","Thread safe queue implementation.",N,N],[0,"bounded","lazy_queue::sync","Bounded queue.",N,N],[3,"LazyQueue","lazy_queue::sync::bounded","A clonable thread safe sink-like queue.",N,N],[3,"QueueProcessor","","Lazy queue processor.",N,N],[11,"new","","Creates a new lazy queue using given processor.",1,N],[0,"unbounded","lazy_queue::sync","Unbounded queue.",N,N],[3,"LazyQueue","lazy_queue::sync::unbounded","A clonable thread safe sink-like queue.",N,N],[3,"QueueProcessor","","Lazy queue processor.",N,N],[11,"new","","Creates a new lazy queue using given processor.",2,N],[0,"unsync","lazy_queue","Single-threaded queue implementation.",N,N],[0,"bounded","lazy_queue::unsync","Bounded queue.",N,N],[3,"LazyQueue","lazy_queue::unsync::bounded","A clonable single-threaded sink-like queue.",N,N],[3,"QueueProcessor","","Lazy queue processor.",N,N],[11,"new","","Creates a new lazy queue using given processor.",3,N],[0,"unbounded","lazy_queue::unsync","Unbounded queue.",N,N],[3,"LazyQueue","lazy_queue::unsync::unbounded","A clonable single-threaded sink-like queue.",N,N],[3,"QueueProcessor","","Lazy queue processor.",N,N],[11,"new","","Creates a new lazy queue using given processor.",4,N],[11,"to_string","lazy_queue","",0,[[["self"]],["string"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","lazy_queue::sync::bounded","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"into_future","","",5,[[["self"]],["f"]]],[11,"from","lazy_queue::sync::unbounded","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"into_future","","",6,[[["self"]],["f"]]],[11,"from","lazy_queue::unsync::bounded","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"into_future","","",7,[[["self"]],["f"]]],[11,"from","lazy_queue::unsync::unbounded","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"into_future","","",8,[[["self"]],["f"]]],[11,"clone","lazy_queue::sync::bounded","",1,[[["self"]],["self"]]],[11,"clone","lazy_queue::sync::unbounded","",2,[[["self"]],["self"]]],[11,"clone","lazy_queue::unsync::bounded","",3,[[["self"]],["self"]]],[11,"clone","lazy_queue::unsync::unbounded","",4,[[["self"]],["self"]]],[11,"fmt","lazy_queue","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"description","","",0,[[["self"]],["str"]]],[11,"cause","","",0,[[["self"]],["option",["error"]]]],[11,"poll","lazy_queue::sync::bounded","",5,[[["self"]],["poll"]]],[11,"poll","lazy_queue::sync::unbounded","",6,[[["self"]],["poll"]]],[11,"poll","lazy_queue::unsync::bounded","",7,[[["self"]],["poll"]]],[11,"poll","lazy_queue::unsync::unbounded","",8,[[["self"]],["poll"]]],[11,"start_send","lazy_queue::sync::bounded","",1,[[["self"],["item"]],["startsend",["senderror"]]]],[11,"poll_complete","","",1,[[["self"]],["poll",["senderror"]]]],[11,"start_send","lazy_queue::sync::unbounded","",2,[[["self"],["item"]],["startsend",["unboundedsenderror"]]]],[11,"poll_complete","","",2,[[["self"]],["poll",["unboundedsenderror"]]]],[11,"start_send","lazy_queue::unsync::bounded","",3,[[["self"],["item"]],["startsend",["senderror"]]]],[11,"poll_complete","","",3,[[["self"]],["poll",["senderror"]]]],[11,"start_send","lazy_queue::unsync::unbounded","",4,[[["self"],["item"]],["startsend",["senderror"]]]],[11,"poll_complete","","",4,[[["self"]],["poll",["senderror"]]]]],"paths":[[4,"ProcessingError"],[3,"LazyQueue"],[3,"LazyQueue"],[3,"LazyQueue"],[3,"LazyQueue"],[3,"QueueProcessor"],[3,"QueueProcessor"],[3,"QueueProcessor"],[3,"QueueProcessor"]]};
searchIndex["tokio_sync"]={"doc":"Asynchronous synchronization primitives.","items":[[0,"mpsc","tokio_sync","A multi-producer, single-consumer queue for sending values…",N,N],[3,"Receiver","tokio_sync::mpsc","Receive values from the associated `Sender`.",N,N],[3,"Sender","","Send values to the associated `Receiver`.",N,N],[3,"UnboundedReceiver","","Receive values from the associated `UnboundedSender`.",N,N],[3,"UnboundedSender","","Send values to the associated `UnboundedReceiver`.",N,N],[5,"channel","","Create a bounded mpsc channel for communicating between…",N,N],[5,"unbounded_channel","","Create an unbounded mpsc channel for communicating between…",N,N],[11,"close","","Closes the receiving half of a channel, without dropping it.",0,[[["self"]]]],[11,"poll_ready","","Check if the `Sender` is ready to handle a value.",1,[[["self"]],["poll",["senderror"]]]],[11,"try_send","","Attempts to send a message on this `Sender`, returning the…",1,[[["self"],["t"]],["result",["trysenderror"]]]],[11,"close","","Closes the receiving half of a channel, without dropping it.",2,[[["self"]]]],[11,"try_send","","Attempts to send a message on this `UnboundedSender`…",3,[[["self"],["t"]],["result",["unboundedtrysenderror"]]]],[0,"error","","Channel error types",N,N],[3,"RecvError","tokio_sync::mpsc::error","Error returned by `Receiver`.",N,N],[3,"SendError","","Error returned by the `Sender`.",N,N],[3,"TrySendError","","Error returned by `Sender::try_send`.",N,N],[3,"UnboundedRecvError","","Error returned by `UnboundedReceiver`.",N,N],[3,"UnboundedSendError","","Error returned by the `UnboundedSender`.",N,N],[3,"UnboundedTrySendError","","Returned by `UnboundedSender::try_send` when the channel…",N,N],[0,"oneshot","tokio_sync","A channel for sending a single message between…",N,N],[3,"Sender","tokio_sync::oneshot","Sends a value to the associated `Receiver`.",N,N],[3,"Receiver","","Receive a value from the associated `Sender`.",N,N],[5,"channel","","Create a new one-shot channel for sending single values…",N,N],[0,"error","","Oneshot error types",N,N],[3,"RecvError","tokio_sync::oneshot::error","Error returned by the `Future` implementation for…",N,N],[3,"TryRecvError","","Error returned by the `try_recv` function on `Receiver`.",N,N],[11,"send","tokio_sync::oneshot","Completes this oneshot with a successful result.",4,[[["self"],["t"]],["result"]]],[11,"poll_close","","Check if the associated [`Receiver`] handle has been…",4,[[["self"]],["poll"]]],[11,"is_closed","","Check if the associated [`Receiver`] handle has been…",4,[[["self"]],["bool"]]],[11,"close","","Prevent the associated [`Sender`] handle from sending a…",5,[[["self"]]]],[11,"try_recv","","Attempts to receive a value outside of the context of a…",5,[[["self"]],["result",["tryrecverror"]]]],[0,"semaphore","tokio_sync","Thread-safe, asynchronous counting semaphore.",N,N],[3,"Semaphore","tokio_sync::semaphore","Futures-aware semaphore.",N,N],[3,"Permit","","A semaphore permit",N,N],[3,"AcquireError","","Error returned by `Permit::poll_acquire`.",N,N],[3,"TryAcquireError","","Error returned by `Permit::try_acquire`.",N,N],[11,"new","","Creates a new semaphore with the initial number of permits",6,[[["usize"]],["semaphore"]]],[11,"available_permits","","Returns the current number of available permits",6,[[["self"]],["usize"]]],[11,"close","","Close the semaphore. This prevents the semaphore from…",6,[[["self"]]]],[11,"add_permits","","Add `n` new permits to the semaphore.",6,[[["self"],["usize"]]]],[11,"new","","Create a new `Permit`.",7,[[],["permit"]]],[11,"is_acquired","","Returns true if the permit has been acquired",7,[[["self"]],["bool"]]],[11,"poll_acquire","","Try to acquire the permit. If no permits are available,…",7,[[["self"],["semaphore"]],["poll",["acquireerror"]]]],[11,"try_acquire","","Try to acquire the permit.",7,[[["self"],["semaphore"]],["result",["tryacquireerror"]]]],[11,"release","","Release a permit back to the semaphore",7,[[["self"],["semaphore"]]]],[11,"forget","","Forget the permit without releasing it back to the…",7,[[["self"]]]],[11,"is_closed","","Returns true if the error was caused by a closed semaphore.",8,[[["self"]],["bool"]]],[11,"is_no_permits","","Returns true if the error was caused by calling…",8,[[["self"]],["bool"]]],[0,"task","tokio_sync","Thread-safe task notification primitives.",N,N],[3,"AtomicTask","tokio_sync::task","A synchronization primitive for task notification.",N,N],[11,"new","","Create an `AtomicTask` initialized with the given `Task`",9,[[],["atomictask"]]],[11,"register","","Registers the current task to be notified on calls to…",9,[[["self"]]]],[11,"register_task","","Registers the provided task to be notified on calls to…",9,[[["self"],["task"]]]],[11,"notify","","Notifies the task that last called `register`.",9,[[["self"]]]],[11,"take_task","","Attempts to take the `Task` value out of the `AtomicTask`…",9,[[["self"]],["option",["task"]]]],[0,"watch","tokio_sync","A single-producer, multi-consumer channel that only…",N,N],[3,"Receiver","tokio_sync::watch","Receives values from the associated `Sender`.",N,N],[3,"Sender","","Sends values to the associated `Receiver`.",N,N],[3,"Ref","","Returns a reference to the inner value",N,N],[5,"channel","","Create a new watch channel, returning the \"send\" and…",N,N],[0,"error","","Watch error types",N,N],[3,"RecvError","tokio_sync::watch::error","Error produced when receiving a value fails.",N,N],[3,"SendError","","Error produced when sending a value fails.",N,N],[11,"get_ref","tokio_sync::watch","Returns a reference to the most recently sent value",10,[[["self"]],["ref"]]],[11,"poll_ref","","Attempts to receive the latest value sent via the channel.",10,[[["self"]],["poll",["option","recverror"]]]],[11,"broadcast","","Broadcast a new value via the channel, notifying all…",11,[[["self"],["t"]],["result",["senderror"]]]],[11,"poll_close","","Returns `Ready` when all receivers have dropped.",11,[[["self"]],["poll"]]],[11,"from","tokio_sync::mpsc","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"to_string","tokio_sync::mpsc::error","",12,[[["self"]],["string"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"to_string","","",13,[[["self"]],["string"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"to_string","","",14,[[["self"]],["string"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"to_string","","",15,[[["self"]],["string"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"to_string","","",16,[[["self"]],["string"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"to_string","","",17,[[["self"]],["string"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"from","tokio_sync::oneshot","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"into_future","","",5,[[["self"]],["f"]]],[11,"to_string","tokio_sync::oneshot::error","",18,[[["self"]],["string"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"to_string","","",19,[[["self"]],["string"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[["self"]],["u"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"from","tokio_sync::semaphore","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"to_string","","",20,[[["self"]],["string"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[["self"]],["u"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"try_into","","",20,[[["self"]],["result"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"to_string","","",8,[[["self"]],["string"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"from","tokio_sync::task","",9,[[["t"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"from","tokio_sync::watch","",10,[[["t"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,N],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[["self"]],["u"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"try_into","","",21,[[["self"]],["result"]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"to_string","tokio_sync::watch::error","",22,[[["self"]],["string"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[["self"]],["u"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"try_into","","",22,[[["self"]],["result"]]],[11,"get_type_id","","",22,[[["self"]],["typeid"]]],[11,"to_string","","",23,[[["self"]],["string"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[["self"]],["u"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"try_into","","",23,[[["self"]],["result"]]],[11,"get_type_id","","",23,[[["self"]],["typeid"]]],[11,"default","tokio_sync::task","",9,[[],["self"]]],[11,"clone","tokio_sync::mpsc","",1,[[["self"]],["self"]]],[11,"clone","","",3,[[["self"]],["self"]]],[11,"clone","tokio_sync::watch","",10,[[["self"]],["self"]]],[11,"from","tokio_sync::mpsc::error","",13,N],[11,"from","","",16,N],[11,"drop","tokio_sync::oneshot","",4,[[["self"]]]],[11,"drop","","",5,[[["self"]]]],[11,"drop","tokio_sync::watch","",10,[[["self"]]]],[11,"drop","","",11,[[["self"]]]],[11,"fmt","tokio_sync::mpsc","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","tokio_sync::mpsc::error","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",14,[[["self"],["formatter"]],["result"]]],[11,"fmt","tokio_sync::mpsc","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","tokio_sync::mpsc::error","",15,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",16,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",17,[[["self"],["formatter"]],["result"]]],[11,"fmt","tokio_sync::oneshot","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","tokio_sync::oneshot::error","",18,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",19,[[["self"],["formatter"]],["result"]]],[11,"fmt","tokio_sync::semaphore","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",20,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","tokio_sync::task","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","tokio_sync::watch","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",21,[[["self"],["formatter"]],["result"]]],[11,"fmt","tokio_sync::watch::error","",22,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",23,[[["self"],["formatter"]],["result"]]],[11,"fmt","tokio_sync::mpsc::error","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",14,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",15,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",16,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",17,[[["self"],["formatter"]],["result"]]],[11,"fmt","tokio_sync::oneshot::error","",18,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",19,[[["self"],["formatter"]],["result"]]],[11,"fmt","tokio_sync::semaphore","",20,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","tokio_sync::watch::error","",22,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",23,[[["self"],["formatter"]],["result"]]],[11,"deref","tokio_sync::watch","",21,[[["self"]],["t"]]],[11,"description","tokio_sync::mpsc::error","",12,[[["self"]],["str"]]],[11,"description","","",13,[[["self"]],["str"]]],[11,"description","","",14,[[["self"]],["str"]]],[11,"description","","",15,[[["self"]],["str"]]],[11,"description","","",16,[[["self"]],["str"]]],[11,"description","","",17,[[["self"]],["str"]]],[11,"description","tokio_sync::oneshot::error","",18,[[["self"]],["str"]]],[11,"description","","",19,[[["self"]],["str"]]],[11,"description","tokio_sync::semaphore","",20,[[["self"]],["str"]]],[11,"description","","",8,[[["self"]],["str"]]],[11,"description","tokio_sync::watch::error","",22,[[["self"]],["str"]]],[11,"description","","",23,[[["self"]],["str"]]],[11,"poll","tokio_sync::oneshot","",5,[[["self"]],["poll",["recverror"]]]],[11,"poll","tokio_sync::mpsc","",0,[[["self"]],["poll",["option"]]]],[11,"poll","","",2,[[["self"]],["poll",["option"]]]],[11,"poll","tokio_sync::watch","",10,[[["self"]],["poll",["option","recverror"]]]],[11,"start_send","tokio_sync::mpsc","",1,[[["self"],["t"]],["startsend"]]],[11,"poll_complete","","",1,[[["self"]],["poll"]]],[11,"close","","",1,[[["self"]],["poll"]]],[11,"start_send","","",3,[[["self"],["t"]],["startsend"]]],[11,"poll_complete","","",3,[[["self"]],["poll"]]],[11,"close","","",3,[[["self"]],["poll"]]],[11,"start_send","tokio_sync::watch","",11,[[["self"],["t"]],["startsend",["senderror"]]]],[11,"poll_complete","","",11,[[["self"]],["poll",["senderror"]]]],[11,"into_inner","tokio_sync::mpsc::error","Get the inner value.",13,[[["self"]],["t"]]],[11,"is_closed","","Did the send fail because the channel has been closed?",13,[[["self"]],["bool"]]],[11,"is_full","","Did the send fail because the channel was at capacity?",13,[[["self"]],["bool"]]],[11,"into_inner","","Get the inner value.",16,[[["self"]],["t"]]]],"paths":[[3,"Receiver"],[3,"Sender"],[3,"UnboundedReceiver"],[3,"UnboundedSender"],[3,"Sender"],[3,"Receiver"],[3,"Semaphore"],[3,"Permit"],[3,"TryAcquireError"],[3,"AtomicTask"],[3,"Receiver"],[3,"Sender"],[3,"SendError"],[3,"TrySendError"],[3,"RecvError"],[3,"UnboundedSendError"],[3,"UnboundedTrySendError"],[3,"UnboundedRecvError"],[3,"RecvError"],[3,"TryRecvError"],[3,"AcquireError"],[3,"Ref"],[3,"RecvError"],[3,"SendError"]]};
initSearch(searchIndex);addSearchOptions(searchIndex);
