var searchIndex = JSON.parse('{\
"fnv":{"doc":"An implementation of the [Fowler–Noll–Vo hash function…","i":[[3,"FnvHasher","fnv","An implementation of the Fowler–Noll–Vo hash function.",null,null],[11,"with_key","","Create an FNV hasher starting with a state corresponding …",0,[[],["fnvhasher",3]]],[6,"FnvBuildHasher","","A builder for default FNV hashers.",null,null],[6,"FnvHashMap","","A <code>HashMap</code> using a default FNV hasher.",null,null],[6,"FnvHashSet","","A <code>HashSet</code> using a default FNV hasher.",null,null],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"default","","",0,[[],["fnvhasher",3]]],[11,"finish","","",0,[[]]],[11,"write","","",0,[[]]]],"p":[[3,"FnvHasher"]]},\
"futures":{"doc":"Zero-cost Futures in Rust","i":[[0,"future","futures","Futures",null,null],[5,"empty","futures::future","Creates a future which never resolves, representing a …",null,[[],["empty",3]]],[3,"Empty","","A future which is never resolved.",null,null],[5,"lazy","","Creates a new future which will eventually be the same as …",null,[[],["lazy",3]]],[3,"Lazy","","A future which defers creation of the actual future until …",null,null],[5,"poll_fn","","Creates a new future wrapping around a function returning …",null,[[],["pollfn",3]]],[3,"PollFn","","A future which adapts a function returning <code>Poll</code>.",null,null],[5,"result","","Creates a new \\\"leaf future\\\" which will resolve with the …",null,[[["result",4]],["futureresult",3]]],[5,"ok","","Creates a \\\"leaf future\\\" from an immediate value of a …",null,[[],["futureresult",3]]],[5,"err","","Creates a \\\"leaf future\\\" from an immediate value of a …",null,[[],["futureresult",3]]],[3,"FutureResult","","A future representing a value that is immediately ready.",null,null],[5,"loop_fn","","Creates a new future implementing a tail-recursive loop.",null,[[],["loopfn",3]]],[4,"Loop","","The status of a <code>loop_fn</code> loop.",null,null],[13,"Break","","Indicates that the loop has completed with output <code>T</code>.",0,null],[13,"Continue","","Indicates that the loop function should be called again …",0,null],[3,"LoopFn","","A future implementing a tail-recursive loop.",null,null],[3,"AndThen","","Future for the <code>and_then</code> combinator, chaining a …",null,null],[3,"Flatten","","Future for the <code>flatten</code> combinator, flattening a …",null,null],[3,"FlattenStream","","Future for the <code>flatten_stream</code> combinator, flattening a …",null,null],[3,"Fuse","","A future which \\\"fuses\\\" a future once it\'s been resolved.",null,null],[3,"IntoStream","","Future that forwards one element from the underlying …",null,null],[3,"Join","","Future for the <code>join</code> combinator, waiting for two futures to…",null,null],[3,"Join3","","Future for the <code>join3</code> combinator, waiting for three …",null,null],[3,"Join4","","Future for the <code>join4</code> combinator, waiting for four futures …",null,null],[3,"Join5","","Future for the <code>join5</code> combinator, waiting for five futures …",null,null],[3,"Map","","Future for the <code>map</code> combinator, changing the type of a …",null,null],[3,"MapErr","","Future for the <code>map_err</code> combinator, changing the error …",null,null],[3,"FromErr","","Future for the <code>from_err</code> combinator, changing the error …",null,null],[3,"OrElse","","Future for the <code>or_else</code> combinator, chaining a computation …",null,null],[3,"Select","","Future for the <code>select</code> combinator, waiting for one of two …",null,null],[3,"SelectNext","","Future yielded as the second result in a <code>Select</code> future.",null,null],[3,"Select2","","Future for the <code>select2</code> combinator, waiting for one of two …",null,null],[3,"Then","","Future for the <code>then</code> combinator, chaining computations on …",null,null],[4,"Either","","Combines two different futures yielding the same item and …",null,null],[13,"A","","First branch of the type",1,null],[13,"B","","Second branch of the type",1,null],[3,"Inspect","","Do something with the item of a future, passing it on.",null,null],[3,"CatchUnwind","","Future for the <code>catch_unwind</code> combinator.",null,null],[5,"join_all","","Creates a future which represents a collection of the …",null,[[],["joinall",3]]],[3,"JoinAll","","A future which takes a list of futures and resolves with …",null,null],[3,"SelectAll","","Future for the <code>select_all</code> combinator, waiting for one of …",null,null],[5,"select_all","","Creates a new future which will select over a list of …",null,[[],["selectall",3]]],[3,"SelectOk","","Future for the <code>select_ok</code> combinator, waiting for one of …",null,null],[5,"select_ok","","Creates a new future which will select the first …",null,[[],["selectok",3]]],[3,"Shared","","A future that is cloneable and can be polled in multiple …",null,null],[3,"SharedItem","","A wrapped item of the original future that is cloneable …",null,null],[3,"SharedError","","A wrapped error of the original future that is cloneable …",null,null],[8,"Future","","Trait for types which are a placeholder of a value that …",null,null],[16,"Item","","The type of value that this future will resolved with if …",2,null],[16,"Error","","The type of error that this future will resolve with if …",2,null],[10,"poll","","Query this future to see if its value has become …",2,[[],["poll",6]]],[11,"wait","","Block the current thread until this future is resolved.",2,[[],["result",4]]],[11,"map","","Map this future\'s result to a different type, returning a …",2,[[],["map",3]]],[11,"map_err","","Map this future\'s error to a different error, returning a …",2,[[],["maperr",3]]],[11,"from_err","","Map this future\'s error to any error implementing <code>From</code> for…",2,[[],[["from",8],["fromerr",3]]]],[11,"then","","Chain on a computation for when a future finished, …",2,[[],["then",3]]],[11,"and_then","","Execute another future after this one has resolved …",2,[[],["andthen",3]]],[11,"or_else","","Execute another future if this one resolves with an error.",2,[[],["orelse",3]]],[11,"select","","Waits for either one of two futures to complete.",2,[[],["select",3]]],[11,"select2","","Waits for either one of two differently-typed futures to …",2,[[],["select2",3]]],[11,"join","","Joins the result of two futures, waiting for them both to …",2,[[],["join",3]]],[11,"join3","","Same as <code>join</code>, but with more futures.",2,[[],["join3",3]]],[11,"join4","","Same as <code>join</code>, but with more futures.",2,[[],["join4",3]]],[11,"join5","","Same as <code>join</code>, but with more futures.",2,[[],["join5",3]]],[11,"into_stream","","Convert this future into a single element stream.",2,[[],["intostream",3]]],[11,"flatten","","Flatten the execution of this future when the successful …",2,[[],["flatten",3]]],[11,"flatten_stream","","Flatten the execution of this future when the successful …",2,[[],["flattenstream",3]]],[11,"fuse","","Fuse a future such that <code>poll</code> will never again be called …",2,[[],["fuse",3]]],[11,"inspect","","Do something with the item of a future, passing it on.",2,[[],["inspect",3]]],[11,"catch_unwind","","Catches unwinding panics while polling the future.",2,[[],["catchunwind",3]]],[11,"shared","","Create a cloneable handle to this future where all …",2,[[],["shared",3]]],[8,"IntoFuture","","Class of types which can be converted into a future.",null,null],[16,"Future","","The future that this type can be converted into.",3,null],[16,"Item","","The item that the future may resolve with.",3,null],[16,"Error","","The error that the future may resolve with.",3,null],[10,"into_future","","Consumes this object and produces a future.",3,[[]]],[8,"FutureFrom","","Asynchronous conversion from a type <code>T</code>.",null,null],[16,"Future","","The future for the conversion.",4,null],[16,"Error","","Possible errors during conversion.",4,null],[10,"future_from","","Consume the given value, beginning the conversion.",4,[[]]],[8,"Executor","","A trait for types which can spawn fresh futures.",null,null],[10,"execute","","Spawns a future to run on this <code>Executor</code>, typically in the …",5,[[],[["result",4],["executeerror",3]]]],[3,"ExecuteError","","Errors returned from the <code>Spawn::spawn</code> function.",null,null],[4,"ExecuteErrorKind","","Kinds of errors that can be returned from the …",null,null],[13,"Shutdown","","This executor has shut down and will no longer accept new …",6,null],[13,"NoCapacity","","This executor has no more capacity to run more futures. …",6,null],[11,"new","","Create a new <code>ExecuteError</code>",7,[[["executeerrorkind",4]],["executeerror",3]]],[11,"kind","","Returns the associated reason for the error",7,[[],["executeerrorkind",4]]],[11,"into_future","","Consumes self and returns the original future that was …",7,[[]]],[0,"stream","futures","Asynchronous streams",null,null],[0,"futures_unordered","futures::stream","An unbounded set of futures.",null,null],[3,"FuturesUnordered","futures::stream::futures_unordered","An unbounded set of futures.",null,null],[11,"new","","Constructs a new, empty <code>FuturesUnordered</code>",8,[[],["futuresunordered",3]]],[11,"len","","Returns the number of futures contained in the set.",8,[[]]],[11,"is_empty","","Returns <code>true</code> if the set contains no futures",8,[[]]],[11,"push","","Push a future into the set.",8,[[]]],[11,"iter_mut","","Returns an iterator that allows modifying each future in …",8,[[],["itermut",3]]],[3,"IterMut","","Mutable iterator over all futures in the unordered set.",null,null],[5,"iter","futures::stream","Converts an <code>Iterator</code> over <code>Result</code>s into a <code>Stream</code> which is …",null,[[],["iter",3]]],[3,"Iter","","A stream which is just a shim over an underlying instance …",null,null],[3,"IterStream","","A stream which is just a shim over an underlying instance …",null,null],[5,"iter_ok","","Converts an <code>Iterator</code> into a <code>Stream</code> which is always ready …",null,[[],["iterok",3]]],[3,"IterOk","","A stream which is just a shim over an underlying instance …",null,null],[5,"iter_result","","Converts an <code>Iterator</code> over <code>Result</code>s into a <code>Stream</code> which is …",null,[[],["iterresult",3]]],[3,"IterResult","","A stream which is just a shim over an underlying instance …",null,null],[5,"repeat","","Create a stream which produces the same item repeatedly.",null,[[],["repeat",3]]],[3,"Repeat","","Stream that produces the same element repeatedly.",null,null],[3,"AndThen","","A stream combinator which chains a computation onto …",null,null],[3,"Chain","","An adapter for chaining the output of two streams.",null,null],[3,"Concat","","A stream combinator to concatenate the results of a …",null,null],[3,"Concat2","","A stream combinator to concatenate the results of a …",null,null],[3,"Empty","","A stream which contains no elements.",null,null],[5,"empty","","Creates a stream which contains no elements.",null,[[],["empty",3]]],[3,"Filter","","A stream combinator used to filter the results of a …",null,null],[3,"FilterMap","","A combinator used to filter the results of a stream and …",null,null],[3,"Flatten","","A combinator used to flatten a stream-of-streams into one …",null,null],[3,"Fold","","A future used to collect all the results of a stream into …",null,null],[3,"ForEach","","A stream combinator which executes a unit closure over …",null,null],[3,"FromErr","","A stream combinator to change the error type of a stream.",null,null],[3,"Fuse","","A stream which \\\"fuse\\\"s a stream once it\'s terminated.",null,null],[3,"StreamFuture","","A combinator used to temporarily convert a stream into a …",null,null],[3,"Inspect","","Do something with the items of a stream, passing it on.",null,null],[3,"InspectErr","","Do something with the error of a stream, passing it on.",null,null],[3,"Map","","A stream combinator which will change the type of a …",null,null],[3,"MapErr","","A stream combinator which will change the error type of a …",null,null],[3,"Merge","","An adapter for merging the output of two streams.",null,null],[4,"MergedItem","","An item returned from a merge stream, which represents an …",null,null],[13,"First","","An item from the first stream",9,null],[13,"Second","","An item from the second stream",9,null],[13,"Both","","Items from both streams",9,null],[3,"Once","","A stream which emits single element and then EOF.",null,null],[5,"once","","Creates a stream of single element",null,[[["result",4]],["once",3]]],[3,"OrElse","","A stream combinator which chains a computation onto …",null,null],[3,"Peekable","","A <code>Stream</code> that implements a <code>peek</code> method.",null,null],[5,"poll_fn","","Creates a new stream wrapping around a function returning …",null,[[],["pollfn",3]]],[3,"PollFn","","A stream which adapts a function returning <code>Poll</code>.",null,null],[3,"Select","","An adapter for merging the output of two streams.",null,null],[3,"Skip","","A stream combinator which skips a number of elements …",null,null],[3,"SkipWhile","","A stream combinator which skips elements of a stream …",null,null],[3,"Take","","A stream combinator which returns a maximum number of …",null,null],[3,"TakeWhile","","A stream combinator which takes elements from a stream …",null,null],[3,"Then","","A stream combinator which chains a computation onto each …",null,null],[3,"Unfold","","A stream which creates futures, polls them and return …",null,null],[5,"unfold","","Creates a <code>Stream</code> from a seed and a closure returning a …",null,[[],["unfold",3]]],[3,"Zip","","An adapter for merging the output of two streams.",null,null],[3,"Forward","","Future for the <code>Stream::forward</code> combinator, which sends a …",null,null],[3,"Buffered","","An adaptor for a stream of futures to execute the futures …",null,null],[3,"BufferUnordered","","An adaptor for a stream of futures to execute the futures …",null,null],[3,"CatchUnwind","","Stream for the <code>catch_unwind</code> combinator.",null,null],[3,"Chunks","","An adaptor that chunks up elements in a vector.",null,null],[3,"Collect","","A future which collects all of the values of a stream …",null,null],[3,"Wait","","A stream combinator which converts an asynchronous stream …",null,null],[3,"SplitStream","","A <code>Stream</code> part of the split pair",null,null],[3,"SplitSink","","A <code>Sink</code> part of the split pair",null,null],[3,"ReuniteError","","Error indicating a <code>SplitSink<S></code> and <code>SplitStream<S></code> were …",null,null],[12,"0","","",10,null],[12,"1","","",10,null],[5,"futures_ordered","","Converts a list of futures into a <code>Stream</code> of results from …",null,[[],["futuresordered",3]]],[3,"FuturesOrdered","","An unbounded queue of futures.",null,null],[8,"Stream","","A stream of values, not all of which may have been …",null,null],[16,"Item","","The type of item this stream will yield on success.",11,null],[16,"Error","","The type of error this stream may generate.",11,null],[10,"poll","","Attempt to pull out the next value of this stream, …",11,[[],[["poll",6],["option",4]]]],[11,"wait","","Creates an iterator which blocks the current thread until …",11,[[],["wait",3]]],[11,"into_future","","Converts this stream into a <code>Future</code>.",11,[[],["streamfuture",3]]],[11,"map","","Converts a stream of type <code>T</code> to a stream of type <code>U</code>.",11,[[],["map",3]]],[11,"map_err","","Converts a stream of error type <code>T</code> to a stream of error …",11,[[],["maperr",3]]],[11,"filter","","Filters the values produced by this stream according to …",11,[[],["filter",3]]],[11,"filter_map","","Filters the values produced by this stream while …",11,[[],["filtermap",3]]],[11,"then","","Chain on a computation for when a value is ready, passing …",11,[[],["then",3]]],[11,"and_then","","Chain on a computation for when a value is ready, passing …",11,[[],["andthen",3]]],[11,"or_else","","Chain on a computation for when an error happens, passing …",11,[[],["orelse",3]]],[11,"collect","","Collect all of the values of this stream into a vector, …",11,[[],["collect",3]]],[11,"concat2","","Concatenate all results of a stream into a single …",11,[[],["concat2",3]]],[11,"concat","","Concatenate all results of a stream into a single …",11,[[],["concat",3]]],[11,"fold","","Execute an accumulating computation over a stream, …",11,[[],["fold",3]]],[11,"flatten","","Flattens a stream of streams into just one continuous …",11,[[],["flatten",3]]],[11,"skip_while","","Skip elements on this stream while the predicate provided …",11,[[],["skipwhile",3]]],[11,"take_while","","Take elements from this stream while the predicate …",11,[[],["takewhile",3]]],[11,"for_each","","Runs this stream to completion, executing the provided …",11,[[],["foreach",3]]],[11,"from_err","","Map this stream\'s error to any error implementing <code>From</code> for…",11,[[],[["fromerr",3],["from",8]]]],[11,"take","","Creates a new stream of at most <code>amt</code> items of the …",11,[[],["take",3]]],[11,"skip","","Creates a new stream which skips <code>amt</code> items of the …",11,[[],["skip",3]]],[11,"fuse","","Fuse a stream such that <code>poll</code> will never again be called …",11,[[],["fuse",3]]],[11,"by_ref","","Borrows a stream, rather than consuming it.",11,[[]]],[11,"catch_unwind","","Catches unwinding panics while polling the stream.",11,[[],["catchunwind",3]]],[11,"buffered","","An adaptor for creating a buffered list of pending …",11,[[],["buffered",3]]],[11,"buffer_unordered","","An adaptor for creating a buffered list of pending …",11,[[],["bufferunordered",3]]],[11,"merge","","An adapter for merging the output of two streams.",11,[[],["merge",3]]],[11,"zip","","An adapter for zipping two streams together.",11,[[],["zip",3]]],[11,"chain","","Adapter for chaining two stream.",11,[[],["chain",3]]],[11,"peekable","","Creates a new stream which exposes a <code>peek</code> method.",11,[[],["peekable",3]]],[11,"chunks","","An adaptor for chunking up items of the stream inside a …",11,[[],["chunks",3]]],[11,"select","","Creates a stream that selects the next element from …",11,[[],["select",3]]],[11,"forward","","A future that completes after the given stream has been …",11,[[],["forward",3]]],[11,"split","","Splits this <code>Stream + Sink</code> object into separate <code>Stream</code> and …",11,[[]]],[11,"inspect","","Do something with each item of this stream, afterwards …",11,[[],["inspect",3]]],[11,"inspect_err","","Do something with the error of this stream, afterwards …",11,[[],["inspecterr",3]]],[5,"futures_unordered","","Converts a list of futures into a <code>Stream</code> of results from …",null,[[],["futuresunordered",3]]],[0,"sink","futures","Asynchronous sinks",null,null],[3,"Buffer","futures::sink","Sink for the <code>Sink::buffer</code> combinator, which buffers up to …",null,null],[3,"Wait","","A sink combinator which converts an asynchronous sink to …",null,null],[6,"BoxSink","","A type alias for <code>Box<Sink + Send></code>",null,null],[3,"With","","Sink for the <code>Sink::with</code> combinator, chaining a …",null,null],[3,"WithFlatMap","","Sink for the <code>Sink::with_flat_map</code> combinator, chaining a …",null,null],[3,"Flush","","Future for the <code>Sink::flush</code> combinator, which polls the …",null,null],[3,"Send","","Future for the <code>Sink::send</code> combinator, which sends a value …",null,null],[3,"SendAll","","Future for the <code>Sink::send_all</code> combinator, which sends a …",null,null],[3,"SinkMapErr","","Sink for the <code>Sink::sink_map_err</code> combinator.",null,null],[3,"SinkFromErr","","A sink combinator to change the error type of a sink.",null,null],[3,"Fanout","","Sink that clones incoming items and forwards them to two …",null,null],[8,"Sink","","A <code>Sink</code> is a value into which other values can be sent, …",null,null],[16,"SinkItem","","The type of value that the sink accepts.",12,null],[16,"SinkError","","The type of value produced by the sink when an error …",12,null],[10,"start_send","","Begin the process of sending a value to the sink.",12,[[],["startsend",6]]],[10,"poll_complete","","Flush all output from this sink, if necessary.",12,[[],["poll",6]]],[11,"close","","A method to indicate that no more values will ever be …",12,[[],["poll",6]]],[11,"wait","","Creates a new object which will produce a synchronous …",12,[[],["wait",3]]],[11,"with","","Composes a function <em>in front of</em> the sink.",12,[[],["with",3]]],[11,"with_flat_map","","Composes a function <em>in front of</em> the sink.",12,[[],["withflatmap",3]]],[11,"sink_map_err","","Transforms the error returned by the sink.",12,[[],["sinkmaperr",3]]],[11,"sink_from_err","","Map this sink\'s error to any error implementing <code>From</code> for …",12,[[],[["sinkfromerr",3],["from",8]]]],[11,"buffer","","Adds a fixed-size buffer to the current sink.",12,[[],["buffer",3]]],[11,"fanout","","Fanout items to multiple sinks.",12,[[],["fanout",3]]],[11,"flush","","A future that completes when the sink has finished …",12,[[],["flush",3]]],[11,"send","","A future that completes after the given item has been …",12,[[],["send",3]]],[11,"send_all","","A future that completes after the given stream has been …",12,[[],["sendall",3]]],[0,"task","futures","Tasks used to drive a future computation",null,null],[3,"Task","futures::task","A handle to a \\\"task\\\", which represents a single …",null,null],[3,"AtomicTask","","A synchronization primitive for task notification.",null,null],[5,"current","","Returns a handle to the current task to call <code>notify</code> at a …",null,[[],["task",3]]],[5,"init","","Initialize the <code>futures</code> task system.",null,[[]]],[5,"is_in_task","","Return whether the caller is running in a task (and so …",null,[[]]],[3,"LocalKey","","A key for task-local data stored in a future\'s task.",null,null],[5,"with_unpark_event","","For the duration of the given callback, add an \\\"unpark …",null,[[["unparkevent",3]]]],[3,"UnparkEvent","","A set insertion to trigger upon <code>unpark</code>.",null,null],[8,"EventSet","","A concurrent set which allows for the insertion of <code>usize</code> …",null,null],[10,"insert","","Insert the given ID into the set",13,[[]]],[0,"executor","futures","Executors",null,null],[3,"Spawn","futures::executor","Representation of a spawned future/stream.",null,null],[5,"spawn","","Spawns a future or stream, returning it and the new task …",null,[[],["spawn",3]]],[8,"Notify","","A trait which represents a sink of notifications that a …",null,null],[10,"notify","","Indicates that an associated future and/or task are ready …",14,[[]]],[11,"clone_id","","This function is called whenever a new copy of <code>id</code> is …",14,[[]]],[11,"drop_id","","All instances of <code>Task</code> store an <code>id</code> that they\'re going to …",14,[[]]],[5,"with_notify","","Sets the <code>NotifyHandle</code> of the current task for the …",null,[[]]],[8,"UnsafeNotify","","An unsafe trait for implementing custom forms of memory …",null,null],[10,"clone_raw","","Creates a new <code>NotifyHandle</code> from this instance of …",15,[[],["notifyhandle",3]]],[10,"drop_raw","","Drops this instance of <code>UnsafeNotify</code>, deallocating …",15,[[]]],[3,"NotifyHandle","","A <code>NotifyHandle</code> is the core value through which …",null,null],[0,"sync","futures","Future-aware synchronization",null,null],[0,"oneshot","futures::sync","A one-shot, futures-aware channel",null,null],[3,"Receiver","futures::sync::oneshot","A future representing the completion of a computation …",null,null],[3,"Sender","","Represents the completion half of a oneshot through which …",null,null],[5,"channel","","Creates a new futures-aware, one-shot channel.",null,[[]]],[11,"send","","Completes this oneshot with a successful result.",16,[[],["result",4]]],[11,"poll_cancel","","Polls this <code>Sender</code> half to detect whether the <code>Receiver</code> …",16,[[],["poll",6]]],[11,"is_canceled","","Tests to see whether this <code>Sender</code>\'s corresponding <code>Receiver</code> …",16,[[]]],[3,"Canceled","","Error returned from a <code>Receiver<T></code> whenever the …",null,null],[11,"close","","Gracefully close this receiver, preventing sending any …",17,[[]]],[11,"try_recv","","Attempts to receive a message outside of the context of a …",17,[[],[["canceled",3],["result",4],["option",4]]]],[3,"SpawnHandle","","Handle returned from the <code>spawn</code> function.",null,null],[3,"Execute","","Type of future which <code>Execute</code> instances below must be able …",null,null],[5,"spawn","","Spawns a <code>future</code> onto the instance of <code>Executor</code> provided, …",null,[[],["spawnhandle",3]]],[5,"spawn_fn","","Spawns a function <code>f</code> onto the <code>Spawn</code> instance provided <code>s</code>.",null,[[],["spawnhandle",3]]],[11,"forget","","Drop this future without canceling the underlying future.",18,[[]]],[0,"mpsc","futures::sync","A multi-producer, single-consumer, futures-aware, FIFO …",null,null],[3,"Sender","futures::sync::mpsc","The transmission end of a channel which is used to send …",null,null],[3,"UnboundedSender","","The transmission end of a channel which is used to send …",null,null],[3,"Receiver","","The receiving end of a channel which implements the <code>Stream</code>…",null,null],[3,"UnboundedReceiver","","The receiving end of a channel which implements the <code>Stream</code>…",null,null],[3,"SendError","","Error type for sending, used when the receiving end of a …",null,null],[3,"TrySendError","","Error type returned from <code>try_send</code>",null,null],[11,"into_inner","","Returns the message that was attempted to be sent but …",19,[[]]],[11,"is_full","","Returns true if this error is a result of the channel …",20,[[]]],[11,"is_disconnected","","Returns true if this error is a result of the receiver …",20,[[]]],[11,"into_inner","","Returns the message that was attempted to be sent but …",20,[[]]],[5,"channel","","Creates an in-memory channel implementation of the <code>Stream</code> …",null,[[]]],[5,"unbounded","","Creates an in-memory channel implementation of the <code>Stream</code> …",null,[[]]],[11,"try_send","","Attempts to send a message on this <code>Sender<T></code> without …",21,[[],[["trysenderror",3],["result",4]]]],[11,"poll_ready","","Polls the channel to determine if there is guaranteed to …",21,[[],[["poll",6],["senderror",3]]]],[11,"is_closed","","Returns whether this channel is closed without needing a …",21,[[]]],[11,"is_closed","","Returns whether this channel is closed without needing a …",22,[[]]],[11,"unbounded_send","","Sends the provided message along this channel.",22,[[],[["senderror",3],["result",4]]]],[11,"close","","Closes the receiving half",23,[[]]],[11,"close","","Closes the receiving half",24,[[]]],[3,"SpawnHandle","","Handle returned from the <code>spawn</code> function.",null,null],[3,"Execute","","Type of future which <code>Executor</code> instances must be able to …",null,null],[5,"spawn","","Spawns a <code>stream</code> onto the instance of <code>Executor</code> provided, …",null,[[],["spawnhandle",3]]],[5,"spawn_unbounded","","Spawns a <code>stream</code> onto the instance of <code>Executor</code> provided, …",null,[[],["spawnhandle",3]]],[3,"BiLock","futures::sync","A type of futures-powered synchronization primitive which …",null,null],[3,"BiLockGuard","","Returned RAII guard from the <code>poll_lock</code> method.",null,null],[3,"BiLockAcquire","","Future returned by <code>BiLock::lock</code> which will resolve when …",null,null],[3,"BiLockAcquired","","Resolved value of the <code>BiLockAcquire<T></code> future.",null,null],[0,"unsync","futures","Future-aware single-threaded synchronization",null,null],[0,"mpsc","futures::unsync","A multi-producer, single-consumer, futures-aware, FIFO …",null,null],[5,"channel","futures::unsync::mpsc","Creates a bounded in-memory channel with buffered storage.",null,[[]]],[3,"Sender","","The transmission end of a channel.",null,null],[3,"Receiver","","The receiving end of a channel which implements the <code>Stream</code>…",null,null],[11,"close","","Closes the receiving half",25,[[]]],[3,"UnboundedSender","","The transmission end of an unbounded channel.",null,null],[11,"unbounded_send","","Sends the provided message along this channel.",26,[[],[["result",4],["senderror",3]]]],[3,"UnboundedReceiver","","The receiving end of an unbounded channel.",null,null],[11,"close","","Closes the receiving half",27,[[]]],[5,"unbounded","","Creates an unbounded in-memory channel with buffered …",null,[[]]],[3,"SendError","","Error type for sending, used when the receiving end of a …",null,null],[11,"into_inner","","Returns the message that was attempted to be sent but …",28,[[]]],[3,"SpawnHandle","","Handle returned from the <code>spawn</code> function.",null,null],[3,"Execute","","Type of future which <code>Executor</code> instances must be able to …",null,null],[5,"spawn","","Spawns a <code>stream</code> onto the instance of <code>Executor</code> provided, …",null,[[],["spawnhandle",3]]],[5,"spawn_unbounded","","Spawns a <code>stream</code> onto the instance of <code>Executor</code> provided, …",null,[[],["spawnhandle",3]]],[0,"oneshot","futures::unsync","A one-shot, futures-aware channel",null,null],[5,"channel","futures::unsync::oneshot","Creates a new futures-aware, one-shot channel.",null,[[]]],[3,"Sender","","Represents the completion half of a oneshot through which …",null,null],[3,"Receiver","","A future representing the completion of a computation …",null,null],[11,"send","","Completes this oneshot with a successful result.",29,[[],["result",4]]],[11,"poll_cancel","","Polls this <code>Sender</code> half to detect whether the <code>Receiver</code> …",29,[[],["poll",6]]],[11,"is_canceled","","Tests to see whether this <code>Sender</code>\'s corresponding <code>Receiver</code> …",29,[[]]],[11,"close","","Gracefully close this receiver, preventing sending any …",30,[[]]],[3,"SpawnHandle","","Handle returned from the <code>spawn</code> function.",null,null],[3,"Execute","","Type of future which <code>Spawn</code> instances below must be able …",null,null],[5,"spawn","","Spawns a <code>future</code> onto the instance of <code>Executor</code> provided, …",null,[[],["spawnhandle",3]]],[5,"spawn_fn","","Spawns a function <code>f</code> onto the <code>Spawn</code> instance provided <code>s</code>.",null,[[],["spawnhandle",3]]],[11,"forget","","Drop this future without canceling the underlying future.",31,[[]]],[0,"prelude","futures","A \\\"prelude\\\" for crates using the <code>futures</code> crate.",null,null],[6,"Poll","","Return type of the <code>Future::poll</code> method, indicates whether …",null,null],[4,"Async","","Return type of future, indicating whether a value is …",null,null],[13,"Ready","","Represents that a value is immediately ready.",32,null],[13,"NotReady","","Represents that a value is not ready yet, but may be so …",32,null],[4,"AsyncSink","","The result of an asynchronous attempt to send a value to …",null,null],[13,"Ready","","The <code>start_send</code> attempt succeeded, so the sending process …",33,null],[13,"NotReady","","The <code>start_send</code> attempt failed due to the sink being full. …",33,null],[6,"StartSend","","Return type of the <code>Sink::start_send</code> method, indicating …",null,null],[14,"try_ready","","A macro for extracting the successful type of a <code>Poll<T, E></code>…",null,null],[14,"task_local","","A macro to create a <code>static</code> of type <code>LocalKey</code>",null,null],[11,"from","","",32,[[]]],[11,"from","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"into","","",32,[[]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"from","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"into","","",33,[[]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"into_future","futures::future","",34,[[]]],[11,"from","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"into","","",34,[[]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"into_future","","",35,[[]]],[11,"from","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"into","","",35,[[]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"into_future","","",36,[[]]],[11,"from","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"into","","",36,[[]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"into_future","","",37,[[]]],[11,"from","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"into","","",37,[[]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"into_future","","",38,[[]]],[11,"from","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"into","","",38,[[]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"into_future","","",39,[[]]],[11,"from","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"into","","",39,[[]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"into_future","","",40,[[]]],[11,"from","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"into","","",40,[[]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"from","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"into","","",41,[[]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"into_future","","",42,[[]]],[11,"from","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"into","","",42,[[]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"from","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"into","","",43,[[]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"into_future","","",44,[[]]],[11,"from","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"into","","",44,[[]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"into_future","","",45,[[]]],[11,"from","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"into","","",45,[[]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"into_future","","",46,[[]]],[11,"from","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"into","","",46,[[]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"into_future","","",47,[[]]],[11,"from","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"into","","",47,[[]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"into_future","","",48,[[]]],[11,"from","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"into","","",48,[[]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"into_future","","",49,[[]]],[11,"from","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"into","","",49,[[]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"into_future","","",50,[[]]],[11,"from","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"into","","",50,[[]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"into_future","","",51,[[]]],[11,"from","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"into","","",51,[[]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"into_future","","",52,[[]]],[11,"from","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"into","","",52,[[]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"into_future","","",53,[[]]],[11,"from","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"into","","",53,[[]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"into_future","","",54,[[]]],[11,"from","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"into","","",54,[[]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"into_future","","",55,[[]]],[11,"from","","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"into","","",55,[[]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"into_future","","",1,[[]]],[11,"from","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"into_future","","",56,[[]]],[11,"from","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"into","","",56,[[]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"into_future","","",57,[[]]],[11,"from","","",57,[[]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"into","","",57,[[]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"into_future","","",58,[[]]],[11,"from","","",58,[[]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"into","","",58,[[]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"into_future","","",59,[[]]],[11,"from","","",59,[[]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"into","","",59,[[]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"into_future","","",60,[[]]],[11,"from","","",60,[[]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"into","","",60,[[]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"into_future","","",61,[[]]],[11,"from","","",61,[[]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"into","","",61,[[]]],[11,"try_into","","",61,[[],["result",4]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"to_owned","","",61,[[]]],[11,"clone_into","","",61,[[]]],[11,"from","","",62,[[]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"into","","",62,[[]]],[11,"try_into","","",62,[[],["result",4]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"to_owned","","",62,[[]]],[11,"clone_into","","",62,[[]]],[11,"from","","",63,[[]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"into","","",63,[[]]],[11,"try_into","","",63,[[],["result",4]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"to_owned","","",63,[[]]],[11,"clone_into","","",63,[[]]],[11,"to_string","","",63,[[],["string",3]]],[11,"from","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"into","","",7,[[]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"into","","",6,[[]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"from","futures::stream","",64,[[]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"into","","",64,[[]]],[11,"try_into","","",64,[[],["result",4]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"from","","",65,[[]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"into","","",65,[[]]],[11,"try_into","","",65,[[],["result",4]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"from","","",66,[[]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"into","","",66,[[]]],[11,"try_into","","",66,[[],["result",4]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"from","","",67,[[]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"into","","",67,[[]]],[11,"try_into","","",67,[[],["result",4]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"from","","",68,[[]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"into","","",68,[[]]],[11,"try_into","","",68,[[],["result",4]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"from","","",69,[[]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"into","","",69,[[]]],[11,"try_into","","",69,[[],["result",4]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"into_future","","",70,[[]]],[11,"from","","",70,[[]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"into","","",70,[[]]],[11,"try_into","","",70,[[],["result",4]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"into_future","","",71,[[]]],[11,"from","","",71,[[]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"into","","",71,[[]]],[11,"try_into","","",71,[[],["result",4]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"from","","",72,[[]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"into","","",72,[[]]],[11,"try_into","","",72,[[],["result",4]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"from","","",73,[[]]],[11,"borrow","","",73,[[]]],[11,"borrow_mut","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"into","","",73,[[]]],[11,"try_into","","",73,[[],["result",4]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"from","","",74,[[]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"into","","",74,[[]]],[11,"try_into","","",74,[[],["result",4]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"from","","",75,[[]]],[11,"borrow","","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"into","","",75,[[]]],[11,"try_into","","",75,[[],["result",4]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"into_future","","",76,[[]]],[11,"from","","",76,[[]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"into","","",76,[[]]],[11,"try_into","","",76,[[],["result",4]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"into_future","","",77,[[]]],[11,"from","","",77,[[]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"into","","",77,[[]]],[11,"try_into","","",77,[[],["result",4]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"from","","",78,[[]]],[11,"borrow","","",78,[[]]],[11,"borrow_mut","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"into","","",78,[[]]],[11,"try_into","","",78,[[],["result",4]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"from","","",79,[[]]],[11,"borrow","","",79,[[]]],[11,"borrow_mut","","",79,[[]]],[11,"try_from","","",79,[[],["result",4]]],[11,"into","","",79,[[]]],[11,"try_into","","",79,[[],["result",4]]],[11,"type_id","","",79,[[],["typeid",3]]],[11,"into_future","","",80,[[]]],[11,"from","","",80,[[]]],[11,"borrow","","",80,[[]]],[11,"borrow_mut","","",80,[[]]],[11,"try_from","","",80,[[],["result",4]]],[11,"into","","",80,[[]]],[11,"try_into","","",80,[[],["result",4]]],[11,"type_id","","",80,[[],["typeid",3]]],[11,"from","","",81,[[]]],[11,"borrow","","",81,[[]]],[11,"borrow_mut","","",81,[[]]],[11,"try_from","","",81,[[],["result",4]]],[11,"into","","",81,[[]]],[11,"try_into","","",81,[[],["result",4]]],[11,"type_id","","",81,[[],["typeid",3]]],[11,"from","","",82,[[]]],[11,"borrow","","",82,[[]]],[11,"borrow_mut","","",82,[[]]],[11,"try_from","","",82,[[],["result",4]]],[11,"into","","",82,[[]]],[11,"try_into","","",82,[[],["result",4]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"from","","",83,[[]]],[11,"borrow","","",83,[[]]],[11,"borrow_mut","","",83,[[]]],[11,"try_from","","",83,[[],["result",4]]],[11,"into","","",83,[[]]],[11,"try_into","","",83,[[],["result",4]]],[11,"type_id","","",83,[[],["typeid",3]]],[11,"from","","",84,[[]]],[11,"borrow","","",84,[[]]],[11,"borrow_mut","","",84,[[]]],[11,"try_from","","",84,[[],["result",4]]],[11,"into","","",84,[[]]],[11,"try_into","","",84,[[],["result",4]]],[11,"type_id","","",84,[[],["typeid",3]]],[11,"from","","",85,[[]]],[11,"borrow","","",85,[[]]],[11,"borrow_mut","","",85,[[]]],[11,"try_from","","",85,[[],["result",4]]],[11,"into","","",85,[[]]],[11,"try_into","","",85,[[],["result",4]]],[11,"type_id","","",85,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"into","","",9,[[]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",86,[[]]],[11,"borrow","","",86,[[]]],[11,"borrow_mut","","",86,[[]]],[11,"try_from","","",86,[[],["result",4]]],[11,"into","","",86,[[]]],[11,"try_into","","",86,[[],["result",4]]],[11,"type_id","","",86,[[],["typeid",3]]],[11,"from","","",87,[[]]],[11,"borrow","","",87,[[]]],[11,"borrow_mut","","",87,[[]]],[11,"try_from","","",87,[[],["result",4]]],[11,"into","","",87,[[]]],[11,"try_into","","",87,[[],["result",4]]],[11,"type_id","","",87,[[],["typeid",3]]],[11,"from","","",88,[[]]],[11,"borrow","","",88,[[]]],[11,"borrow_mut","","",88,[[]]],[11,"try_from","","",88,[[],["result",4]]],[11,"into","","",88,[[]]],[11,"try_into","","",88,[[],["result",4]]],[11,"type_id","","",88,[[],["typeid",3]]],[11,"from","","",89,[[]]],[11,"borrow","","",89,[[]]],[11,"borrow_mut","","",89,[[]]],[11,"try_from","","",89,[[],["result",4]]],[11,"into","","",89,[[]]],[11,"try_into","","",89,[[],["result",4]]],[11,"type_id","","",89,[[],["typeid",3]]],[11,"from","","",90,[[]]],[11,"borrow","","",90,[[]]],[11,"borrow_mut","","",90,[[]]],[11,"try_from","","",90,[[],["result",4]]],[11,"into","","",90,[[]]],[11,"try_into","","",90,[[],["result",4]]],[11,"type_id","","",90,[[],["typeid",3]]],[11,"from","","",91,[[]]],[11,"borrow","","",91,[[]]],[11,"borrow_mut","","",91,[[]]],[11,"try_from","","",91,[[],["result",4]]],[11,"into","","",91,[[]]],[11,"try_into","","",91,[[],["result",4]]],[11,"type_id","","",91,[[],["typeid",3]]],[11,"from","","",92,[[]]],[11,"borrow","","",92,[[]]],[11,"borrow_mut","","",92,[[]]],[11,"try_from","","",92,[[],["result",4]]],[11,"into","","",92,[[]]],[11,"try_into","","",92,[[],["result",4]]],[11,"type_id","","",92,[[],["typeid",3]]],[11,"from","","",93,[[]]],[11,"borrow","","",93,[[]]],[11,"borrow_mut","","",93,[[]]],[11,"try_from","","",93,[[],["result",4]]],[11,"into","","",93,[[]]],[11,"try_into","","",93,[[],["result",4]]],[11,"type_id","","",93,[[],["typeid",3]]],[11,"from","","",94,[[]]],[11,"borrow","","",94,[[]]],[11,"borrow_mut","","",94,[[]]],[11,"try_from","","",94,[[],["result",4]]],[11,"into","","",94,[[]]],[11,"try_into","","",94,[[],["result",4]]],[11,"type_id","","",94,[[],["typeid",3]]],[11,"from","","",95,[[]]],[11,"borrow","","",95,[[]]],[11,"borrow_mut","","",95,[[]]],[11,"try_from","","",95,[[],["result",4]]],[11,"into","","",95,[[]]],[11,"try_into","","",95,[[],["result",4]]],[11,"type_id","","",95,[[],["typeid",3]]],[11,"from","","",96,[[]]],[11,"borrow","","",96,[[]]],[11,"borrow_mut","","",96,[[]]],[11,"try_from","","",96,[[],["result",4]]],[11,"into","","",96,[[]]],[11,"try_into","","",96,[[],["result",4]]],[11,"type_id","","",96,[[],["typeid",3]]],[11,"from","","",97,[[]]],[11,"borrow","","",97,[[]]],[11,"borrow_mut","","",97,[[]]],[11,"try_from","","",97,[[],["result",4]]],[11,"into","","",97,[[]]],[11,"try_into","","",97,[[],["result",4]]],[11,"type_id","","",97,[[],["typeid",3]]],[11,"into_future","","",98,[[]]],[11,"from","","",98,[[]]],[11,"borrow","","",98,[[]]],[11,"borrow_mut","","",98,[[]]],[11,"try_from","","",98,[[],["result",4]]],[11,"into","","",98,[[]]],[11,"try_into","","",98,[[],["result",4]]],[11,"type_id","","",98,[[],["typeid",3]]],[11,"from","","",99,[[]]],[11,"borrow","","",99,[[]]],[11,"borrow_mut","","",99,[[]]],[11,"try_from","","",99,[[],["result",4]]],[11,"into","","",99,[[]]],[11,"try_into","","",99,[[],["result",4]]],[11,"type_id","","",99,[[],["typeid",3]]],[11,"from","","",100,[[]]],[11,"borrow","","",100,[[]]],[11,"borrow_mut","","",100,[[]]],[11,"try_from","","",100,[[],["result",4]]],[11,"into","","",100,[[]]],[11,"try_into","","",100,[[],["result",4]]],[11,"type_id","","",100,[[],["typeid",3]]],[11,"from","","",101,[[]]],[11,"borrow","","",101,[[]]],[11,"borrow_mut","","",101,[[]]],[11,"try_from","","",101,[[],["result",4]]],[11,"into","","",101,[[]]],[11,"try_into","","",101,[[],["result",4]]],[11,"type_id","","",101,[[],["typeid",3]]],[11,"from","","",102,[[]]],[11,"borrow","","",102,[[]]],[11,"borrow_mut","","",102,[[]]],[11,"try_from","","",102,[[],["result",4]]],[11,"into","","",102,[[]]],[11,"try_into","","",102,[[],["result",4]]],[11,"type_id","","",102,[[],["typeid",3]]],[11,"into_future","","",103,[[]]],[11,"from","","",103,[[]]],[11,"borrow","","",103,[[]]],[11,"borrow_mut","","",103,[[]]],[11,"try_from","","",103,[[],["result",4]]],[11,"into","","",103,[[]]],[11,"try_into","","",103,[[],["result",4]]],[11,"type_id","","",103,[[],["typeid",3]]],[11,"from","","",104,[[]]],[11,"borrow","","",104,[[]]],[11,"borrow_mut","","",104,[[]]],[11,"try_from","","",104,[[],["result",4]]],[11,"into","","",104,[[]]],[11,"try_into","","",104,[[],["result",4]]],[11,"into_iter","","",104,[[]]],[11,"type_id","","",104,[[],["typeid",3]]],[11,"from","","",105,[[]]],[11,"borrow","","",105,[[]]],[11,"borrow_mut","","",105,[[]]],[11,"try_from","","",105,[[],["result",4]]],[11,"into","","",105,[[]]],[11,"try_into","","",105,[[],["result",4]]],[11,"type_id","","",105,[[],["typeid",3]]],[11,"from","","",106,[[]]],[11,"borrow","","",106,[[]]],[11,"borrow_mut","","",106,[[]]],[11,"try_from","","",106,[[],["result",4]]],[11,"into","","",106,[[]]],[11,"try_into","","",106,[[],["result",4]]],[11,"type_id","","",106,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"into","","",10,[[]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"to_string","","",10,[[],["string",3]]],[11,"from","futures::stream::futures_unordered","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"into","","",8,[[]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",107,[[]]],[11,"borrow","","",107,[[]]],[11,"borrow_mut","","",107,[[]]],[11,"try_from","","",107,[[],["result",4]]],[11,"into","","",107,[[]]],[11,"try_into","","",107,[[],["result",4]]],[11,"into_iter","","",107,[[]]],[11,"type_id","","",107,[[],["typeid",3]]],[11,"from","futures::stream","",108,[[]]],[11,"borrow","","",108,[[]]],[11,"borrow_mut","","",108,[[]]],[11,"try_from","","",108,[[],["result",4]]],[11,"into","","",108,[[]]],[11,"try_into","","",108,[[],["result",4]]],[11,"type_id","","",108,[[],["typeid",3]]],[11,"from","futures::sink","",109,[[]]],[11,"borrow","","",109,[[]]],[11,"borrow_mut","","",109,[[]]],[11,"try_from","","",109,[[],["result",4]]],[11,"into","","",109,[[]]],[11,"try_into","","",109,[[],["result",4]]],[11,"type_id","","",109,[[],["typeid",3]]],[11,"to_owned","","",109,[[]]],[11,"clone_into","","",109,[[]]],[11,"from","","",110,[[]]],[11,"borrow","","",110,[[]]],[11,"borrow_mut","","",110,[[]]],[11,"try_from","","",110,[[],["result",4]]],[11,"into","","",110,[[]]],[11,"try_into","","",110,[[],["result",4]]],[11,"type_id","","",110,[[],["typeid",3]]],[11,"into_future","","",111,[[]]],[11,"from","","",111,[[]]],[11,"borrow","","",111,[[]]],[11,"borrow_mut","","",111,[[]]],[11,"try_from","","",111,[[],["result",4]]],[11,"into","","",111,[[]]],[11,"try_into","","",111,[[],["result",4]]],[11,"type_id","","",111,[[],["typeid",3]]],[11,"from","","",112,[[]]],[11,"borrow","","",112,[[]]],[11,"borrow_mut","","",112,[[]]],[11,"try_from","","",112,[[],["result",4]]],[11,"into","","",112,[[]]],[11,"try_into","","",112,[[],["result",4]]],[11,"type_id","","",112,[[],["typeid",3]]],[11,"to_owned","","",112,[[]]],[11,"clone_into","","",112,[[]]],[11,"into_future","","",113,[[]]],[11,"from","","",113,[[]]],[11,"borrow","","",113,[[]]],[11,"borrow_mut","","",113,[[]]],[11,"try_from","","",113,[[],["result",4]]],[11,"into","","",113,[[]]],[11,"try_into","","",113,[[],["result",4]]],[11,"type_id","","",113,[[],["typeid",3]]],[11,"into_future","","",114,[[]]],[11,"from","","",114,[[]]],[11,"borrow","","",114,[[]]],[11,"borrow_mut","","",114,[[]]],[11,"try_from","","",114,[[],["result",4]]],[11,"into","","",114,[[]]],[11,"try_into","","",114,[[],["result",4]]],[11,"type_id","","",114,[[],["typeid",3]]],[11,"from","","",115,[[]]],[11,"borrow","","",115,[[]]],[11,"borrow_mut","","",115,[[]]],[11,"try_from","","",115,[[],["result",4]]],[11,"into","","",115,[[]]],[11,"try_into","","",115,[[],["result",4]]],[11,"type_id","","",115,[[],["typeid",3]]],[11,"to_owned","","",115,[[]]],[11,"clone_into","","",115,[[]]],[11,"from","","",116,[[]]],[11,"borrow","","",116,[[]]],[11,"borrow_mut","","",116,[[]]],[11,"try_from","","",116,[[],["result",4]]],[11,"into","","",116,[[]]],[11,"try_into","","",116,[[],["result",4]]],[11,"type_id","","",116,[[],["typeid",3]]],[11,"from","","",117,[[]]],[11,"borrow","","",117,[[]]],[11,"borrow_mut","","",117,[[]]],[11,"try_from","","",117,[[],["result",4]]],[11,"into","","",117,[[]]],[11,"try_into","","",117,[[],["result",4]]],[11,"type_id","","",117,[[],["typeid",3]]],[11,"from","","",118,[[]]],[11,"borrow","","",118,[[]]],[11,"borrow_mut","","",118,[[]]],[11,"try_from","","",118,[[],["result",4]]],[11,"into","","",118,[[]]],[11,"try_into","","",118,[[],["result",4]]],[11,"type_id","","",118,[[],["typeid",3]]],[11,"from","futures::task","",119,[[]]],[11,"borrow","","",119,[[]]],[11,"borrow_mut","","",119,[[]]],[11,"try_from","","",119,[[],["result",4]]],[11,"into","","",119,[[]]],[11,"try_into","","",119,[[],["result",4]]],[11,"type_id","","",119,[[],["typeid",3]]],[11,"from","","",120,[[]]],[11,"borrow","","",120,[[]]],[11,"borrow_mut","","",120,[[]]],[11,"try_from","","",120,[[],["result",4]]],[11,"into","","",120,[[]]],[11,"try_into","","",120,[[],["result",4]]],[11,"type_id","","",120,[[],["typeid",3]]],[11,"from","","",121,[[]]],[11,"borrow","","",121,[[]]],[11,"borrow_mut","","",121,[[]]],[11,"try_from","","",121,[[],["result",4]]],[11,"into","","",121,[[]]],[11,"try_into","","",121,[[],["result",4]]],[11,"type_id","","",121,[[],["typeid",3]]],[11,"to_owned","","",121,[[]]],[11,"clone_into","","",121,[[]]],[11,"from","","",122,[[]]],[11,"borrow","","",122,[[]]],[11,"borrow_mut","","",122,[[]]],[11,"try_from","","",122,[[],["result",4]]],[11,"into","","",122,[[]]],[11,"try_into","","",122,[[],["result",4]]],[11,"type_id","","",122,[[],["typeid",3]]],[11,"to_owned","","",122,[[]]],[11,"clone_into","","",122,[[]]],[11,"from","futures::executor","",123,[[]]],[11,"borrow","","",123,[[]]],[11,"borrow_mut","","",123,[[]]],[11,"try_from","","",123,[[],["result",4]]],[11,"into","","",123,[[]]],[11,"try_into","","",123,[[],["result",4]]],[11,"type_id","","",123,[[],["typeid",3]]],[11,"from","","",124,[[]]],[11,"borrow","","",124,[[]]],[11,"borrow_mut","","",124,[[]]],[11,"try_from","","",124,[[],["result",4]]],[11,"into","","",124,[[]]],[11,"try_into","","",124,[[],["result",4]]],[11,"type_id","","",124,[[],["typeid",3]]],[11,"to_owned","","",124,[[]]],[11,"clone_into","","",124,[[]]],[11,"into_future","futures::sync::oneshot","",17,[[]]],[11,"from","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"into","","",17,[[]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"into","","",16,[[]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",125,[[]]],[11,"borrow","","",125,[[]]],[11,"borrow_mut","","",125,[[]]],[11,"try_from","","",125,[[],["result",4]]],[11,"into","","",125,[[]]],[11,"try_into","","",125,[[],["result",4]]],[11,"type_id","","",125,[[],["typeid",3]]],[11,"to_owned","","",125,[[]]],[11,"clone_into","","",125,[[]]],[11,"to_string","","",125,[[],["string",3]]],[11,"into_future","","",18,[[]]],[11,"from","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"into","","",18,[[]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"into_future","","",126,[[]]],[11,"from","","",126,[[]]],[11,"borrow","","",126,[[]]],[11,"borrow_mut","","",126,[[]]],[11,"try_from","","",126,[[],["result",4]]],[11,"into","","",126,[[]]],[11,"try_into","","",126,[[],["result",4]]],[11,"type_id","","",126,[[],["typeid",3]]],[11,"from","futures::sync::mpsc","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"into","","",21,[[]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"from","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"into","","",22,[[]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"from","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"into","","",23,[[]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"into","","",24,[[]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"into","","",19,[[]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"to_string","","",19,[[],["string",3]]],[11,"from","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"into","","",20,[[]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"to_string","","",20,[[],["string",3]]],[11,"from","","",127,[[]]],[11,"borrow","","",127,[[]]],[11,"borrow_mut","","",127,[[]]],[11,"try_from","","",127,[[],["result",4]]],[11,"into","","",127,[[]]],[11,"try_into","","",127,[[],["result",4]]],[11,"type_id","","",127,[[],["typeid",3]]],[11,"into_future","","",128,[[]]],[11,"from","","",128,[[]]],[11,"borrow","","",128,[[]]],[11,"borrow_mut","","",128,[[]]],[11,"try_from","","",128,[[],["result",4]]],[11,"into","","",128,[[]]],[11,"try_into","","",128,[[],["result",4]]],[11,"type_id","","",128,[[],["typeid",3]]],[11,"from","futures::sync","",129,[[]]],[11,"borrow","","",129,[[]]],[11,"borrow_mut","","",129,[[]]],[11,"try_from","","",129,[[],["result",4]]],[11,"into","","",129,[[]]],[11,"try_into","","",129,[[],["result",4]]],[11,"type_id","","",129,[[],["typeid",3]]],[11,"from","","",130,[[]]],[11,"borrow","","",130,[[]]],[11,"borrow_mut","","",130,[[]]],[11,"try_from","","",130,[[],["result",4]]],[11,"into","","",130,[[]]],[11,"try_into","","",130,[[],["result",4]]],[11,"type_id","","",130,[[],["typeid",3]]],[11,"into_future","","",131,[[]]],[11,"from","","",131,[[]]],[11,"borrow","","",131,[[]]],[11,"borrow_mut","","",131,[[]]],[11,"try_from","","",131,[[],["result",4]]],[11,"into","","",131,[[]]],[11,"try_into","","",131,[[],["result",4]]],[11,"type_id","","",131,[[],["typeid",3]]],[11,"from","","",132,[[]]],[11,"borrow","","",132,[[]]],[11,"borrow_mut","","",132,[[]]],[11,"try_from","","",132,[[],["result",4]]],[11,"into","","",132,[[]]],[11,"try_into","","",132,[[],["result",4]]],[11,"type_id","","",132,[[],["typeid",3]]],[11,"from","futures::unsync::mpsc","",133,[[]]],[11,"borrow","","",133,[[]]],[11,"borrow_mut","","",133,[[]]],[11,"try_from","","",133,[[],["result",4]]],[11,"into","","",133,[[]]],[11,"try_into","","",133,[[],["result",4]]],[11,"type_id","","",133,[[],["typeid",3]]],[11,"to_owned","","",133,[[]]],[11,"clone_into","","",133,[[]]],[11,"from","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"into","","",25,[[]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"into","","",26,[[]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"from","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"into","","",27,[[]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"from","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"into","","",28,[[]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"to_string","","",28,[[],["string",3]]],[11,"from","","",134,[[]]],[11,"borrow","","",134,[[]]],[11,"borrow_mut","","",134,[[]]],[11,"try_from","","",134,[[],["result",4]]],[11,"into","","",134,[[]]],[11,"try_into","","",134,[[],["result",4]]],[11,"type_id","","",134,[[],["typeid",3]]],[11,"into_future","","",135,[[]]],[11,"from","","",135,[[]]],[11,"borrow","","",135,[[]]],[11,"borrow_mut","","",135,[[]]],[11,"try_from","","",135,[[],["result",4]]],[11,"into","","",135,[[]]],[11,"try_into","","",135,[[],["result",4]]],[11,"type_id","","",135,[[],["typeid",3]]],[11,"from","futures::unsync::oneshot","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"into","","",29,[[]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"into_future","","",30,[[]]],[11,"from","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"into","","",30,[[]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"into_future","","",31,[[]]],[11,"from","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"into","","",31,[[]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"into_future","","",136,[[]]],[11,"from","","",136,[[]]],[11,"borrow","","",136,[[]]],[11,"borrow_mut","","",136,[[]]],[11,"try_from","","",136,[[],["result",4]]],[11,"into","","",136,[[]]],[11,"try_into","","",136,[[],["result",4]]],[11,"type_id","","",136,[[],["typeid",3]]],[11,"poll","futures::future","",34,[[],["poll",6]]],[11,"poll","","",35,[[],["poll",6]]],[11,"poll","","",36,[[],["poll",6]]],[11,"poll","","",37,[[],["poll",6]]],[11,"poll","","",38,[[],["poll",6]]],[11,"poll","","",39,[[],["poll",6]]],[11,"poll","","",40,[[],["poll",6]]],[11,"poll","","",42,[[],["poll",6]]],[11,"poll","","",44,[[],["poll",6]]],[11,"poll","","",45,[[],["poll",6]]],[11,"poll","","",46,[[],["poll",6]]],[11,"poll","","",47,[[],["poll",6]]],[11,"poll","","",48,[[],["poll",6]]],[11,"poll","","",49,[[],["poll",6]]],[11,"poll","","",50,[[],["poll",6]]],[11,"poll","","",51,[[],["poll",6]]],[11,"poll","","",52,[[],["poll",6]]],[11,"poll","","",53,[[],["poll",6]]],[11,"poll","","",54,[[],["poll",6]]],[11,"poll","","",55,[[],["poll",6]]],[11,"poll","","",1,[[],["poll",6]]],[11,"poll","","",56,[[],["poll",6]]],[11,"poll","","",57,[[],["poll",6]]],[11,"poll","","",58,[[],["poll",6]]],[11,"poll","","",59,[[],["poll",6]]],[11,"poll","","",60,[[],["poll",6]]],[11,"poll","","",61,[[],["poll",6]]],[11,"poll","futures::stream","",70,[[],["poll",6]]],[11,"poll","","",71,[[],["poll",6]]],[11,"poll","","",76,[[],["poll",6]]],[11,"poll","","",77,[[],["poll",6]]],[11,"poll","","",80,[[],["poll",6]]],[11,"poll","","",98,[[],["poll",6]]],[11,"poll","","",103,[[],[["poll",6],["vec",3]]]],[11,"poll","futures::sink","",111,[[],["poll",6]]],[11,"poll","","",113,[[],["poll",6]]],[11,"poll","","",114,[[],["poll",6]]],[11,"poll","futures::sync::oneshot","",17,[[],[["canceled",3],["poll",6]]]],[11,"poll","","",18,[[],["poll",6]]],[11,"poll","","",126,[[],["poll",6]]],[11,"poll","futures::sync::mpsc","",128,[[],["poll",6]]],[11,"poll","futures::sync","",131,[[],[["bilockacquired",3],["poll",6]]]],[11,"poll","futures::unsync::mpsc","",135,[[],["poll",6]]],[11,"poll","futures::unsync::oneshot","",30,[[],["poll",6]]],[11,"poll","","",31,[[],["poll",6]]],[11,"poll","","",136,[[],["poll",6]]],[11,"poll","futures::future","",41,[[],[["poll",6],["option",4]]]],[11,"poll","","",43,[[],[["poll",6],["option",4]]]],[11,"poll","","",1,[[],[["option",4],["poll",6]]]],[11,"poll","futures::stream","",64,[[],[["option",4],["poll",6]]]],[11,"poll","","",65,[[],[["option",4],["poll",6]]]],[11,"poll","","",66,[[],[["option",4],["poll",6]]]],[11,"poll","","",67,[[],[["poll",6],["option",4]]]],[11,"poll","","",68,[[],[["option",4],["poll",6]]]],[11,"poll","","",69,[[],[["poll",6],["option",4]]]],[11,"poll","","",72,[[],[["poll",6],["option",4]]]],[11,"poll","","",73,[[],[["poll",6],["option",4]]]],[11,"poll","","",74,[[],[["poll",6],["option",4]]]],[11,"poll","","",75,[[],[["poll",6],["option",4]]]],[11,"poll","","",78,[[],[["poll",6],["option",4]]]],[11,"poll","","",79,[[],[["poll",6],["option",4]]]],[11,"poll","","",81,[[],[["poll",6],["option",4]]]],[11,"poll","","",82,[[],[["poll",6],["option",4]]]],[11,"poll","","",83,[[],[["poll",6],["option",4]]]],[11,"poll","","",84,[[],[["option",4],["poll",6]]]],[11,"poll","","",85,[[],[["poll",6],["option",4]]]],[11,"poll","","",86,[[],[["option",4],["poll",6]]]],[11,"poll","","",87,[[],[["option",4],["poll",6]]]],[11,"poll","","",88,[[],[["poll",6],["option",4]]]],[11,"poll","","",89,[[],[["option",4],["poll",6]]]],[11,"poll","","",90,[[],[["option",4],["poll",6]]]],[11,"poll","","",91,[[],[["poll",6],["option",4]]]],[11,"poll","","",92,[[],[["poll",6],["option",4]]]],[11,"poll","","",93,[[],[["poll",6],["option",4]]]],[11,"poll","","",94,[[],[["poll",6],["option",4]]]],[11,"poll","","",95,[[],[["poll",6],["option",4]]]],[11,"poll","","",96,[[],[["poll",6],["option",4]]]],[11,"poll","","",97,[[],[["poll",6],["option",4]]]],[11,"poll","","",99,[[],[["poll",6],["option",4]]]],[11,"poll","","",100,[[],[["poll",6],["option",4]]]],[11,"poll","","",101,[[],[["poll",6],["option",4]]]],[11,"poll","","",102,[[],[["poll",6],["option",4]]]],[11,"poll","","",105,[[],[["poll",6],["option",4]]]],[11,"poll","futures::stream::futures_unordered","",8,[[],[["option",4],["poll",6]]]],[11,"poll","futures::stream","",108,[[],[["poll",6],["option",4]]]],[11,"poll","futures::sink","",109,[[],[["poll",6],["option",4]]]],[11,"poll","","",110,[[],[["poll",6],["option",4]]]],[11,"poll","","",112,[[],[["poll",6],["option",4]]]],[11,"poll","","",115,[[],[["poll",6],["option",4]]]],[11,"poll","","",117,[[],[["poll",6],["option",4]]]],[11,"poll","futures::sync::mpsc","",23,[[],[["poll",6],["option",4]]]],[11,"poll","","",24,[[],[["poll",6],["option",4]]]],[11,"poll","","",127,[[],[["poll",6],["option",4]]]],[11,"poll","futures::unsync::mpsc","",25,[[],[["poll",6],["option",4]]]],[11,"poll","","",27,[[],[["poll",6],["option",4]]]],[11,"poll","","",134,[[],[["poll",6],["option",4]]]],[11,"start_send","futures::stream","",68,[[],["startsend",6]]],[11,"poll_complete","","",68,[[],["poll",6]]],[11,"close","","",68,[[],["poll",6]]],[11,"start_send","","",73,[[],["startsend",6]]],[11,"poll_complete","","",73,[[],["poll",6]]],[11,"close","","",73,[[],["poll",6]]],[11,"start_send","","",74,[[],["startsend",6]]],[11,"poll_complete","","",74,[[],["poll",6]]],[11,"close","","",74,[[],["poll",6]]],[11,"start_send","","",75,[[],["startsend",6]]],[11,"poll_complete","","",75,[[],["poll",6]]],[11,"close","","",75,[[],["poll",6]]],[11,"start_send","","",78,[[],["startsend",6]]],[11,"poll_complete","","",78,[[],["poll",6]]],[11,"close","","",78,[[],["poll",6]]],[11,"start_send","","",79,[[],["startsend",6]]],[11,"poll_complete","","",79,[[],["poll",6]]],[11,"close","","",79,[[],["poll",6]]],[11,"start_send","","",81,[[],["startsend",6]]],[11,"poll_complete","","",81,[[],["poll",6]]],[11,"close","","",81,[[],["poll",6]]],[11,"start_send","","",82,[[],["startsend",6]]],[11,"poll_complete","","",82,[[],["poll",6]]],[11,"close","","",82,[[],["poll",6]]],[11,"start_send","","",83,[[],["startsend",6]]],[11,"poll_complete","","",83,[[],["poll",6]]],[11,"close","","",83,[[],["poll",6]]],[11,"start_send","","",84,[[],["startsend",6]]],[11,"poll_complete","","",84,[[],["poll",6]]],[11,"close","","",84,[[],["poll",6]]],[11,"start_send","","",87,[[],["startsend",6]]],[11,"poll_complete","","",87,[[],["poll",6]]],[11,"close","","",87,[[],["poll",6]]],[11,"start_send","","",88,[[],["startsend",6]]],[11,"poll_complete","","",88,[[],["poll",6]]],[11,"close","","",88,[[],["poll",6]]],[11,"start_send","","",91,[[],["startsend",6]]],[11,"poll_complete","","",91,[[],["poll",6]]],[11,"close","","",91,[[],["poll",6]]],[11,"start_send","","",92,[[],["startsend",6]]],[11,"poll_complete","","",92,[[],["poll",6]]],[11,"close","","",92,[[],["poll",6]]],[11,"start_send","","",93,[[],["startsend",6]]],[11,"poll_complete","","",93,[[],["poll",6]]],[11,"close","","",93,[[],["poll",6]]],[11,"start_send","","",94,[[],["startsend",6]]],[11,"poll_complete","","",94,[[],["poll",6]]],[11,"close","","",94,[[],["poll",6]]],[11,"start_send","","",95,[[],["startsend",6]]],[11,"poll_complete","","",95,[[],["poll",6]]],[11,"close","","",95,[[],["poll",6]]],[11,"start_send","","",99,[[],["startsend",6]]],[11,"poll_complete","","",99,[[],["poll",6]]],[11,"close","","",99,[[],["poll",6]]],[11,"start_send","","",100,[[],["startsend",6]]],[11,"poll_complete","","",100,[[],["poll",6]]],[11,"close","","",100,[[],["poll",6]]],[11,"start_send","","",102,[[],["startsend",6]]],[11,"poll_complete","","",102,[[],["poll",6]]],[11,"close","","",102,[[],["poll",6]]],[11,"start_send","","",106,[[],["startsend",6]]],[11,"poll_complete","","",106,[[],["poll",6]]],[11,"close","","",106,[[],["poll",6]]],[11,"start_send","futures::sink","",109,[[],["startsend",6]]],[11,"poll_complete","","",109,[[],["poll",6]]],[11,"close","","",109,[[],["poll",6]]],[11,"start_send","","",110,[[],["startsend",6]]],[11,"poll_complete","","",110,[[],["poll",6]]],[11,"close","","",110,[[],["poll",6]]],[11,"start_send","","",112,[[],["startsend",6]]],[11,"poll_complete","","",112,[[],["poll",6]]],[11,"close","","",112,[[],["poll",6]]],[11,"start_send","","",115,[[],["startsend",6]]],[11,"poll_complete","","",115,[[],["poll",6]]],[11,"close","","",115,[[],["poll",6]]],[11,"start_send","","",116,[[],["startsend",6]]],[11,"poll_complete","","",116,[[],["poll",6]]],[11,"close","","",116,[[],["poll",6]]],[11,"start_send","","",117,[[],["startsend",6]]],[11,"poll_complete","","",117,[[],["poll",6]]],[11,"close","","",117,[[],["poll",6]]],[11,"start_send","futures::sync::mpsc","",21,[[],[["senderror",3],["startsend",6]]]],[11,"poll_complete","","",21,[[],[["poll",6],["senderror",3]]]],[11,"close","","",21,[[],[["poll",6],["senderror",3]]]],[11,"start_send","","",22,[[],[["senderror",3],["startsend",6]]]],[11,"poll_complete","","",22,[[],[["poll",6],["senderror",3]]]],[11,"close","","",22,[[],[["poll",6],["senderror",3]]]],[11,"start_send","futures::unsync::mpsc","",133,[[],[["startsend",6],["senderror",3]]]],[11,"poll_complete","","",133,[[],[["senderror",3],["poll",6]]]],[11,"close","","",133,[[],[["senderror",3],["poll",6]]]],[11,"start_send","","",26,[[],[["startsend",6],["senderror",3]]]],[11,"poll_complete","","",26,[[],[["senderror",3],["poll",6]]]],[11,"close","","",26,[[],[["senderror",3],["poll",6]]]],[11,"deref","futures::future","",62,[[]]],[11,"deref","","",63,[[]]],[11,"deref","futures::sync","",130,[[]]],[11,"deref","","",132,[[]]],[11,"deref_mut","","",130,[[]]],[11,"deref_mut","","",132,[[]]],[11,"from","futures","",32,[[],["async",4]]],[11,"from","futures::future","",37,[[["result",4]]]],[11,"from","futures::executor","",124,[[["arc",3]],["notifyhandle",3]]],[11,"from","","",124,[[],["notifyhandle",3]]],[11,"fmt","futures","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","futures::future","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",36,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","","",39,[[["formatter",3]],["result",6]]],[11,"fmt","","",40,[[["formatter",3]],["result",6]]],[11,"fmt","","",41,[[["formatter",3]],["result",6]]],[11,"fmt","","",42,[[["formatter",3]],["result",6]]],[11,"fmt","","",43,[[["formatter",3]],["result",6]]],[11,"fmt","","",44,[[["formatter",3]],["result",6]]],[11,"fmt","","",45,[[["formatter",3]],["result",6]]],[11,"fmt","","",46,[[["formatter",3]],["result",6]]],[11,"fmt","","",47,[[["formatter",3]],["result",6]]],[11,"fmt","","",48,[[["formatter",3]],["result",6]]],[11,"fmt","","",49,[[["formatter",3]],["result",6]]],[11,"fmt","","",50,[[["formatter",3]],["result",6]]],[11,"fmt","","",51,[[["formatter",3]],["result",6]]],[11,"fmt","","",52,[[["formatter",3]],["result",6]]],[11,"fmt","","",53,[[["formatter",3]],["result",6]]],[11,"fmt","","",54,[[["formatter",3]],["result",6]]],[11,"fmt","","",55,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",56,[[["formatter",3]],["result",6]]],[11,"fmt","","",57,[[["formatter",3]],["result",6]]],[11,"fmt","","",58,[[["formatter",3]],["result",6]]],[11,"fmt","","",59,[[["formatter",3]],["result",6]]],[11,"fmt","","",60,[[["formatter",3]],["result",6]]],[11,"fmt","","",61,[[["formatter",3]],["result",6]]],[11,"fmt","","",62,[[["formatter",3]],["result",6]]],[11,"fmt","","",63,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","futures::stream","",64,[[["formatter",3]],["result",6]]],[11,"fmt","","",65,[[["formatter",3]],["result",6]]],[11,"fmt","","",66,[[["formatter",3]],["result",6]]],[11,"fmt","","",67,[[["formatter",3]],["result",6]]],[11,"fmt","","",68,[[["formatter",3]],["result",6]]],[11,"fmt","","",69,[[["formatter",3]],["result",6]]],[11,"fmt","","",70,[[["formatter",3]],["fmtresult",6]]],[11,"fmt","","",71,[[["formatter",3]],["fmtresult",6]]],[11,"fmt","","",72,[[["formatter",3]],["result",6]]],[11,"fmt","","",73,[[["formatter",3]],["result",6]]],[11,"fmt","","",74,[[["formatter",3]],["result",6]]],[11,"fmt","","",75,[[["formatter",3]],["result",6]]],[11,"fmt","","",76,[[["formatter",3]],["result",6]]],[11,"fmt","","",77,[[["formatter",3]],["result",6]]],[11,"fmt","","",78,[[["formatter",3]],["result",6]]],[11,"fmt","","",79,[[["formatter",3]],["result",6]]],[11,"fmt","","",80,[[["formatter",3]],["result",6]]],[11,"fmt","","",81,[[["formatter",3]],["result",6]]],[11,"fmt","","",82,[[["formatter",3]],["result",6]]],[11,"fmt","","",83,[[["formatter",3]],["result",6]]],[11,"fmt","","",84,[[["formatter",3]],["result",6]]],[11,"fmt","","",85,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",86,[[["formatter",3]],["result",6]]],[11,"fmt","","",87,[[["formatter",3]],["result",6]]],[11,"fmt","","",88,[[["formatter",3]],["result",6]]],[11,"fmt","","",89,[[["formatter",3]],["result",6]]],[11,"fmt","","",90,[[["formatter",3]],["result",6]]],[11,"fmt","","",91,[[["formatter",3]],["result",6]]],[11,"fmt","","",92,[[["formatter",3]],["result",6]]],[11,"fmt","","",93,[[["formatter",3]],["result",6]]],[11,"fmt","","",94,[[["formatter",3]],["result",6]]],[11,"fmt","","",95,[[["formatter",3]],["result",6]]],[11,"fmt","","",96,[[["formatter",3]],["result",6]]],[11,"fmt","","",97,[[["formatter",3]],["result",6]]],[11,"fmt","","",98,[[["formatter",3]],["result",6]]],[11,"fmt","","",99,[[["formatter",3]],["result",6]]],[11,"fmt","","",100,[[["formatter",3]],["result",6]]],[11,"fmt","","",101,[[["formatter",3]],["result",6]]],[11,"fmt","","",102,[[["formatter",3]],["result",6]]],[11,"fmt","","",103,[[["formatter",3]],["result",6]]],[11,"fmt","","",104,[[["formatter",3]],["result",6]]],[11,"fmt","","",105,[[["formatter",3]],["result",6]]],[11,"fmt","","",106,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","futures::stream::futures_unordered","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",107,[[["formatter",3]],["result",6]]],[11,"fmt","futures::stream","",108,[[["formatter",3]],["result",6]]],[11,"fmt","futures::sink","",109,[[["formatter",3]],["result",6]]],[11,"fmt","","",110,[[["formatter",3]],["result",6]]],[11,"fmt","","",111,[[["formatter",3]],["result",6]]],[11,"fmt","","",112,[[["formatter",3]],["result",6]]],[11,"fmt","","",113,[[["formatter",3]],["result",6]]],[11,"fmt","","",114,[[["formatter",3]],["result",6]]],[11,"fmt","","",115,[[["formatter",3]],["result",6]]],[11,"fmt","","",116,[[["formatter",3]],["fmtresult",6]]],[11,"fmt","","",117,[[["formatter",3]],["result",6]]],[11,"fmt","","",118,[[["formatter",3]],["result",6]]],[11,"fmt","futures::task","",119,[[["formatter",3]],["result",6]]],[11,"fmt","","",120,[[["formatter",3]],["result",6]]],[11,"fmt","","",121,[[["formatter",3]],["result",6]]],[11,"fmt","","",122,[[["formatter",3]],["result",6]]],[11,"fmt","futures::executor","",123,[[["formatter",3]],["result",6]]],[11,"fmt","","",124,[[["formatter",3]],["result",6]]],[11,"fmt","futures::sync::oneshot","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",125,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",126,[[["formatter",3]],["result",6]]],[11,"fmt","futures::sync::mpsc","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",127,[[["formatter",3]],["result",6]]],[11,"fmt","","",128,[[["formatter",3]],["result",6]]],[11,"fmt","futures::sync","",129,[[["formatter",3]],["result",6]]],[11,"fmt","","",130,[[["formatter",3]],["result",6]]],[11,"fmt","","",131,[[["formatter",3]],["result",6]]],[11,"fmt","","",132,[[["formatter",3]],["result",6]]],[11,"fmt","futures::unsync::mpsc","",133,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",134,[[["formatter",3]],["result",6]]],[11,"fmt","","",135,[[["formatter",3]],["result",6]]],[11,"fmt","futures::unsync::oneshot","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",136,[[["formatter",3]],["result",6]]],[11,"fmt","futures::future","",63,[[["formatter",3]],["result",6]]],[11,"fmt","futures::stream","",10,[[["formatter",3]],["result",6]]],[11,"fmt","futures::sync::oneshot","",125,[[["formatter",3]],["result",6]]],[11,"fmt","futures::sync::mpsc","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","futures::unsync::mpsc","",28,[[["formatter",3]],["result",6]]],[11,"eq","futures","",32,[[["async",4]]]],[11,"ne","","",32,[[["async",4]]]],[11,"eq","","",33,[[["asyncsink",4]]]],[11,"ne","","",33,[[["asyncsink",4]]]],[11,"eq","futures::future","",6,[[["executeerrorkind",4]]]],[11,"eq","futures::sync::oneshot","",125,[[["canceled",3]]]],[11,"eq","futures::sync::mpsc","",19,[[["senderror",3]]]],[11,"ne","","",19,[[["senderror",3]]]],[11,"eq","","",20,[[["trysenderror",3]]]],[11,"ne","","",20,[[["trysenderror",3]]]],[11,"drop","futures::future","",61,[[]]],[11,"drop","futures::stream::futures_unordered","",8,[[]]],[11,"drop","futures::executor","",124,[[]]],[11,"drop","futures::sync::oneshot","",16,[[]]],[11,"drop","","",17,[[]]],[11,"drop","","",18,[[]]],[11,"drop","","",126,[[]]],[11,"drop","futures::sync::mpsc","",21,[[]]],[11,"drop","","",23,[[]]],[11,"drop","futures::sync","",130,[[]]],[11,"drop","","",132,[[]]],[11,"drop","futures::unsync::mpsc","",133,[[]]],[11,"drop","","",25,[[]]],[11,"drop","futures::unsync::oneshot","",29,[[]]],[11,"drop","","",30,[[]]],[11,"from_iter","futures::stream::futures_unordered","",8,[[]]],[11,"from_iter","futures::stream","",108,[[]]],[11,"next","","",104,[[],["option",4]]],[11,"next","futures::stream::futures_unordered","",107,[[],["option",4]]],[11,"size_hint","","",107,[[]]],[11,"clone","futures","",32,[[],["async",4]]],[11,"clone","","",33,[[],["asyncsink",4]]],[11,"clone","futures::future","",37,[[],["futureresult",3]]],[11,"clone","","",61,[[]]],[11,"clone","","",62,[[],["shareditem",3]]],[11,"clone","","",63,[[],["sharederror",3]]],[11,"clone","","",6,[[],["executeerrorkind",4]]],[11,"clone","futures::sink","",109,[[],["with",3]]],[11,"clone","","",112,[[],["sinkfromerr",3]]],[11,"clone","","",115,[[],["sinkmaperr",3]]],[11,"clone","futures::task","",121,[[],["unparkevent",3]]],[11,"clone","","",122,[[],["task",3]]],[11,"clone","futures::executor","",124,[[]]],[11,"clone","futures::sync::oneshot","",125,[[],["canceled",3]]],[11,"clone","futures::sync::mpsc","",19,[[],["senderror",3]]],[11,"clone","","",20,[[],["trysenderror",3]]],[11,"clone","","",22,[[],["unboundedsender",3]]],[11,"clone","","",21,[[],["sender",3]]],[11,"clone","futures::unsync::mpsc","",133,[[]]],[11,"clone","","",26,[[]]],[11,"default","futures::stream::futures_unordered","",8,[[]]],[11,"default","futures::stream","",108,[[]]],[11,"default","futures::task","",119,[[]]],[11,"description","futures::future","",63,[[]]],[11,"cause","","",63,[[],[["option",4],["error",8]]]],[11,"description","futures::stream","",10,[[]]],[11,"description","futures::sync::oneshot","",125,[[]]],[11,"description","futures::sync::mpsc","",19,[[]]],[11,"description","","",20,[[]]],[11,"description","futures::unsync::mpsc","",28,[[]]],[11,"map","futures","Change the success value of this <code>Async</code> with the closure …",32,[[],["async",4]]],[11,"is_ready","","Returns whether this is <code>Async::Ready</code>",32,[[]]],[11,"is_not_ready","","Returns whether this is <code>Async::NotReady</code>",32,[[]]],[11,"map","","Change the NotReady value of this <code>AsyncSink</code> with the …",33,[[],["asyncsink",4]]],[11,"is_ready","","Returns whether this is <code>AsyncSink::Ready</code>",33,[[]]],[11,"is_not_ready","","Returns whether this is <code>AsyncSink::NotReady</code>",33,[[]]],[11,"is_done","futures::future","Returns whether the underlying future has finished or not.",42,[[]]],[11,"split","","Splits out the homogeneous type from an either of tuples.",1,[[]]],[11,"peek","","If any clone of this <code>Shared</code> has completed execution, …",61,[[],[["option",4],["result",4]]]],[11,"get_ref","futures::stream","Acquires a reference to the underlying stream that this …",68,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream …",68,[[]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",68,[[]]],[11,"get_ref","","Acquires a reference to the underlying stream that this …",73,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream …",73,[[]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",73,[[]]],[11,"get_ref","","Acquires a reference to the underlying stream that this …",74,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream …",74,[[]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",74,[[]]],[11,"get_ref","","Acquires a reference to the underlying stream that this …",75,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream …",75,[[]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",75,[[]]],[11,"get_ref","","Acquires a reference to the underlying stream that this …",78,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream …",78,[[]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",78,[[]]],[11,"is_done","","Returns whether the underlying stream has finished or not.",79,[[]]],[11,"get_ref","","Acquires a reference to the underlying stream that this …",79,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream …",79,[[]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",79,[[]]],[11,"get_ref","","Acquires a reference to the underlying stream that this …",80,[[],["option",4]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream …",80,[[],["option",4]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",80,[[],["option",4]]],[11,"get_ref","","Acquires a reference to the underlying stream that this …",81,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream …",81,[[]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",81,[[]]],[11,"get_ref","","Acquires a reference to the underlying stream that this …",82,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream …",82,[[]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",82,[[]]],[11,"get_ref","","Acquires a reference to the underlying stream that this …",83,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream …",83,[[]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",83,[[]]],[11,"get_ref","","Acquires a reference to the underlying stream that this …",84,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream …",84,[[]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",84,[[]]],[11,"peek","","Peek retrieves a reference to the next item in the stream.",88,[[],[["option",4],["poll",6]]]],[11,"get_ref","","Acquires a reference to the underlying stream that this …",91,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream …",91,[[]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",91,[[]]],[11,"get_ref","","Acquires a reference to the underlying stream that this …",92,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream …",92,[[]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",92,[[]]],[11,"get_ref","","Acquires a reference to the underlying stream that this …",93,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream …",93,[[]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",93,[[]]],[11,"get_ref","","Acquires a reference to the underlying stream that this …",94,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream …",94,[[]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",94,[[]]],[11,"sink_ref","","Get a shared reference to the inner sink. If this …",98,[[],["option",4]]],[11,"sink_mut","","Get a mutable reference to the inner sink. If this …",98,[[],["option",4]]],[11,"stream_ref","","Get a shared reference to the inner stream. If this …",98,[[],["option",4]]],[11,"stream_mut","","Get a mutable reference to the inner stream. If this …",98,[[],["option",4]]],[11,"get_ref","","Acquires a reference to the underlying stream that this …",99,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream …",99,[[]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",99,[[]]],[11,"get_ref","","Acquires a reference to the underlying stream that this …",100,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream …",100,[[]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",100,[[]]],[11,"get_ref","","Acquires a reference to the underlying stream that this …",102,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream …",102,[[]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",102,[[]]],[11,"get_ref","","Acquires a reference to the underlying stream that this …",104,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream …",104,[[]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",104,[[]]],[11,"reunite","","Attempts to put the two \\\"halves\\\" of a split <code>Stream + Sink</code> …",105,[[["splitsink",3]],[["result",4],["reuniteerror",3]]]],[11,"reunite","","Attempts to put the two \\\"halves\\\" of a split <code>Stream + Sink</code> …",106,[[["splitstream",3]],[["result",4],["reuniteerror",3]]]],[11,"new","","Constructs a new, empty <code>FuturesOrdered</code>",108,[[],["futuresordered",3]]],[11,"len","","Returns the number of futures contained in the queue.",108,[[]]],[11,"is_empty","","Returns <code>true</code> if the queue contains no futures",108,[[]]],[11,"push","","Push a future into the queue.",108,[[]]],[11,"get_ref","futures::sink","Get a shared reference to the inner sink.",109,[[]]],[11,"get_mut","","Get a mutable reference to the inner sink.",109,[[]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink.",109,[[]]],[11,"get_ref","","Get a shared reference to the inner sink.",110,[[]]],[11,"get_mut","","Get a mutable reference to the inner sink.",110,[[]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink.",110,[[]]],[11,"get_ref","","Get a shared reference to the inner sink.",111,[[]]],[11,"get_mut","","Get a mutable reference to the inner sink.",111,[[]]],[11,"into_inner","","Consume the <code>Flush</code> and return the inner sink.",111,[[]]],[11,"get_ref","","Get a shared reference to the inner sink.",112,[[]]],[11,"get_mut","","Get a mutable reference to the inner sink.",112,[[]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink.",112,[[]]],[11,"get_ref","","Get a shared reference to the inner sink.",113,[[]]],[11,"get_mut","","Get a mutable reference to the inner sink.",113,[[]]],[11,"get_ref","","Get a shared reference to the inner sink.",115,[[]]],[11,"get_mut","","Get a mutable reference to the inner sink.",115,[[]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink.",115,[[]]],[11,"into_inner","","Consumes this combinator, returning the underlying sinks.",116,[[]]],[11,"get_ref","","Get a shared reference to the inner sink.",117,[[]]],[11,"get_mut","","Get a mutable reference to the inner sink.",117,[[]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink.",117,[[]]],[11,"send","","Sends a value to this sink, blocking the current thread …",118,[[],["result",4]]],[11,"flush","","Flushes any buffered data in this sink, blocking the …",118,[[],["result",4]]],[11,"close","","Close this sink, blocking the current thread until it\'s …",118,[[],["result",4]]],[11,"new","futures::task","Create an <code>AtomicTask</code> initialized with the given <code>Task</code>",119,[[],["atomictask",3]]],[11,"register","","Registers the current task to be notified on calls to …",119,[[]]],[11,"register_task","","Registers the provided task to be notified on calls to …",119,[[["task",3]]]],[11,"notify","","Notifies the task that last called <code>register</code>.",119,[[]]],[11,"with","","Access this task-local key, running the provided closure …",120,[[]]],[11,"wait_future","futures::executor","Waits for the internal future to complete, blocking this …",123,[[],["result",4]]],[11,"wait_stream","","Like <code>wait_future</code>, except only waits for the next element …",123,[[],[["option",4],["result",4]]]],[11,"wait_send","","Blocks the current thread until it\'s able to send <code>value</code> …",123,[[],["result",4]]],[11,"wait_flush","","Blocks the current thread until it\'s able to flush this …",123,[[],["result",4]]],[11,"wait_close","","Blocks the current thread until it\'s able to close this …",123,[[],["result",4]]],[11,"new","futures::task","Construct an unpark event that will insert <code>id</code> into <code>set</code> …",121,[[["eventset",8],["arc",3]],["unparkevent",3]]],[11,"notify","","Indicate that the task should attempt to poll its future …",122,[[]]],[11,"is_current","","Returns <code>true</code> when called from within the context of the …",122,[[]]],[11,"will_notify_current","","This function is intended as a performance optimization …",122,[[]]],[11,"get_ref","futures::executor","Get a shared reference to the object the Spawn is …",123,[[]]],[11,"get_mut","","Get a mutable reference to the object the Spawn is …",123,[[]]],[11,"into_inner","","Consume the Spawn, returning its inner object",123,[[]]],[11,"poll_fn_notify","","Calls the provided closure, scheduling notifications to …",123,[[]]],[11,"poll_future_notify","","Polls the internal future, scheduling notifications to be …",123,[[],["poll",6]]],[11,"poll_stream_notify","","Like <code>poll_future_notify</code>, except polls the underlying …",123,[[],[["poll",6],["option",4]]]],[11,"start_send_notify","","Invokes the underlying <code>start_send</code> method with this task …",123,[[],["startsend",6]]],[11,"poll_flush_notify","","Invokes the underlying <code>poll_complete</code> method with this …",123,[[],["poll",6]]],[11,"close_notify","","Invokes the underlying <code>close</code> method with this task in …",123,[[],["poll",6]]],[11,"clone_id","","This function is called whenever a new copy of <code>id</code> is …",14,[[]]],[11,"drop_id","","All instances of <code>Task</code> store an <code>id</code> that they\'re going to …",14,[[]]],[11,"new","","Constructs a new <code>NotifyHandle</code> directly.",124,[[],["notifyhandle",3]]],[11,"notify","","Invokes the underlying instance of <code>Notify</code> with the …",124,[[]]],[11,"new","futures::sync","Creates a new <code>BiLock</code> protecting the provided data.",129,[[]]],[11,"poll_lock","","Attempt to acquire this lock, returning <code>NotReady</code> if it …",129,[[],[["bilockguard",3],["async",4]]]],[11,"lock","","Perform a \\\"blocking lock\\\" of this lock, consuming this …",129,[[],["bilockacquire",3]]],[11,"reunite","","Attempts to put the two \\\"halves\\\" of a <code>BiLock<T></code> back …",129,[[],[["result",4],["reuniteerror",3]]]],[11,"unlock","","Recovers the original <code>BiLock<T></code>, unlocking this lock.",132,[[],["bilock",3]]]],"p":[[4,"Loop"],[4,"Either"],[8,"Future"],[8,"IntoFuture"],[8,"FutureFrom"],[8,"Executor"],[4,"ExecuteErrorKind"],[3,"ExecuteError"],[3,"FuturesUnordered"],[4,"MergedItem"],[3,"ReuniteError"],[8,"Stream"],[8,"Sink"],[8,"EventSet"],[8,"Notify"],[8,"UnsafeNotify"],[3,"Sender"],[3,"Receiver"],[3,"SpawnHandle"],[3,"SendError"],[3,"TrySendError"],[3,"Sender"],[3,"UnboundedSender"],[3,"Receiver"],[3,"UnboundedReceiver"],[3,"Receiver"],[3,"UnboundedSender"],[3,"UnboundedReceiver"],[3,"SendError"],[3,"Sender"],[3,"Receiver"],[3,"SpawnHandle"],[4,"Async"],[4,"AsyncSink"],[3,"Empty"],[3,"Lazy"],[3,"PollFn"],[3,"FutureResult"],[3,"LoopFn"],[3,"AndThen"],[3,"Flatten"],[3,"FlattenStream"],[3,"Fuse"],[3,"IntoStream"],[3,"Join"],[3,"Join3"],[3,"Join4"],[3,"Join5"],[3,"Map"],[3,"MapErr"],[3,"FromErr"],[3,"OrElse"],[3,"Select"],[3,"SelectNext"],[3,"Select2"],[3,"Then"],[3,"Inspect"],[3,"CatchUnwind"],[3,"JoinAll"],[3,"SelectAll"],[3,"SelectOk"],[3,"Shared"],[3,"SharedItem"],[3,"SharedError"],[3,"Iter"],[3,"IterOk"],[3,"IterResult"],[3,"Repeat"],[3,"AndThen"],[3,"Chain"],[3,"Concat2"],[3,"Concat"],[3,"Empty"],[3,"Filter"],[3,"FilterMap"],[3,"Flatten"],[3,"Fold"],[3,"ForEach"],[3,"FromErr"],[3,"Fuse"],[3,"StreamFuture"],[3,"Inspect"],[3,"InspectErr"],[3,"Map"],[3,"MapErr"],[3,"Merge"],[3,"Once"],[3,"OrElse"],[3,"Peekable"],[3,"PollFn"],[3,"Select"],[3,"Skip"],[3,"SkipWhile"],[3,"Take"],[3,"TakeWhile"],[3,"Then"],[3,"Unfold"],[3,"Zip"],[3,"Forward"],[3,"Buffered"],[3,"BufferUnordered"],[3,"CatchUnwind"],[3,"Chunks"],[3,"Collect"],[3,"Wait"],[3,"SplitStream"],[3,"SplitSink"],[3,"IterMut"],[3,"FuturesOrdered"],[3,"With"],[3,"WithFlatMap"],[3,"Flush"],[3,"SinkFromErr"],[3,"Send"],[3,"SendAll"],[3,"SinkMapErr"],[3,"Fanout"],[3,"Buffer"],[3,"Wait"],[3,"AtomicTask"],[3,"LocalKey"],[3,"UnparkEvent"],[3,"Task"],[3,"Spawn"],[3,"NotifyHandle"],[3,"Canceled"],[3,"Execute"],[3,"SpawnHandle"],[3,"Execute"],[3,"BiLock"],[3,"BiLockGuard"],[3,"BiLockAcquire"],[3,"BiLockAcquired"],[3,"Sender"],[3,"SpawnHandle"],[3,"Execute"],[3,"Execute"]]},\
"lazy_queue":{"doc":"travis crates.io docs.rs","i":[[0,"sync","lazy_queue","Thread safe queue implementation.",null,null],[0,"bounded","lazy_queue::sync","Bounded queue.",null,null],[3,"LazyQueue","lazy_queue::sync::bounded","A clonable thread safe sink-like queue.",null,null],[3,"QueueProcessor","","Lazy queue processor.",null,null],[11,"new","","Creates a new lazy queue using given processor.",0,[[]]],[0,"unbounded","lazy_queue::sync","Unbounded queue.",null,null],[3,"LazyQueue","lazy_queue::sync::unbounded","A clonable thread safe sink-like queue.",null,null],[3,"QueueProcessor","","Lazy queue processor.",null,null],[11,"new","","Creates a new lazy queue using given processor.",1,[[]]],[0,"unsync","lazy_queue","Single-threaded queue implementation.",null,null],[0,"bounded","lazy_queue::unsync","Bounded queue.",null,null],[3,"LazyQueue","lazy_queue::unsync::bounded","A clonable single-threaded sink-like queue.",null,null],[3,"QueueProcessor","","Lazy queue processor.",null,null],[11,"new","","Creates a new lazy queue using given processor.",2,[[]]],[0,"unbounded","lazy_queue::unsync","Unbounded queue.",null,null],[3,"LazyQueue","lazy_queue::unsync::unbounded","A clonable single-threaded sink-like queue.",null,null],[3,"QueueProcessor","","Lazy queue processor.",null,null],[11,"new","","Creates a new lazy queue using given processor.",3,[[]]],[4,"ProcessingError","lazy_queue","An error that might happen during processing of a queue.",null,null],[13,"ReceiverError","","Channel has closed.",4,null],[13,"FutureError","","Error returned by a processor.",4,null],[11,"from","lazy_queue::sync::bounded","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"into_future","","",5,[[]]],[11,"from","lazy_queue::sync::unbounded","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"into_future","","",6,[[]]],[11,"from","lazy_queue::unsync::bounded","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"into_future","","",7,[[]]],[11,"from","lazy_queue::unsync::unbounded","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"into_future","","",8,[[]]],[11,"from","lazy_queue","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_string","","",4,[[],["string",3]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"clone","lazy_queue::sync::bounded","",0,[[]]],[11,"clone","lazy_queue::sync::unbounded","",1,[[]]],[11,"clone","lazy_queue::unsync::bounded","",2,[[]]],[11,"clone","lazy_queue::unsync::unbounded","",3,[[]]],[11,"fmt","lazy_queue","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"description","","",4,[[]]],[11,"cause","","",4,[[],[["error",8],["option",4]]]],[11,"poll","lazy_queue::sync::bounded","",5,[[],["poll",6]]],[11,"poll","lazy_queue::sync::unbounded","",6,[[],["poll",6]]],[11,"poll","lazy_queue::unsync::bounded","",7,[[],["poll",6]]],[11,"poll","lazy_queue::unsync::unbounded","",8,[[],["poll",6]]],[11,"start_send","lazy_queue::sync::bounded","",0,[[],[["senderror",3],["startsend",6]]]],[11,"poll_complete","","",0,[[],[["senderror",3],["poll",6]]]],[11,"start_send","lazy_queue::sync::unbounded","",1,[[],[["unboundedsenderror",3],["startsend",6]]]],[11,"poll_complete","","",1,[[],[["poll",6],["unboundedsenderror",3]]]],[11,"start_send","lazy_queue::unsync::bounded","",2,[[],[["senderror",3],["startsend",6]]]],[11,"poll_complete","","",2,[[],[["senderror",3],["poll",6]]]],[11,"start_send","lazy_queue::unsync::unbounded","",3,[[],[["senderror",3],["startsend",6]]]],[11,"poll_complete","","",3,[[],[["senderror",3],["poll",6]]]]],"p":[[3,"LazyQueue"],[3,"LazyQueue"],[3,"LazyQueue"],[3,"LazyQueue"],[4,"ProcessingError"],[3,"QueueProcessor"],[3,"QueueProcessor"],[3,"QueueProcessor"],[3,"QueueProcessor"]]},\
"tokio_sync":{"doc":"Asynchronous synchronization primitives.","i":[[0,"lock","tokio_sync","An asynchronous <code>Mutex</code>-like type.",null,null],[3,"Lock","tokio_sync::lock","An asynchronous mutual exclusion primitive useful for …",null,null],[3,"LockGuard","","A handle to a held <code>Lock</code>.",null,null],[11,"new","","Creates a new lock in an unlocked state ready for use.",0,[[]]],[11,"poll_lock","","Try to acquire the lock.",0,[[],[["async",4],["lockguard",3]]]],[0,"mpsc","tokio_sync","A multi-producer, single-consumer queue for sending …",null,null],[0,"error","tokio_sync::mpsc","Channel error types",null,null],[3,"RecvError","tokio_sync::mpsc::error","Error returned by <code>Receiver</code>.",null,null],[3,"SendError","","Error returned by the <code>Sender</code>.",null,null],[3,"TrySendError","","Error returned by <code>Sender::try_send</code>.",null,null],[3,"UnboundedRecvError","","Error returned by <code>UnboundedReceiver</code>.",null,null],[3,"UnboundedSendError","","Error returned by the <code>UnboundedSender</code>.",null,null],[3,"UnboundedTrySendError","","Returned by <code>UnboundedSender::try_send</code> when the channel …",null,null],[5,"channel","tokio_sync::mpsc","Create a bounded mpsc channel for communicating between …",null,[[]]],[3,"Receiver","","Receive values from the associated <code>Sender</code>.",null,null],[3,"Sender","","Send values to the associated <code>Receiver</code>.",null,null],[5,"unbounded_channel","","Create an unbounded mpsc channel for communicating …",null,[[]]],[3,"UnboundedReceiver","","Receive values from the associated <code>UnboundedSender</code>.",null,null],[3,"UnboundedSender","","Send values to the associated <code>UnboundedReceiver</code>.",null,null],[0,"oneshot","tokio_sync","A channel for sending a single message between …",null,null],[0,"error","tokio_sync::oneshot","Oneshot error types",null,null],[3,"RecvError","tokio_sync::oneshot::error","Error returned by the <code>Future</code> implementation for <code>Receiver</code>.",null,null],[3,"TryRecvError","","Error returned by the <code>try_recv</code> function on <code>Receiver</code>.",null,null],[3,"Sender","tokio_sync::oneshot","Sends a value to the associated <code>Receiver</code>.",null,null],[3,"Receiver","","Receive a value from the associated <code>Sender</code>.",null,null],[5,"channel","","Create a new one-shot channel for sending single values …",null,[[]]],[11,"send","","Completes this oneshot with a successful result.",1,[[],["result",4]]],[11,"poll_close","","Check if the associated <code>Receiver</code> handle has been dropped.",1,[[],["poll",6]]],[11,"is_closed","","Check if the associated <code>Receiver</code> handle has been dropped.",1,[[]]],[11,"close","","Prevent the associated <code>Sender</code> handle from sending a value.",2,[[]]],[11,"try_recv","","Attempts to receive a value outside of the context of a …",2,[[],[["result",4],["tryrecverror",3]]]],[0,"semaphore","tokio_sync","Thread-safe, asynchronous counting semaphore.",null,null],[3,"Semaphore","tokio_sync::semaphore","Futures-aware semaphore.",null,null],[3,"Permit","","A semaphore permit",null,null],[3,"AcquireError","","Error returned by <code>Permit::poll_acquire</code>.",null,null],[3,"TryAcquireError","","Error returned by <code>Permit::try_acquire</code>.",null,null],[11,"new","","Creates a new semaphore with the initial number of permits",3,[[],["semaphore",3]]],[11,"available_permits","","Returns the current number of available permits",3,[[]]],[11,"close","","Close the semaphore. This prevents the semaphore from …",3,[[]]],[11,"add_permits","","Add <code>n</code> new permits to the semaphore.",3,[[]]],[11,"new","","Create a new <code>Permit</code>.",4,[[],["permit",3]]],[11,"is_acquired","","Returns true if the permit has been acquired",4,[[]]],[11,"poll_acquire","","Try to acquire the permit. If no permits are available, …",4,[[["semaphore",3]],[["poll",6],["acquireerror",3]]]],[11,"try_acquire","","Try to acquire the permit.",4,[[["semaphore",3]],[["tryacquireerror",3],["result",4]]]],[11,"release","","Release a permit back to the semaphore",4,[[["semaphore",3]]]],[11,"forget","","Forget the permit <strong>without</strong> releasing it back to the …",4,[[]]],[11,"is_closed","","Returns true if the error was caused by a closed …",5,[[]]],[11,"is_no_permits","","Returns true if the error was caused by calling …",5,[[]]],[0,"task","tokio_sync","Thread-safe task notification primitives.",null,null],[3,"AtomicTask","tokio_sync::task","A synchronization primitive for task notification.",null,null],[0,"watch","tokio_sync","A single-producer, multi-consumer channel that only …",null,null],[0,"error","tokio_sync::watch","Watch error types",null,null],[3,"RecvError","tokio_sync::watch::error","Error produced when receiving a value fails.",null,null],[3,"SendError","","Error produced when sending a value fails.",null,null],[3,"Receiver","tokio_sync::watch","Receives values from the associated <code>Sender</code>.",null,null],[3,"Sender","","Sends values to the associated <code>Receiver</code>.",null,null],[3,"Ref","","Returns a reference to the inner value",null,null],[5,"channel","","Create a new watch channel, returning the \\\"send\\\" and …",null,[[]]],[11,"get_ref","","Returns a reference to the most recently sent value",6,[[],["ref",3]]],[11,"poll_ref","","Attempts to receive the latest value sent via the channel.",6,[[],[["recverror",3],["option",4],["poll",6]]]],[11,"broadcast","","Broadcast a new value via the channel, notifying all …",7,[[],[["result",4],["senderror",3]]]],[11,"poll_close","","Returns <code>Ready</code> when all receivers have dropped.",7,[[],["poll",6]]],[11,"from","tokio_sync::lock","",0,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_string","","",8,[[],["string",3]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","tokio_sync::mpsc","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","tokio_sync::mpsc::error","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_string","","",11,[[],["string",3]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_string","","",12,[[],["string",3]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_string","","",13,[[],["string",3]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","tokio_sync::mpsc","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","tokio_sync::mpsc::error","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_string","","",16,[[],["string",3]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_string","","",17,[[],["string",3]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_string","","",18,[[],["string",3]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","tokio_sync::oneshot::error","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_string","","",19,[[],["string",3]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_string","","",20,[[],["string",3]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","tokio_sync::oneshot","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"into_future","","",2,[[]]],[11,"from","tokio_sync::semaphore","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_string","","",21,[[],["string",3]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_string","","",5,[[],["string",3]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","tokio_sync::task","",22,[[]]],[11,"into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","tokio_sync::watch::error","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_string","","",23,[[],["string",3]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_string","","",24,[[],["string",3]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","tokio_sync::watch","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"drop","tokio_sync::lock","",8,[[]]],[11,"drop","tokio_sync::oneshot","",1,[[]]],[11,"drop","","",2,[[]]],[11,"drop","tokio_sync::watch","",6,[[]]],[11,"drop","","",7,[[]]],[11,"from","tokio_sync::lock","",0,[[]]],[11,"from","tokio_sync::mpsc::error","",12,[[],["trysenderror",3]]],[11,"from","","",17,[[],["unboundedtrysenderror",3]]],[11,"clone","tokio_sync::lock","",0,[[]]],[11,"clone","tokio_sync::mpsc","",9,[[]]],[11,"clone","","",14,[[]]],[11,"clone","tokio_sync::watch","",6,[[]]],[11,"default","tokio_sync::lock","",0,[[]]],[11,"default","tokio_sync::task","",22,[[]]],[11,"deref","tokio_sync::lock","",8,[[]]],[11,"deref","tokio_sync::watch","",25,[[]]],[11,"deref_mut","tokio_sync::lock","",8,[[]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","tokio_sync::mpsc","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","tokio_sync::mpsc::error","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","tokio_sync::mpsc","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","tokio_sync::mpsc::error","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","tokio_sync::oneshot","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","tokio_sync::oneshot::error","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","tokio_sync::semaphore","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","tokio_sync::task","",22,[[["formatter",3]],["result",6]]],[11,"fmt","tokio_sync::watch","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","tokio_sync::watch::error","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","tokio_sync::lock","",8,[[["formatter",3]],["result",6]]],[11,"fmt","tokio_sync::mpsc::error","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","tokio_sync::oneshot::error","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","tokio_sync::semaphore","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","tokio_sync::watch::error","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"description","tokio_sync::mpsc::error","",11,[[]]],[11,"description","","",12,[[]]],[11,"description","","",13,[[]]],[11,"description","","",16,[[]]],[11,"description","","",17,[[]]],[11,"description","","",18,[[]]],[11,"description","tokio_sync::oneshot::error","",19,[[]]],[11,"description","","",20,[[]]],[11,"description","tokio_sync::semaphore","",21,[[]]],[11,"description","","",5,[[]]],[11,"description","tokio_sync::watch::error","",23,[[]]],[11,"description","","",24,[[]]],[11,"poll","tokio_sync::oneshot","",2,[[],[["recverror",3],["poll",6]]]],[11,"poll","tokio_sync::mpsc","",10,[[],[["option",4],["poll",6]]]],[11,"poll","","",15,[[],[["option",4],["poll",6]]]],[11,"poll","tokio_sync::watch","",6,[[],[["poll",6],["option",4],["recverror",3]]]],[11,"start_send","tokio_sync::mpsc","",9,[[],["startsend",6]]],[11,"poll_complete","","",9,[[],["poll",6]]],[11,"close","","",9,[[],["poll",6]]],[11,"start_send","","",14,[[],["startsend",6]]],[11,"poll_complete","","",14,[[],["poll",6]]],[11,"close","","",14,[[],["poll",6]]],[11,"start_send","tokio_sync::watch","",7,[[],[["startsend",6],["senderror",3]]]],[11,"poll_complete","","",7,[[],[["poll",6],["senderror",3]]]],[11,"close","tokio_sync::mpsc","Closes the receiving half of a channel, without dropping …",10,[[]]],[11,"poll_ready","","Check if the <code>Sender</code> is ready to handle a value.",9,[[],[["poll",6],["senderror",3]]]],[11,"try_send","","Attempts to send a message on this <code>Sender</code>, returning the …",9,[[],[["result",4],["trysenderror",3]]]],[11,"into_inner","tokio_sync::mpsc::error","Get the inner value.",12,[[]]],[11,"is_closed","","Did the send fail because the channel has been closed?",12,[[]]],[11,"is_full","","Did the send fail because the channel was at capacity?",12,[[]]],[11,"close","tokio_sync::mpsc","Closes the receiving half of a channel, without dropping …",15,[[]]],[11,"try_send","","Attempts to send a message on this <code>UnboundedSender</code> …",14,[[],[["result",4],["unboundedtrysenderror",3]]]],[11,"into_inner","tokio_sync::mpsc::error","Get the inner value.",17,[[]]],[11,"new","tokio_sync::task","Create an <code>AtomicTask</code> initialized with the given <code>Task</code>",22,[[],["atomictask",3]]],[11,"register","","Registers the current task to be notified on calls to …",22,[[]]],[11,"register_task","","Registers the provided task to be notified on calls to …",22,[[["task",3]]]],[11,"notify","","Notifies the task that last called <code>register</code>.",22,[[]]],[11,"take_task","","Attempts to take the <code>Task</code> value out of the <code>AtomicTask</code> …",22,[[],[["task",3],["option",4]]]]],"p":[[3,"Lock"],[3,"Sender"],[3,"Receiver"],[3,"Semaphore"],[3,"Permit"],[3,"TryAcquireError"],[3,"Receiver"],[3,"Sender"],[3,"LockGuard"],[3,"Sender"],[3,"Receiver"],[3,"SendError"],[3,"TrySendError"],[3,"RecvError"],[3,"UnboundedSender"],[3,"UnboundedReceiver"],[3,"UnboundedSendError"],[3,"UnboundedTrySendError"],[3,"UnboundedRecvError"],[3,"RecvError"],[3,"TryRecvError"],[3,"AcquireError"],[3,"AtomicTask"],[3,"RecvError"],[3,"SendError"],[3,"Ref"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);